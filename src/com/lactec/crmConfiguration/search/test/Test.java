package com.lactec.crmConfiguration.search.test;

import java.util.List;

import org.bouncycastle.util.encoders.Hex;

import com.lactec.crmConfiguration.search.bean.PageBean2;
import com.lactec.crmConfiguration.search.service.GpuSearchAPI;
import com.lactec.crmConfiguration.search.socket.Client;
import com.lactec.crmConfiguration.search.socket.ConnectPool;
import com.lactec.crmConfiguration.search.socket.SocketIO;

public class Test {
	public static void main(String[] args) {
		init();
		GpuSearchAPI api = new GpuSearchAPI();
		String sql ="with tmp_15_1 as (select ca.ca_zip,cs.cs_sales_price,ca.ca_state,cs.cs_sales_price,dd.d_qoy,dd.d_year from catalog_sales cs join customer c on cs.cs_bill_customer_sk = c.c_customer_sk join customer_address ca on c.c_current_addr_sk = ca.ca_address_sk join date_dim dd on cs.cs_sold_date_sk = dd.d_date_sk)";
		

		
		//民生
		sql="create table temp1(name varchar(2),age varchar(2),number varchar(2))";
		sql="insert into temp1(name,age,number) values('a','b','c')";
//		sql="insert into temp1(name,age,number) values('A','B','C')";
//		sql="insert into temp1(name,age,number) values('c','c','C')";
		sql="drop table temp1";
//		sql="select concat(name,age,number) from temp1 #2#";
//		sql="create table temp2(name varchar(10))";
//		sql="select concat(name,age,number) from temp1";
//		sql="insert into temp2 select name from temp1";
//		sql="select * from temp1";
//		sql=" ";
//		sql="create table T1(MANDT VARCHAR(3),SEQNR varchar(3),RULEID_SND VARCHAR(3),PERIO VARCHAR(3),SECTOR VARCHAR(3) ,CBFTCODE VARCHAR(3),ACNTAGE VARCHAR(3),KM VARCHAR(3),BUZNSNTURE VARCHAR(3),OPEXPENSES VARCHAR(3),GENERALACNT VARCHAR(3),BMD_CODE VARCHAR(3),OPTNAGE VARCHAR(3),CRNSCOD VARCHAR(3),COBASEDPRO VARCHAR(3),CUSTMNO VARCHAR(3),DATYPE VARCHAR(3),SEQNR_SPR VARCHAR(3),SEQNR_ROT VARCHAR(3),BJGTLINES VARCHAR(3),ZGUEST_GROUP VARCHAR(3))";
//		sql="insert into t1 select MANDT,SEQNR,RULEID_SND,PERIO,SECTOR,CBFTCODE,ACNTAGE,KM,BUZNSNTURE,OPEXPENSES,GENERALACNT,BMD_CODE,OPTNAGE,CRNSCOD,COBASEDPRO ,CUSTMNO,DATYPE,SEQNR_SPR,SEQNR_ROT,BJGTLINES,ZGUEST_GROUP   from ZNMAT011 WHERE PERIO = '2' AND DATYPE = 'A' ";
//		sql="select MANDT from znmat004";
		sql="CREATE TABLE ZNMAT134 (MANDT VARCHAR(3),PERIO VARCHAR(7),STAFFNO VARCHAR(10),BUZNSNTURE VARCHAR(5),CATE_CODE VARCHAR(2))";
//		sql="select  PERIO from znmat134";
		sql="CREATE TABLE Z (a VARCHAR(5),b VARCHAR(5))";
//		sql="select  * from znmat134 where MANDT='801'";
//		sql="select * from Z where a='A'";
		
//		sql="insert into ZNMAT004KEYMAP(MANDT,PERIO,COKEY_OLD,COKEY_NEW) values('333','2018003','0','0')";
//		sql="select * from ZNMAT004KEYMAP where MANDT='333'";
		

//		sql="select CUSTMNO from ZNMAT004NOPKLIST";
//		sql="CREATE TABLE ZNMAT011 (MANDT VARCHAR(3),         PERIO VARCHAR(7),       SEQNR INT(50),          RULEID_FQ INT(50),      RULEID INT(1),          COKEY INT(1),   VRGAR VARCHAR(2),      VERSION VARCHAR(3),     SEQNR_SPR INT(50),      SEQNR_ROT INT(1),       RULEID_SPR INT(1),      RULEID_SND INT(1),      DATYPE VARCHAR(2),      IFDONE INT(1),         KEY_ORGANCOD INT(1),    KEY_LINECOD INT(1),     KEY_CUSTMCACOD INT(1),          KEY_PRDNO INT(1),       FTYNAM_RL INT(1),       FTYNAM_ST INT(1),     FACTORYWET INT(1),       FACTORYID INT(1),       KM INT(5),      CRNSCOD INT(1),         OPEXTYP INT(1),         ZFLOGO INT(1),          BJGTLINES INT(1),       SECTOR INT(1),         CBFTCODE INT(1),        GENERALACNT INT(7),     ACNTAGE INT(1),         OPTNAGE INT(1),         ORGANTYP INT(1),        ORGANCOD INT(1),        BUZNSNTURE INT(1),     SPECIALCODE INT(1),     CHANNEL INT(1),         LINETYP INT(1),         LINECOD INT(1),         ABJGTLINES INT(1),      COBASEDPRO INT(1),      MAKTPRO INT(1),        CUSTMNO INT(7),         CUSTMCATYP INT(1),      CUSTMCACOD INT(1),      STAFFNO INT(1),         PRDTYP INT(1),          PRDNO INT(1),   REVONUM INT(1),        ACNTNUMONLY INT(1),     BEASID INT(1),          SELIID INT(1),          OPEXPENSES DOUBLE(4),   CUSBNDNUM DOUBLE(4),    SECTORNUM DOUBLE(4),    CVSNUM DOUBLE(4),      SSBANK DOUBLE(4),       DEVICES DOUBLE(4),      INVEBAPR DOUBLE(4),     REVECST DOUBLE(4),      COST_OP DOUBLE(4),      TOTALINCM DOUBLE(4),    INTERESTIN DOUBLE(4),          CSTCAPITAL DOUBLE(4),   VALCAPITAL DOUBLE(4),   INTERESTEX DOUBLE(4),   FEECOMIN DOUBLE(4),     FEECOMEX DOUBLE(4),     REINVES DOUBLE(4),      VALUEGAINS DOUBLE(4),          EXCHANGE DOUBLE(4),     REBZNSO DOUBLE(4),      PFABLITY DOUBLE(4),     MOVEAC DOUBLE(4),       ACNTNUM DOUBLE(4),      TAMBOAIAO DOUBLE(4),  MOENDBA DOUBLE(4),       MOBGNBA DOUBLE(4),      IOATCRBTTA DOUBLE(4),   BEASSETS DOUBLE(4),     RISKWEASS DOUBLE(4),    TICKETDELS DOUBLE(4),   TICKETRATIO DOUBLE(4),         WKLODEQ DOUBLE(4),      CREDIT DOUBLE(4),       ACNTTIME DOUBLE(4),     LCOT DOUBLE(4),         VOLB DOUBLE(4),         TRANSNUM DOUBLE(4),     APPROVAL DOUBLE(4),    RMBSNUM DOUBLE(4),      RETAILSCO DOUBLE(4),    ELECSCO DOUBLE(4),      CUSTNO DOUBLE(4),       DIFFICULTY DOUBLE(4),   TOTILTIME DOUBLE(4),    INRATECO DOUBLE(4),    LENDERS DOUBLE(4),      BASHET DOUBLE(4),       CAP_SUM DOUBLE(4),      PRDNUM DOUBLE(4),       LOAN_BAL DOUBLE(4),     BAD_LOAN_BAL DOUBLE(4),         PRJ_XM INT(1),         PRJ_SYS INT(1),         PRJ_YJ INT(1),          CJXH VARCHAR(2),        BMD_CODE INT(1),        ZIZHU_CODE INT(1),      ACNTAGE_CODE INT(1),    GRPID_LOB INT(1),      GRPID_CUSCAT INT(1),    GRPID_PRDSA INT(1),     LOBID_MAPRD INT(1),     LOBID_MACUS INT(1),     CUSCAT_MAIN INT(1),     JZZB_VAL DOUBLE(4),     INC_TAX DOUBLE(4),     OPTAX DOUBLE(4),        BSGAP DOUBLE(4),        OTHER_COST DOUBLE(4),   INCOME_OPO DOUBLE(4),   EXPENSE_OPO DOUBLE(4),          BAL_AVG_M DOUBLE(4),  BAL_BW DOUBLE(4),        VOL_AVG_D DOUBLE(4),    EXPENSE_ZCJZSS DOUBLE(4),       VAL_JZSS DOUBLE(4),     CAPITAL_JG DOUBLE(4),   CAPITAL_CRED DOUBLE(4),         RWA_CR DOUBLE(4),      AVG_D_JZSS DOUBLE(4),   BAL_JRZC DOUBLE(4),     AVG_D_JRZC DOUBLE(4),   BAL_BBW DOUBLE(4),      AVG_D_BBW DOUBLE(4),    TRANS_COUNT_SCF_S DOUBLE(4),  TRANS_COUNT_MJ_S DOUBLE(4),      CATE_CODE INT(1),       CUST_CAT INT(1),        SYACNTAGE INT(1),       SYOPTNAGE INT(1),       SYSECTOR INT(1),        SYABJGTLINES INT(1),   SYPRDNO INT(1),         SYCOBASEDPRO INT(1),    SYCUST_CAT_ID INT(1),   SYCUST_CAT_DESC INT(1),         ZYDL INT(1),    ZYLX INT(1),    XMQS INT(1),    ASSET_TOL DOUBLE(4),   LIAB_SUM DOUBLE(4),     PACKCOUNT DOUBLE(4),    ZYZXBM INT(1),          CL_FICATION VARCHAR(1),         SJORTJ VARCHAR(1),      HR_SPLIT_FLG VARCHAR(1),ZGUEST_GROUP INT(1),ZGUEST_GROUP_SY INT(1))";
//		sql="select count(*) from ZNMAT004";
		
		
		
		sql="CREATE  TABLE ZNMAT004 (MANDT VARCHAR(3),KEYVALUE VARCHAR(60),PERIO VARCHAR(7),RULEID VARCHAR(50),COKEY VARCHAR(50),SEQNR VARCHAR(50),VRGAR VARCHAR(2),VERSION VARCHAR(3),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),RULEID_SND VARCHAR(50) ,DATYPE NVARCHAR(2),IFDONE VARCHAR(1),KEY_ORGANCOD VARCHAR(50),KEY_LINECOD VARCHAR(120)  ,KEY_CUSTMCACOD VARCHAR(50)  ,KEY_PRDNO VARCHAR(50)  ,FTYNAM_RL VARCHAR(24)  ,FTYNAM_ST VARCHAR(24)  ,FACTORYWET VARCHAR(3),FACTORYID VARCHAR(14)  ,KM VARCHAR(10)  ,CRNSCOD VARCHAR(5)  ,OPEXTYP VARCHAR(50)  ,ZFLOGO VARCHAR(50)  ,BJGTLINES VARCHAR(50)  ,SECTOR VARCHAR(50)  ,CBFTCODE VARCHAR(50)  ,GENERALACNT VARCHAR(50)  ,ACNTAGE VARCHAR(50)  ,OPTNAGE VARCHAR(50)  ,ORGANTYP VARCHAR(50)  ,ORGANCOD VARCHAR(50)  ,BUZNSNTURE VARCHAR(50)  ,SPECIALCODE VARCHAR(50)  ,CHANNEL VARCHAR(50)  ,LINETYP VARCHAR(50)  ,LINECOD VARCHAR(120)  ,ABJGTLINES VARCHAR(120)  ,COBASEDPRO VARCHAR(50)  ,MAKTPRO VARCHAR(50)  ,CUSTMNO VARCHAR(50)  ,CUSTMCATYP VARCHAR(50)  ,CUSTMCACOD VARCHAR(50)  ,STAFFNO VARCHAR(50)  ,PRDTYP VARCHAR(50)  ,PRDNO VARCHAR(50)  ,REVONUM VARCHAR(50)  ,ACNTNUMONLY VARCHAR(50)  ,BEASID VARCHAR(50)  ,SELIID VARCHAR(50)  ,OPEXPENSES DOUBLE ,CUSBNDNUM DOUBLE,SECTORNUM DOUBLE,CVSNUM DOUBLE,SSBANK DOUBLE,DEVICES DOUBLE,INVEBAPR DOUBLE,REVECST DOUBLE,COST_OP DOUBLE,TOTALINCM DOUBLE,INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,MOVEAC DOUBLE,ACNTNUM DOUBLE,TAMBOAIAO DOUBLE,MOENDBA DOUBLE,MOBGNBA DOUBLE,IOATCRBTTA DOUBLE,BEASSETS DOUBLE,RISKWEASS DOUBLE ,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE ,CREDIT DOUBLE ,ACNTTIME DOUBLE ,LCOT DOUBLE  ,VOLB DOUBLE ,TRANSNUM DOUBLE,APPROVAL DOUBLE,RMBSNUM DOUBLE ,RETAILSCO DOUBLE ,ELECSCO DOUBLE,CUSTNO DOUBLE ,DIFFICULTY DOUBLE,TOTILTIME DOUBLE ,INRATECO DOUBLE ,LENDERS DOUBLE,BASHET DOUBLE,CAP_SUM DOUBLE ,PRDNUM DOUBLE ,LOAN_BAL DOUBLE,BAD_LOAN_BAL DOUBLE ,PRJ_XM VARCHAR(18)  ,PRJ_SYS VARCHAR(18)  ,PRJ_YJ VARCHAR(18)  ,CJXH VARCHAR(2)  ,BMD_CODE VARCHAR(20)  ,ZIZHU_CODE VARCHAR(20)  ,ACNTAGE_CODE VARCHAR(50)  ,GRPID_LOB VARCHAR(35)  ,GRPID_CUSCAT VARCHAR(35)  ,GRPID_PRDSA VARCHAR(35)  ,LOBID_MAPRD VARCHAR(18)  ,LOBID_MACUS VARCHAR(18)  ,CUSCAT_MAIN VARCHAR(18)  ,JZZB_VAL DOUBLE,INC_TAX DOUBLE,OPTAX DOUBLE ,BSGAP DOUBLE,OTHER_COST DOUBLE,INCOME_OPO DOUBLE,EXPENSE_OPO DOUBLE ,BAL_AVG_M DOUBLE,BAL_BW DOUBLE ,VOL_AVG_D DOUBLE ,EXPENSE_ZCJZSS DOUBLE ,VAL_JZSS DOUBLE ,CAPITAL_JG DOUBLE ,CAPITAL_CRED DOUBLE,RWA_CR DOUBLE ,AVG_D_JZSS DOUBLE,BAL_JRZC DOUBLE ,AVG_D_JRZC DOUBLE,BAL_BBW DOUBLE ,AVG_D_BBW DOUBLE ,TRANS_COUNT_SCF_S DOUBLE  ,TRANS_COUNT_MJ_S DOUBLE,CATE_CODE VARCHAR(20)  ,CUST_CAT VARCHAR(18)  ,SYACNTAGE VARCHAR(50)  ,SYOPTNAGE VARCHAR(20)  ,SYSECTOR VARCHAR(50)  ,SYABJGTLINES VARCHAR(20)  ,SYPRDNO VARCHAR(20)  ,SYCOBASEDPRO VARCHAR(20)  ,SYCUST_CAT_ID VARCHAR(20)  ,SYCUST_CAT_DESC VARCHAR(20)  ,ZYDL VARCHAR(4)  ,ZYLX VARCHAR(10)  ,XMQS VARCHAR(3)  ,ASSET_TOL DOUBLE ,LIAB_SUM DOUBLE ,PACKCOUNT DOUBLE ,ZYZXBM VARCHAR(18)  ,BAL_SXZC_LY DOUBLE,RMB_TOTAL_AMT DOUBLE ,FOR_TOTAL_AMT DOUBLE  ,IS_NEW  INT,ZGUEST_GROUP VARCHAR(20)) ";
		sql="CREATE  TABLE ZNMAT004KEYMAP (MANDT VARCHAR(3),PERIO VARCHAR(7) ,COKEY_OLD VARCHAR(60),COKEY_NEW VARCHAR(60) )";
		sql="CREATE  TABLE ZNMAT004NOPKLIST (MANDT VARCHAR(3) ,CUSTMNO VARCHAR(50),PERIO VARCHAR(7) ,GRPID_CUSCAT VARCHAR(35) ) ";
		sql="CREATE  TABLE ZNMAT004TEMP (PERIO NVARCHAR(7)  ,KEYVALUE VARCHAR(60)  ,GENERALACNT VARCHAR(50)  ,ACNTAGE VARCHAR(50)  ,OPTNAGE VARCHAR(50)  ,BMD_CODE VARCHAR(20)  ,COBASEDPRO VARCHAR(50)  ,GRPID_LOB VARCHAR(35)  ,GRPID_CUSCAT VARCHAR(35)  ,GRPID_PRDSA VARCHAR(35)  ,LOBID_MAPRD VARCHAR(18)  ,LOBID_MACUS VARCHAR(18)  ,CUSCAT_MAIN VARCHAR(18)  ,CUSTMNO VARCHAR(50)  ,STAFFNO VARCHAR(50)  ,BEASID VARCHAR(50)  ,SELIID VARCHAR(50)  ,INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,JZZB_VAL DOUBLE,INC_TAX DOUBLE,OPTAX DOUBLE,BSGAP DOUBLE,OTHER_COST DOUBLE,INCOME_OPO DOUBLE,EXPENSE_OPO DOUBLE,BAL_AVG_M DOUBLE,MOBGNBA DOUBLE,MOENDBA DOUBLE,IOATCRBTTA DOUBLE,RISKWEASS DOUBLE,CAP_SUM DOUBLE,BAL_BW DOUBLE,VOL_AVG_D DOUBLE,EXPENSE_ZCJZSS DOUBLE,VAL_JZSS DOUBLE,CAPITAL_JG DOUBLE,CAPITAL_CRED DOUBLE,RWA_CR DOUBLE,AVG_D_JZSS DOUBLE,BAL_JRZC DOUBLE,AVG_D_JRZC DOUBLE,BAL_BBW DOUBLE,AVG_D_BBW DOUBLE,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE,CREDIT DOUBLE,ACNTNUM DOUBLE,CUSTNO DOUBLE,MOVEAC DOUBLE,ACNTTIME DOUBLE,LENDERS DOUBLE,VOLB DOUBLE,TRANSNUM DOUBLE,APPROVAL DOUBLE,TRANS_COUNT_SCF_S DOUBLE,DIFFICULTY DOUBLE,TRANS_COUNT_MJ_S DOUBLE,INVEBAPR DOUBLE,BAL_SXZC_LY DOUBLE,RMB_TOTAL_AMT DOUBLE,FOR_TOTAL_AMT DOUBLE,IS_NEW INT ,ZGUEST_GROUP VARCHAR(20) ) ";
		sql="CREATE  TABLE ZNMAT011 (MANDT VARCHAR(3),PERIO VARCHAR(7),SEQNR VARCHAR(50)  ,RULEID_FQ VARCHAR(50)  ,RULEID VARCHAR(50)  ,COKEY VARCHAR(50)  ,VRGAR VARCHAR(2)  ,VERSION VARCHAR(3)  ,SEQNR_SPR VARCHAR(50)  ,SEQNR_ROT VARCHAR(50)  ,RULEID_SPR VARCHAR(50)  ,RULEID_SND VARCHAR(50)  ,DATYPE VARCHAR(2)  ,IFDONE VARCHAR(1)  ,KEY_ORGANCOD VARCHAR(50)  ,KEY_LINECOD VARCHAR(120)  ,KEY_CUSTMCACOD VARCHAR(50)  ,KEY_PRDNO VARCHAR(50)  ,FTYNAM_RL VARCHAR(24)  ,FTYNAM_ST VARCHAR(24)  ,FACTORYWET VARCHAR(3)  ,FACTORYID VARCHAR(14)  ,KM VARCHAR(10)  ,CRNSCOD VARCHAR(5)  ,OPEXTYP VARCHAR(50)  ,ZFLOGO VARCHAR(50)  ,BJGTLINES VARCHAR(50)  ,SECTOR VARCHAR(50)  ,CBFTCODE VARCHAR(50)  ,GENERALACNT VARCHAR(50)  ,ACNTAGE VARCHAR(50)  ,OPTNAGE VARCHAR(50)  ,ORGANTYP VARCHAR(50)  ,ORGANCOD VARCHAR(50)  ,BUZNSNTURE VARCHAR(50)  ,SPECIALCODE VARCHAR(50)  ,CHANNEL VARCHAR(50)  ,LINETYP VARCHAR(50)  ,LINECOD VARCHAR(120)  ,ABJGTLINES VARCHAR(120)  ,COBASEDPRO VARCHAR(50)  ,MAKTPRO VARCHAR(50)  ,CUSTMNO VARCHAR(50)  ,CUSTMCATYP VARCHAR(50)  ,CUSTMCACOD VARCHAR(50)  ,STAFFNO VARCHAR(50)  ,PRDTYP VARCHAR(50)  ,PRDNO VARCHAR(50)  ,REVONUM VARCHAR(50)  ,ACNTNUMONLY VARCHAR(50)  ,BEASID VARCHAR(50)  ,SELIID VARCHAR(50)  ,OPEXPENSES DOUBLE,CUSBNDNUM DOUBLE,SECTORNUM DOUBLE,CVSNUM DOUBLE,SSBANK DOUBLE,DEVICES DOUBLE,INVEBAPR DOUBLE,REVECST DOUBLE,COST_OP DOUBLE,TOTALINCM DOUBLE,INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,MOVEAC DOUBLE,ACNTNUM DOUBLE,TAMBOAIAO DOUBLE,MOENDBA DOUBLE,MOBGNBA DOUBLE,IOATCRBTTA DOUBLE,BEASSETS DOUBLE,RISKWEASS DOUBLE,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE,CREDIT DOUBLE,ACNTTIME DOUBLE,LCOT DOUBLE,VOLB DOUBLE,TRANSNUM DOUBLE,APPROVAL DOUBLE,RMBSNUM DOUBLE,RETAILSCO DOUBLE,ELECSCO DOUBLE,CUSTNO DOUBLE,DIFFICULTY DOUBLE,TOTILTIME DOUBLE,INRATECO DOUBLE,LENDERS DOUBLE,BASHET DOUBLE,CAP_SUM DOUBLE,PRDNUM DOUBLE,LOAN_BAL DOUBLE,BAD_LOAN_BAL DOUBLE,PRJ_XM VARCHAR(18)  ,PRJ_SYS VARCHAR(18)  ,PRJ_YJ VARCHAR(18)  ,CJXH VARCHAR(2)  ,BMD_CODE VARCHAR(20)  ,ZIZHU_CODE VARCHAR(20)  ,ACNTAGE_CODE VARCHAR(50)  ,GRPID_LOB VARCHAR(35)  ,GRPID_CUSCAT VARCHAR(35)  ,GRPID_PRDSA VARCHAR(35)  ,LOBID_MAPRD VARCHAR(18)  ,LOBID_MACUS VARCHAR(18)  ,CUSCAT_MAIN VARCHAR(18)  ,JZZB_VAL DOUBLE,INC_TAX DOUBLE,OPTAX DOUBLE,BSGAP DOUBLE,OTHER_COST DOUBLE,INCOME_OPO DOUBLE,EXPENSE_OPO DOUBLE,BAL_AVG_M DOUBLE,BAL_BW DOUBLE,VOL_AVG_D DOUBLE,EXPENSE_ZCJZSS DOUBLE,VAL_JZSS DOUBLE,CAPITAL_JG DOUBLE,CAPITAL_CRED DOUBLE,RWA_CR DOUBLE,AVG_D_JZSS DOUBLE,BAL_JRZC DOUBLE,AVG_D_JRZC DOUBLE,BAL_BBW DOUBLE,AVG_D_BBW DOUBLE,TRANS_COUNT_SCF_S DOUBLE,TRANS_COUNT_MJ_S DOUBLE,CATE_CODE VARCHAR(20)  ,CUST_CAT VARCHAR(18)  ,SYACNTAGE VARCHAR(50)  ,SYOPTNAGE VARCHAR(20)  ,SYSECTOR VARCHAR(50)  ,SYABJGTLINES VARCHAR(20)  ,SYPRDNO VARCHAR(20)  ,SYCOBASEDPRO VARCHAR(20)  ,SYCUST_CAT_ID VARCHAR(20)  ,SYCUST_CAT_DESC VARCHAR(20)  ,ZYDL VARCHAR(4)  ,ZYLX VARCHAR(10)  ,XMQS VARCHAR(3)  ,ASSET_TOL DOUBLE,LIAB_SUM DOUBLE,PACKCOUNT DOUBLE,ZYZXBM VARCHAR(18) ,CL_FICATION VARCHAR(1)  ,SJORTJ VARCHAR(1)  ,HR_SPLIT_FLG VARCHAR(1)  ) ";
		sql="CREATE  TABLE ZNMAT019 (MANDT VARCHAR(3),CUS_PERIO VARCHAR(7)  ,CUS_WD_ID VARCHAR(50)  ,CUS_COKEY VARCHAR(40) ,CUS_WD_VAL VARCHAR(18) ) ";
		sql="CREATE  TABLE ZNMAT020 (MANDT VARCHAR(3) ,PRD_PERIO VARCHAR(7),PRD_WD_ID VARCHAR(18),PRD_COKEY VARCHAR(50) ,PRD_WD_VAL VARCHAR(18) ) ";
		sql="CREATE  TABLE ZNMAT021 (MANDT VARCHAR(3),LOB_PERIO VARCHAR(7),LOB_WD_ID VARCHAR(18),LOB_COKEY VARCHAR(50),LOB_WD_VAL VARCHAR(120))";
		sql="CREATE  TABLE ZNMAT023 (MANDT VARCHAR(3),PERIO VARCHAR(7) ,PRDTYP VARCHAR(50) ,PRDNO VARCHAR(50) ,PRDLEAF VARCHAR(50)  ) ";
		sql="CREATE  TABLE ZNMAT046 (MANDT VARCHAR(3),PERIO VARCHAR(7)  ,ORGANTYP VARCHAR(50)  ,ORGANCOD VARCHAR(50)  ,ORGANLEAF VARCHAR(50),ORG_WZ_LEVEL VARCHAR(18) ,ORG_SORT VARCHAR(18) )";
		sql="CREATE  TABLE ZNMAT065 (MANDT VARCHAR(3) ,PERIO VARCHAR(7) ,RULEID VARCHAR(50) ,VERSION VARCHAR(3) ,SETKIND VARCHAR(1) ,FIELD VARCHAR(30) ,FIELDGRP VARCHAR(18) ,FIELDCOD VARCHAR(50)  ,FIELDTYP VARCHAR(50) ) ";
		sql="CREATE  TABLE ZNMAT134(MANDT VARCHAR(3)  ,PERIO VARCHAR(7)  ,STAFFNO VARCHAR(50) ,BUZNSNTURE VARCHAR(50),CATE_CODE VARCHAR(20)) ";
		sql="CREATE  TABLE ZNMAT088 (MANDT VARCHAR(3) ,DATYPE VARCHAR(2) ) ";
		sql="CREATE  TABLE ZNMAT088A (MANDT VARCHAR(3) ,BS VARCHAR(1),DATYPE VARCHAR(2))";
		sql="CREATE  TABLE ZNMAT105 (MANDT VARCHAR(3)  ,PERIO VARCHAR(7) ,SEQNR VARCHAR(50)  ,RULEID_FQ VARCHAR(50)  ,RULEID VARCHAR(50)  ,COKEY VARCHAR(50)  ,VRGAR VARCHAR(2)  ,VERSION VARCHAR(3)  ,SEQNR_SPR VARCHAR(50)  ,SEQNR_ROT VARCHAR(50)  ,RULEID_SPR VARCHAR(50)  ,RULEID_SND VARCHAR(50)  ,DATYPE VARCHAR(2)  ,IFDONE VARCHAR(1)  ,KEY_ORGANCOD VARCHAR(50)  ,KEY_LINECOD VARCHAR(120)  ,KEY_CUSTMCACOD VARCHAR(50)  ,KEY_PRDNO VARCHAR(50)  ,FTYNAM_RL VARCHAR(24)  ,FTYNAM_ST VARCHAR(24)  ,FACTORYWET VARCHAR(3) ,FACTORYID VARCHAR(14)  ,KM VARCHAR(10)  ,CRNSCOD VARCHAR(5)  ,OPEXTYP VARCHAR(50)  ,ZFLOGO VARCHAR(50)  ,BJGTLINES VARCHAR(50)  ,SECTOR VARCHAR(50)  ,CBFTCODE VARCHAR(50)  ,GENERALACNT VARCHAR(50)  ,ACNTAGE VARCHAR(50)  ,OPTNAGE VARCHAR(50)  ,ORGANTYP VARCHAR(50)  ,ORGANCOD VARCHAR(50)  ,BUZNSNTURE VARCHAR(50)  ,SPECIALCODE VARCHAR(50)  ,CHANNEL VARCHAR(50)  ,LINETYP VARCHAR(50)  ,LINECOD VARCHAR(120)  ,ABJGTLINES VARCHAR(120)  ,COBASEDPRO VARCHAR(50)  ,MAKTPRO VARCHAR(50)  ,CUSTMNO VARCHAR(50)  ,CUSTMCATYP VARCHAR(50)  ,CUSTMCACOD VARCHAR(50)  ,STAFFNO VARCHAR(50)  ,PRDTYP VARCHAR(50)  ,PRDNO VARCHAR(50)  ,REVONUM VARCHAR(50)  ,ACNTNUMONLY VARCHAR(50)  ,BEASID VARCHAR(50)  ,SELIID VARCHAR(50)  ,OPEXPENSES DOUBLE,CUSBNDNUM DOUBLE,SECTORNUM DOUBLE,CVSNUM DOUBLE,SSBANK DOUBLE,DEVICES DOUBLE,INVEBAPR DOUBLE,REVECST DOUBLE,COST_OP DOUBLE,TOTALINCM DOUBLE,INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,MOVEAC DOUBLE,ACNTNUM DOUBLE,TAMBOAIAO DOUBLE,MOENDBA DOUBLE,MOBGNBA DOUBLE,IOATCRBTTA DOUBLE,BEASSETS DOUBLE,RISKWEASS DOUBLE,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE,CREDIT DOUBLE,ACNTTIME DOUBLE,LCOT DOUBLE,VOLB DOUBLE,TRANSNUM DOUBLE,APPROVAL DOUBLE,RMBSNUM DOUBLE,RETAILSCO DOUBLE,ELECSCO DOUBLE,CUSTNO DOUBLE,DIFFICULTY DOUBLE,TOTILTIME DOUBLE,INRATECO DOUBLE,LENDERS DOUBLE,BASHET DOUBLE,CAP_SUM DOUBLE,PRDNUM DOUBLE,LOAN_BAL DOUBLE,BAD_LOAN_BAL DOUBLE,PRJ_XM VARCHAR(18)  ,PRJ_SYS VARCHAR(18)  ,PRJ_YJ VARCHAR(18)  ,CJXH VARCHAR(2)  ,BMD_CODE VARCHAR(20)  ,ZIZHU_CODE VARCHAR(20)  ,ACNTAGE_CODE VARCHAR(50)  ,LOBID_MAPRD VARCHAR(18)  ,LOBID_MACUS VARCHAR(18)  ,CATE_CODE VARCHAR(20)  ,HR_SPLIT_FLG VARCHAR(1)  ,SYACNTAGE VARCHAR(50)  ,SYOPTNAGE VARCHAR(20)  ,ZGUEST_GROUP VARCHAR(20)  ) ";
		sql="CREATE  TABLE ZNMAT133 (MANDT VARCHAR(3)  ,PERIO VARCHAR(7) ,GROUP_TYPE VARCHAR(3),GROUP_ID VARCHAR(35)  ,GROUP_VAL VARCHAR(18) )";
		sql="CREATE  TABLE ZNMAT142 (MANDT VARCHAR(3)  ,PERIO NVARCHAR(7) ,CUST_NO VARCHAR(50) ,NAME VARCHAR(18)  ,GRPID_CUSCAT VARCHAR(35) ,IS_UNPACKED VARCHAR(1) ) ";
		
		
//		//存储过程1
	
//		sql = "select '801',cust_no,'2018001','' FROM ZNMAT142 WHERE PERIO = '2018001'  AND IS_UNPACKED = 'W' AND GRPID_CUSCAT <> '' ";
//
		sql = "insert into ZNMAT004NOPKLIST select '801',cust_no,'2018001','' FROM ZNMAT142 WHERE PERIO = '2018001'  AND IS_UNPACKED = 'W' AND GRPID_CUSCAT <> '' proc";
//////
		//存储过程2
//		sql="drop table e";
		sql = "create table C(STAFFNO VARCHAR(50));";
		sql = "insert into C(STAFFNO) select DISTINCT STAFFNO from ZNMAT134 WHERE PERIO = '2018001' proc";
		sql = "create table E(PRDLEAF VARCHAR(50));";
		sql = "insert into E(PRDLEAF)select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'I%' AND PERIO = '2018001' proc;";
		sql = "create table tempA(PREFIX VARCHAR(10),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,JZZB_VAL DOUBLE,INC_TAX DOUBLE,OPTAX DOUBLE,BSGAP DOUBLE,OTHER_COST DOUBLE,INCOME_OPO DOUBLE,EXPENSE_OPO DOUBLE,BAL_AVG_M DOUBLE,MOBGNBA DOUBLE,MOENDBA DOUBLE,IOATCRBTTA DOUBLE,RISKWEASS DOUBLE,CAP_SUM DOUBLE,BAL_BW DOUBLE,VOL_AVG_D DOUBLE,EXPENSE_ZCJZSS DOUBLE,VAL_JZSS DOUBLE,CAPITAL_JG DOUBLE,CAPITAL_CRED DOUBLE,RWA_CR DOUBLE,AVG_D_JZSS DOUBLE,BAL_JRZC DOUBLE,AVG_D_JRZC DOUBLE,BAL_BBW DOUBLE,AVG_D_BBW DOUBLE,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE,CREDIT DOUBLE,ACNTNUM DOUBLE,CUSTNO DOUBLE,MOVEAC DOUBLE,ACNTTIME DOUBLE,LENDERS DOUBLE,VOLB DOUBLE,TRANSNUM DOUBLE,APPROVAL DOUBLE,TRANS_COUNT_SCF_S DOUBLE,DIFFICULTY DOUBLE,TRANS_COUNT_MJ_S DOUBLE,INVEBAPR DOUBLE,BAL_SXZC_LY DOUBLE,RMB_TOTAL_AMT DOUBLE,FOR_TOTAL_AMT DOUBLE,IS_NEW INT,ZGUEST_GROUP VARCHAR(20),KEYVALUE VARCHAR(60));";
				sql = "insert into tempA SELECT 'PC',A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,IFNULL(C.STAFFNO,'99999') AS STAFFNO,A.BEASID,A.SELIID,A.INTERESTIN,A.CSTCAPITAL,A.VALCAPITAL,A.INTERESTEX,A.FEECOMIN,A.FEECOMEX,A.REINVES,A.VALUEGAINS,A.EXCHANGE,A.REBZNSO,A.PFABLITY,A.JZZB_VAL,A.INC_TAX,A.OPTAX,A.BSGAP,A.OTHER_COST,A.INCOME_OPO,A.EXPENSE_OPO,A.BAL_AVG_M,A.MOBGNBA,A.MOENDBA,A.IOATCRBTTA,A.RISKWEASS,A.CAP_SUM,A.BAL_BW,A.VOL_AVG_D,A.EXPENSE_ZCJZSS,A.VAL_JZSS,A.CAPITAL_JG,A.CAPITAL_CRED,A.RWA_CR,A.AVG_D_JZSS,A.BAL_JRZC,A.AVG_D_JRZC,A.BAL_BBW,A.AVG_D_BBW,A.TICKETDELS,A.TICKETRATIO,A.WKLODEQ,A.CREDIT,A.ACNTNUM,A.CUSTNO,A.MOVEAC,A.ACNTTIME,A.LENDERS,A.VOLB,A.TRANSNUM,A.APPROVAL,A.TRANS_COUNT_SCF_S,A.DIFFICULTY,A.TRANS_COUNT_MJ_S,A.INVEBAPR,A.BAL_SXZC_LY,A.RMB_TOTAL_AMT,A.FOR_TOTAL_AMT,A.IS_NEW,A.ZGUEST_GROUP,A.KEYVALUE "
				+ "FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST B ON A.CUSTMNO = B.CUSTMNO left JOIN  C ON  A.STAFFNO = C.STAFFNO left JOIN  E ON A.COBASEDPRO = E.PRDLEAF "
				+ "WHERE B.CUSTMNO IS NULL AND A.PERIO = '2018001' AND E.PRDLEAF IS NULL and B.PERIO <= '2018001' proc";

//        sql = "create table F(PRDLEAF VARCHAR(50));";
//        sql = "insert into F(PRDLEAF) select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE (PRDNO LIKE 'I%' OR PRDNO LIKE 'J%') AND PERIO = '2018001' proc;";
//        sql = "insert into tempA SELECT 'PC',A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,case A.STAFFNO when '' then '99999' else A.STAFFNO end AS STAFFNO,A.BEASID,A.SELIID,A.INTERESTIN,A.CSTCAPITAL,A.VALCAPITAL,A.INTERESTEX,A.FEECOMIN,A.FEECOMEX,A.REINVES,A.VALUEGAINS,A.EXCHANGE,A.REBZNSO,A.PFABLITY,A.JZZB_VAL,A.INC_TAX,A.OPTAX,A.BSGAP,A.OTHER_COST,A.INCOME_OPO,A.EXPENSE_OPO,A.BAL_AVG_M,A.MOBGNBA,A.MOENDBA,A.IOATCRBTTA,A.RISKWEASS,A.CAP_SUM,A.BAL_BW,A.VOL_AVG_D,A.EXPENSE_ZCJZSS,A.VAL_JZSS,A.CAPITAL_JG,A.CAPITAL_CRED,A.RWA_CR,A.AVG_D_JZSS,A.BAL_JRZC,A.AVG_D_JRZC,A.BAL_BBW,A.AVG_D_BBW,A.TICKETDELS,A.TICKETRATIO,A.WKLODEQ,A.CREDIT,A.ACNTNUM,A.CUSTNO,A.MOVEAC,A.ACNTTIME,A.LENDERS,A.VOLB,A.TRANSNUM,A.APPROVAL,A.TRANS_COUNT_SCF_S,A.DIFFICULTY,A.TRANS_COUNT_MJ_S,A.INVEBAPR,A.BAL_SXZC_LY,A.RMB_TOTAL_AMT,A.FOR_TOTAL_AMT,A.IS_NEW,A.ZGUEST_GROUP,A.KEYVALUE "
//        		+ "FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST B ON A.CUSTMNO = B.CUSTMNO left JOIN  F ON A.COBASEDPRO = F.PRDLEAF "
//        		+ "WHERE B.CUSTMNO IS NULL AND A.PERIO= '2018001' AND F.PRDLEAF IS NULL  and B.PERIO <= '2018001' proc";
//////////
//////////
////        sql="drop sequence temp_seq";
//		sql="create sequence temp_seq start with 0 increment by 1 maxvalue 9999999999 nocycle nocache ";
//		sql = "insert into ZNMAT004(MANDT, DATYPE, PERIO, KEYVALUE, GENERALACNT, ACNTAGE, OPTNAGE, BMD_CODE, COBASEDPRO, GRPID_LOB, GRPID_CUSCAT, GRPID_PRDSA, LOBID_MAPRD, LOBID_MACUS, CUSCAT_MAIN, CUSTMNO, STAFFNO, BEASID, SELIID, INTERESTIN, CSTCAPITAL, VALCAPITAL, INTERESTEX, FEECOMIN, FEECOMEX, REINVES, VALUEGAINS, EXCHANGE, REBZNSO, PFABLITY,	 JZZB_VAL, INC_TAX, OPTAX, BSGAP, OTHER_COST, INCOME_OPO, EXPENSE_OPO, TAMBOAIAO, MOBGNBA, MOENDBA, IOATCRBTTA, RISKWEASS, CAP_SUM, BAL_BW, VOL_AVG_D, EXPENSE_ZCJZSS, VAL_JZSS, CAPITAL_JG, CAPITAL_CRED, RWA_CR, AVG_D_JZSS, BAL_JRZC, AVG_D_JRZC, BAL_BBW, AVG_D_BBW, TICKETDELS, TICKETRATIO, WKLODEQ, CREDIT, ACNTNUM, CUSTNO, MOVEAC, ACNTTIME, LENDERS, VOLB, TRANSNUM, APPROVAL, TRANS_COUNT_SCF_S, DIFFICULTY, TRANS_COUNT_MJ_S, INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP,PACKCOUNT)"
//				+ " SELECT '801', 'B0', '2018001', concat(PREFIX,cast(NEXTVAL(temp_seq) as varchar(10))),concat(PREFIX,cast(NEXTVAL(temp_seq) as varchar(10))), ACNTAGE, OPTNAGE, BMD_CODE, COBASEDPRO, GRPID_LOB, GRPID_CUSCAT, GRPID_PRDSA, LOBID_MAPRD, LOBID_MACUS, CUSCAT_MAIN, CUSTMNO, STAFFNO, BEASID, SELIID, abs(SUM(INTERESTIN)), abs(SUM(CSTCAPITAL)), abs(SUM(VALCAPITAL)), abs(SUM(INTERESTEX)), abs(SUM(FEECOMIN)), abs(SUM(FEECOMEX)), abs(SUM(REINVES)), abs(SUM(VALUEGAINS)), abs(SUM(EXCHANGE)), abs(SUM(REBZNSO)), abs(SUM(PFABLITY)), abs(SUM(JZZB_VAL)), abs(SUM(INC_TAX)), abs(SUM(OPTAX)), abs(SUM(BSGAP)), abs(SUM(OTHER_COST)), abs(SUM(INCOME_OPO)), abs(SUM(EXPENSE_OPO)), abs(SUM(BAL_AVG_M)), abs(SUM(MOBGNBA)), abs(SUM(MOENDBA)),"
//				+ "abs(SUM(IOATCRBTTA)), abs(SUM(RISKWEASS)), abs(SUM(CAP_SUM)), abs(SUM(BAL_BW)), abs(SUM(VOL_AVG_D)), abs(SUM(EXPENSE_ZCJZSS)), abs(SUM(VAL_JZSS)), abs(SUM(CAPITAL_JG)), abs(SUM(CAPITAL_CRED)), abs(SUM(RWA_CR)), abs(SUM(AVG_D_JZSS)), abs(SUM(BAL_JRZC)), abs(SUM(AVG_D_JRZC)), abs(SUM(BAL_BBW)), abs(SUM(AVG_D_BBW)), abs(SUM(TICKETDELS)), abs(SUM(TICKETRATIO)), abs(SUM(WKLODEQ)), abs(SUM(CREDIT)), 1, abs(SUM(CUSTNO)), abs(SUM(MOVEAC)), abs(SUM(ACNTTIME)), abs(SUM(LENDERS)), abs(SUM(VOLB)), abs(SUM(TRANSNUM)), abs(SUM(APPROVAL)), abs(SUM(TRANS_COUNT_SCF_S)), abs(SUM(DIFFICULTY)), abs(SUM(TRANS_COUNT_MJ_S)), abs(SUM(INVEBAPR)),abs(SUM(BAL_SXZC_LY)),abs(SUM(RMB_TOTAL_AMT)),abs(SUM(FOR_TOTAL_AMT)),abs(SUM(IS_NEW)),ZGUEST_GROUP, COUNT(INTERESTIN) "
//				+ "FROM tempA "
//				+ "GROUP BY PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,ZGUEST_GROUP proc";

//存储过程3
//		sql = "create table T1(PERIO VARCHAR(7),KEYVALUE VARCHAR(60),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35)," +
//				"GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50), STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),ZGUEST_GROUP VARCHAR(20) )";
//		sql="insert into T1(PERIO,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,ZGUEST_GROUP) "
//				+ "SELECT A.PERIO,A.KEYVALUE,A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.GRPID_CUSCAT,IFNULL(C.STAFFNO,'9999999999'),A.BEASID,A.SELIID,A.ZGUEST_GROUP "
//				+ "FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST  B ON A.CUSTMNO = B.CUSTMNO "
//				+ "left JOIN C ON A.STAFFNO = C.STAFFNO left JOIN E ON A.COBASEDPRO = E.PRDLEAF "
//				+ "WHERE B.CUSTMNO IS NULL AND A.PERIO= '2018001' AND E.PRDLEAF IS NULL  and B.PERIO <= '2018001' proc";
//		sql="insert into ZNMAT004KEYMAP (mandt,perio,COKEY_OLD,COKEY_NEW) "
//				+ "SELECT '123','2018001',T1.KEYVALUE,T2.KEYVALUE "
//				+ "FROM ZNMAT004 T2 join T1 on T2.STAFFNO =	T1.STAFFNO and T2.ACNTAGE = T1.ACNTAGE "
//				+ " WHERE T2.PERIO = '2018001' ORDER BY T2.KEYVALUE ASC,T1.KEYVALUE ASC proc";
//存储过程4
//		 sql = "create table T3(PERIO VARCHAR(7),KEYVALUE VARCHAR(60),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50), STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),ZGUEST_GROUP VARCHAR(20) )";
//		sql = "insert into T3(PERIO,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,ZGUEST_GROUP) "
//				+ "SELECT A.PERIO,A.KEYVALUE,A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.CUSTMNO,case A.STAFFNO when '' then '9999999999' else A.STAFFNO end AS STAFFNO,A.BEASID,A.SELIID,A.ZGUEST_GROUP "
//				+ "FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST B ON A.CUSTMNO = B.CUSTMNO left JOIN E ON A.COBASEDPRO = E.PRDLEAF"
//				+ "	WHERE B.CUSTMNO IS not NULL  and B.PERIO <= '2018001' AND E.PRDLEAF IS NULL	AND  A.PERIO = '2018001' proc";
//		sql = "insert into ZNMAT004KEYMAP(mandt,perio,COKEY_OLD,COKEY_NEW) "
//				+ "SELECT '123','2018001',T3.KEYVALUE,T2.KEYVALUE "
//				+ "FROM ZNMAT004 T2 join T3 on T2.ACNTAGE = T3.ACNTAGE   AND T2.STAFFNO =	T3.STAFFNO  "
//				+ " WHERE T2.PERIO = '2018001' AND T2.DATYPE ='Y2' AND  T2.KEYVALUE like '1%' ORDER BY T2.KEYVALUE ASC,T3.KEYVALUE ASC proc";

//		sql="select * from ZNMAT004KEYMAP WHERE mandt='123'";
////////		
		
		//存储过程5
//		sql = "create table tempC(MANDT VARCHAR(3),DATYPE VARCHAR(2),PERIO VARCHAR(7),KEYVALUE VARCHAR(60),GENERALACNT VARCHAR(50),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,JZZB_VAL DOUBLE,INC_TAX DOUBLE,OPTAX DOUBLE,BSGAP DOUBLE,OTHER_COST DOUBLE,INCOME_OPO DOUBLE,EXPENSE_OPO DOUBLE,BAL_AVG_M DOUBLE,MOBGNBA DOUBLE,MOENDBA DOUBLE,IOATCRBTTA DOUBLE,RISKWEASS DOUBLE,CAP_SUM DOUBLE,BAL_BW DOUBLE,VOL_AVG_D DOUBLE,EXPENSE_ZCJZSS DOUBLE,VAL_JZSS DOUBLE,CAPITAL_JG DOUBLE,CAPITAL_CRED DOUBLE,RWA_CR DOUBLE,AVG_D_JZSS DOUBLE,BAL_JRZC DOUBLE,AVG_D_JRZC DOUBLE,BAL_BBW DOUBLE,AVG_D_BBW DOUBLE,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE,CREDIT DOUBLE,ACNTNUM DOUBLE,CUSTNO DOUBLE,MOVEAC DOUBLE,ACNTTIME DOUBLE,LENDERS DOUBLE,VOLB DOUBLE,TRANSNUM DOUBLE,APPROVAL DOUBLE,TRANS_COUNT_SCF_S DOUBLE,DIFFICULTY DOUBLE,TRANS_COUNT_MJ_S DOUBLE,INVEBAPR DOUBLE,BAL_SXZC_LY DOUBLE,RMB_TOTAL_AMT DOUBLE,FOR_TOTAL_AMT DOUBLE,IS_NEW INT,ZGUEST_GROUP VARCHAR(20),PACKCOUNT int);";
//		sql = "INSERT INTO tempC(MANDT,DATYPE,perio,KEYVALUE,GENERALACNT,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP,PACKCOUNT"
//				+") SELECT  '123', 'B0','2018001',A.KEYVALUE,A.GENERALACNT,A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.CUSTMNO,case A.STAFFNO when '' then '9999999999' else A.STAFFNO end AS STAFFNO,A.BEASID,A.SELIID,ABS(A.INTERESTIN),ABS(A.CSTCAPITAL),ABS(A.VALCAPITAL),ABS(A.INTERESTEX),ABS(A.FEECOMIN),ABS(A.FEECOMEX),ABS(A.REINVES),ABS(A.VALUEGAINS),ABS(A.EXCHANGE),ABS(A.REBZNSO),ABS(A.PFABLITY),ABS(A.JZZB_VAL),ABS(A.INC_TAX),ABS(A.OPTAX),ABS(A.BSGAP),ABS(A.OTHER_COST),ABS(A.INCOME_OPO),ABS(A.EXPENSE_OPO),ABS(A.BAL_AVG_M),ABS(A.MOBGNBA),ABS(A.MOENDBA),ABS(A.IOATCRBTTA),ABS(A.RISKWEASS),ABS(A.CAP_SUM),ABS(A.BAL_BW),ABS(A.VOL_AVG_D)"
//				+ ",ABS(A.EXPENSE_ZCJZSS),ABS(A.VAL_JZSS),ABS(A.CAPITAL_JG),ABS(A.CAPITAL_CRED),ABS(A.RWA_CR),ABS(A.AVG_D_JZSS),ABS(A.BAL_JRZC),ABS(A.AVG_D_JRZC),ABS(A.BAL_BBW),ABS(A.AVG_D_BBW),ABS(A.TICKETDELS),ABS(A.TICKETRATIO),ABS(A.WKLODEQ),ABS(A.CREDIT),ABS(A.ACNTNUM),ABS(A.CUSTNO),ABS(A.MOVEAC),ABS(A.ACNTTIME),ABS(A.LENDERS),ABS(A.VOLB),ABS(A.TRANSNUM),ABS(A.APPROVAL),ABS(A.TRANS_COUNT_SCF_S),ABS(A.DIFFICULTY),ABS(A.TRANS_COUNT_MJ_S),ABS(A.INVEBAPR),ABS(A.BAL_SXZC_LY),ABS(A.RMB_TOTAL_AMT),ABS(A.FOR_TOTAL_AMT),ABS(A.IS_NEW),A.ZGUEST_GROUP,0"
//				+" FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST B ON A.CUSTMNO = B.CUSTMNO left JOIN E ON A.COBASEDPRO = E.PRDLEAF "
//				+ "WHERE B.CUSTMNO IS NOT NULL	AND A.PERIO= '2018001'  and B.PERIO <= '2018001' AND E.PRDLEAF IS NOT NULL proc;";
//
//				sql = "INSERT INTO tempC(MANDT,DATYPE,perio,KEYVALUE,GENERALACNT,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP,PACKCOUNT"
//				+") SELECT  '123', 'B0','2018001',A.KEYVALUE,A.GENERALACNT,A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.CUSTMNO,case A.STAFFNO when '' then '9999999999' else A.STAFFNO end AS STAFFNO,A.BEASID,A.SELIID,ABS(A.INTERESTIN),ABS(A.CSTCAPITAL),ABS(A.VALCAPITAL),ABS(A.INTERESTEX),ABS(A.FEECOMIN),ABS(A.FEECOMEX),ABS(A.REINVES),ABS(A.VALUEGAINS),ABS(A.EXCHANGE),ABS(A.REBZNSO),ABS(A.PFABLITY),ABS(A.JZZB_VAL),ABS(A.INC_TAX),ABS(A.OPTAX),ABS(A.BSGAP),ABS(A.OTHER_COST),ABS(A.INCOME_OPO),ABS(A.EXPENSE_OPO),ABS(A.BAL_AVG_M),ABS(A.MOBGNBA),ABS(A.MOENDBA),ABS(A.IOATCRBTTA),ABS(A.RISKWEASS),ABS(A.CAP_SUM),ABS(A.BAL_BW),ABS(A.VOL_AVG_D)"
//				+ ",ABS(A.EXPENSE_ZCJZSS),ABS(A.VAL_JZSS),ABS(A.CAPITAL_JG),ABS(A.CAPITAL_CRED),ABS(A.RWA_CR),ABS(A.AVG_D_JZSS),ABS(A.BAL_JRZC),ABS(A.AVG_D_JRZC),ABS(A.BAL_BBW),ABS(A.AVG_D_BBW),ABS(A.TICKETDELS),ABS(A.TICKETRATIO),ABS(A.WKLODEQ),ABS(A.CREDIT),ABS(A.ACNTNUM),ABS(A.CUSTNO),ABS(A.MOVEAC),ABS(A.ACNTTIME),ABS(A.LENDERS),ABS(A.VOLB),ABS(A.TRANSNUM),ABS(A.APPROVAL),ABS(A.TRANS_COUNT_SCF_S),ABS(A.DIFFICULTY),ABS(A.TRANS_COUNT_MJ_S),ABS(A.INVEBAPR),ABS(A.BAL_SXZC_LY),ABS(A.RMB_TOTAL_AMT),ABS(A.FOR_TOTAL_AMT),ABS(A.IS_NEW),A.ZGUEST_GROUP,0"
//				+" FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST B ON A.CUSTMNO = B.CUSTMNO left JOIN F ON A.COBASEDPRO = F.PRDLEAF "
//				+ "WHERE  B.CUSTMNO IS NOT NULL	AND A.PERIO= '2018001'  and B.PERIO <= '2018001' AND F.PRDLEAF IS NOT NULL proc;";
//		sql = "INSERT INTO ZNMAT004(MANDT,DATYPE,PERIO,KEYVALUE,GENERALACNT,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,	BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP,PACKCOUNT) "
//				+ "select DISTINCT MANDT,DATYPE,PERIO,KEYVALUE,GENERALACNT,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,	BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP,PACKCOUNT "
//				+"from tempC group by MANDT,DATYPE,PERIO,KEYVALUE,GENERALACNT,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP,PACKCOUNT proc";

		//存储过程6
//		sql = "create table T4(GENERALACNT VARCHAR(50),GRPID_LOB VARCHAR(35),PERIO VARCHAR(7));";
//		sql = "insert into T4 SELECT GENERALACNT,GRPID_LOB,PERIO FROM ZNMAT004 WHERE PERIO = '2018001' GROUP BY GENERALACNT,GRPID_LOB,PERIO proc;";
//		sql = "insert into ZNMAT021 (MANDT,LOB_PERIO,LOB_WD_ID,LOB_COKEY,LOB_WD_VAL)"
//				+ " SELECT '123', '2018001', '101',T4.GENERALACNT, T2.GROUP_VAL "
//				+ "FROM T4 join ZNMAT133 T2 on T4.GRPID_LOB = T2.GROUP_ID where T2.GROUP_TYPE like '1%' AND T4.PERIO = '2018001' "
//				+ "GROUP BY T4.PERIO,T4.GENERALACNT, T2.GROUP_VAL proc;";
//////		
//		sql = "insert into ZNMAT021(MANDT,LOB_PERIO,LOB_WD_ID,LOB_COKEY,LOB_WD_VAL) SELECT '123','2018001', '102',GENERALACNT,LOBID_MAPRD "
//				+ "FROM ZNMAT004 WHERE PERIO = '2018001' AND LOBID_MAPRD <> '' "
//				+ "GROUP BY GENERALACNT,LOBID_MAPRD proc;";
//		sql = "insert into ZNMAT021 SELECT '123', '2018001', '103',GENERALACNT,LOBID_MACUS "
//				+ "FROM ZNMAT004 WHERE LOBID_MACUS <>'' AND	PERIO = '2018001' "
//				+ "GROUP BY PERIO,GENERALACNT,LOBID_MACUS proc;";
//		sql="select * from ZNMAT021 where mandt='123'";
//存储过程7
//		sql = "create table tempD(PERIO VARCHAR(7),CUSTMNO VARCHAR(50),GRPID_CUSCAT VARCHAR(35));";
//		sql = "INSERT INTO tempD SELECT PERIO,CUSTMNO,GRPID_CUSCAT FROM ZNMAT004 where PERIO = '2018001' proc;";
//		sql = "insert into ZNMAT019(CUS_PERIO,CUS_WD_ID,CUS_WD_VAL,CUS_COKEY) "
//				+ "SELECT tempD.PERIO,tempD.CUSTMNO ,B.GROUP_VAL,substr(B.GROUP_VAL,1,3) "
//				+ "FROM tempD join ZNMAT133 B on tempD.GRPID_CUSCAT = B.GROUP_ID "
//				+ "where tempD.PERIO = '2018001' "
//				+ "GROUP BY tempD.PERIO,tempD.CUSTMNO,ZNMAT133.GROUP_VAL proc;";
//		sql="select * from ZNMAT019";
		
		
//存储过程8
//		sql = "insert into ZNMAT020 (mandt, PRD_PERIO, PRD_COKEY, PRD_WD_VAL, PRD_WD_ID) "
//				+ "SELECT '123', '2018001','501', GENERALACNT, COBASEDPRO FROM ZNMAT004 "
//				+ "WHERE PERIO = '2018001' GROUP BY GENERALACNT,COBASEDPRO proc;";
//////		
				sql="drop table c";
				sql="drop table e";
				sql="drop table f";
				sql="drop table tempa";
				sql="drop table tempc";
				sql="drop table t1";
				sql="drop table t3";
				sql="drop table t4";
				sql="drop table tempd";
//		sql="select count(*) from tempC where DATYPE='B0'";
//		sql="select * from ZNMAT004 where mandt in (select mandt from ZNMAT004) ";
//		sql="select * from ZNMAT020 where mandt='123'";
//		sql="drop table ZNMAT011";
//		sql="select count(*) from ZNMAT011";
		
		
		
//		sql="CREATE TABLE ZNMAT134 (MANDT VARCHAR(3),         PERIO VARCHAR(7),       STAFFNO VARCHAR(10),    BUZNSNTURE VARCHAR(5),          CATE_CODE VARCHAR(2))";
//		sql="select STAFFNO from ZNMAT134 where STAFFNO='801'";
//		sql="create table temp1(a varchar(1))";
//		sql="CREATE TABLE temp11(MANDT VARCHAR(3),         PERIO VARCHAR(7),       STAFFNO VARCHAR(10),    BUZNSNTURE VARCHAR(5),          CATE_CODE VARCHAR(2))";
//		sql="insert into temp11 select * from ZNMAT134 limit 1 offset 1 proc";
//		sql="select * from temp11 ";
//		sql="CREATE TABLE ZNMAT065 (MANDT VARCHAR(3), 	 PERIO VARCHAR(7), 	 RULEID VARCHAR(10), 	 VERSION VARCHAR(3), 	 SETKIND VARCHAR(1), 	 FIELD VARCHAR(3), 	 FIELDGRP VARCHAR(1), 	 FIELDCOD VARCHAR(10), 	 FIELDTYP VARCHAR(5))";

//		sql="select LINECOD from ZNMAT024";
//		sql = "create sequence temp_seq start with 0 increment by 1 maxvalue 10000 nocycle nocache;";
//		sql = "create table c1 (a_1 varchar(15),a_2 varchar(15))";
//		sql = "insert into c1(a_1,a_2) select concat(mandt,cast(NEXTVAL(temp_seq) as varchar(5))),concat(perio,cast(NEXTVAL(temp_seq) as varchar(5))) from ZNMAT023 proc;";
//		sql = "select a_1  from c1  order BY a_1";
//				sql="select * from ZNMAT134";
//		
//		sql="create table d1(a varchar(3))";
//		sql="insert into d1(a) values('1')";
//		sql="create table d2(a varchar(3))";
//		sql="insert into d2(a) values('1')";
//		sql="create table d3(a varchar(3))";
//		sql="insert into d3(a) values('1')";
//		sql="select * from (select a from d1)";
//		sql="select * from d1";
//		sql="select * from d2 where a in (select a from d1)";
//		sql="select * from d2 join (select a from d1) ";
//		sql="select * from d2 where a in (select a from d1 where a in (select a from d3))";
//		sql="drop table tempa";
		
//		sql = "create table temp1(MANDT VARCHAR(3),SEQNR VARCHAR(50),RULEID_SND VARCHAR(50),PERIO VARCHAR(7),SECTOR VARCHAR(50),CBFTCODE VARCHAR(50),ACNTAGE VARCHAR(50),KM VARCHAR(10),BUZNSNTURE VARCHAR(50),OPEXPENSES DOUBLE,GENERALACNT VARCHAR(50),BMD_CODE VARCHAR(20),OPTNAGE VARCHAR(50),CRNSCOD VARCHAR(5),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),DATYPE VARCHAR(2),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),BJGTLINES VARCHAR(50))";
//		sql = "insert into temp1 select MANDT,SEQNR,RULEID_SND,PERIO,SECTOR,CBFTCODE,ACNTAGE,KM,BUZNSNTURE,OPEXPENSES,GENERALACNT,BMD_CODE,OPTNAGE,CRNSCOD,COBASEDPRO,CUSTMNO,DATYPE ,SEQNR_SPR ,SEQNR_ROT,BJGTLINES from ZNMAT011 WHERE PERIO = '2018001' AND IFDONE <> '' AND RULEID_SND = '1' AND DATYPE <> 'A0' proc";
//		sql = "create table temp2(OPEXPENSES double,SEQNR_SPR VARCHAR(50));";
//		sql = "insert into temp2 select sum(OPEXPENSES),SEQNR_SPR from ZNMAT105 WHERE PERIO = '2018001' GROUP BY SEQNR_SPR proc;";

//				sql="drop table ZNMAT105";
//		sql="CREATE TABLE ZNMAT105 (MANDT VARCHAR (3),PERIO VARCHAR (7),SEQNR VARCHAR (50),RULEID_FQ VARCHAR (50),RULEID VARCHAR (50),COKEY VARCHAR (50),VRGAR VARCHAR (2),VERSION VARCHAR (3),SEQNR_SPR VARCHAR (50),SEQNR_ROT VARCHAR (50),RULEID_SPR VARCHAR (50),RULEID_SND VARCHAR (50),DATYPE VARCHAR (2),IFDONE VARCHAR (1),KEY_ORGANCOD VARCHAR (50),KEY_LINECOD VARCHAR (120),KEY_CUSTMCACOD VARCHAR (50),KEY_PRDNO VARCHAR (50),FTYNAM_RL VARCHAR (24),FTYNAM_ST VARCHAR (24),FACTORYWET VARCHAR (3),FACTORYID VARCHAR (14),KM VARCHAR (10),CRNSCOD VARCHAR (5),OPEXTYP VARCHAR (50),ZFLOGO VARCHAR (50),BJGTLINES VARCHAR (50),SECTOR VARCHAR (50),CBFTCODE VARCHAR (50),GENERALACNT VARCHAR (50),ACNTAGE VARCHAR (50),OPTNAGE VARCHAR (50),ORGANTYP VARCHAR (50),ORGANCOD VARCHAR (50),BUZNSNTURE VARCHAR (50),SPECIALCODE VARCHAR (50),CHANNEL VARCHAR (50),LINETYP VARCHAR (50),LINECOD VARCHAR (120),ABJGTLINES VARCHAR (120),COBASEDPRO VARCHAR (50),MAKTPRO VARCHAR (50),CUSTMNO VARCHAR (50),CUSTMCATYP VARCHAR (50),CUSTMCACOD VARCHAR (50),STAFFNO VARCHAR (50),PRDTYP VARCHAR (50),PRDNO VARCHAR (50),REVONUM VARCHAR (50),ACNTNUMONLY VARCHAR (50),BEASID VARCHAR (50),SELIID VARCHAR (50),OPEXPENSES DOUBLE,CUSBNDNUM DOUBLE,SECTORNUM DOUBLE,CVSNUM DOUBLE,SSBANK DOUBLE,DEVICES DOUBLE,INVEBAPR DOUBLE,REVECST DOUBLE,COST_OP DOUBLE,TOTALINCM DOUBLE,INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,MOVEAC DOUBLE,ACNTNUM DOUBLE,TAMBOAIAO DOUBLE,MOENDBA DOUBLE,MOBGNBA DOUBLE,IOATCRBTTA DOUBLE,BEASSETS DOUBLE,RISKWEASS DOUBLE,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE,CREDIT DOUBLE,ACNTTIME DOUBLE,LCOT DOUBLE,VOLB DOUBLE,TRANSNUM DOUBLE,APPROVAL DOUBLE,RMBSNUM DOUBLE,RETAILSCO DOUBLE,ELECSCO DOUBLE,CUSTNO DOUBLE,DIFFICULTY DOUBLE,TOTILTIME DOUBLE,INRATECO DOUBLE,LENDERS DOUBLE,BASHET DOUBLE,CAP_SUM DOUBLE,PRDNUM DOUBLE,LOAN_BAL DOUBLE,BAD_LOAN_BAL DOUBLE,PRJ_XM VARCHAR (18),PRJ_SYS VARCHAR (18),PRJ_YJ VARCHAR (18),CJXH VARCHAR (2),BMD_CODE VARCHAR (20),ZIZHU_CODE VARCHAR (20),ACNTAGE_CODE VARCHAR (50),LOBID_MAPRD VARCHAR (18),LOBID_MACUS VARCHAR (18),CATE_CODE VARCHAR (20),HR_SPLIT_FLG VARCHAR (1),SYACNTAGE VARCHAR (50),SYOPTNAGE VARCHAR (20),ZGUEST_GROUP VARCHAR (20))";

//DB_FYDB
		sql = "create table temp1(MANDT VARCHAR(3),SEQNR VARCHAR(50),RULEID_SND VARCHAR(50),PERIO VARCHAR(7),SECTOR VARCHAR(50),CBFTCODE VARCHAR(50),ACNTAGE VARCHAR(50),KM VARCHAR(10),BUZNSNTURE VARCHAR(50),OPEXPENSES DOUBLE,GENERALACNT VARCHAR(50),BMD_CODE VARCHAR(20),OPTNAGE VARCHAR(50),CRNSCOD VARCHAR(5),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),DATYPE VARCHAR(2),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),BJGTLINES VARCHAR(50))";
		sql = "insert into temp1 select MANDT,SEQNR,RULEID_SND,PERIO,SECTOR,CBFTCODE,ACNTAGE,KM,BUZNSNTURE,OPEXPENSES,GENERALACNT,BMD_CODE,OPTNAGE,CRNSCOD,COBASEDPRO,CUSTMNO,DATYPE ,SEQNR_SPR ,SEQNR_ROT,BJGTLINES from ZNMAT011 WHERE PERIO = '2018001' AND IFDONE <> '' AND RULEID_SND = '1' AND DATYPE <> 'A0' proc";
		sql = "create table temp2(OPEXPENSES double,SEQNR_SPR VARCHAR(50));";
		sql = "insert into temp2 select sum(OPEXPENSES),SEQNR_SPR from ZNMAT105 WHERE PERIO = '2018001' GROUP BY SEQNR_SPR proc;";
//		sql="select * from ZNMAT105";
		sql = "create table temp3(MANDT VARCHAR(3),SEQNR VARCHAR(50),RULEID VARCHAR(50),PERIO VARCHAR(7),SECTOR VARCHAR(50),CBFTCODE VARCHAR(50),ACNTAGE VARCHAR(50),KM VARCHAR(10),BUZNSNTURE VARCHAR(50),OPEXPENSES DOUBLE,GENERALACNT VARCHAR(25),BMD_CODE VARCHAR(20),OPTNAGE VARCHAR(50),CRNSCOD VARCHAR(5),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),DATYPE VARCHAR(2),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),BJGTLINES VARCHAR(50));";
		sql = "INSERT INTO temp3 SELECT temp1.MANDT, concat('GC',temp1.SECTOR,temp1.CBFTCODE) as SEQNR, temp1.RULEID_SND AS RULEID,temp1.PERIO , temp1.SECTOR , temp1.CBFTCODE , temp1.ACNTAGE , temp1.KM , temp1.BUZNSNTURE ,SUM(temp1.OPEXPENSES-IFNULL(temp2.OPEXPENSES, 0)) AS OPEXPENSES, concat('XN',temp1.SEQNR) as GENERALACNT, temp1.BMD_CODE,temp1.OPTNAGE , temp1.CRNSCOD , 'P11020201' , 'DO00000001', 'X3',temp1.SEQNR AS SEQNR_SPR, temp1.SEQNR_ROT AS SEQNR_ROT , temp1.BJGTLINES " 
				+ "FROM temp1 left join temp2 on temp1.SEQNR = temp2.SEQNR_SPR "
				+ "GROUP BY temp1.MANDT,concat('GC',temp1.SECTOR,temp1.CBFTCODE),temp1.RULEID_SND,temp1.PERIO,temp1.SECTOR,temp1.CBFTCODE,temp1.ACNTAGE,temp1.KM,temp1.BUZNSNTURE,concat('XN',temp1.SEQNR),temp1.BMD_CODE,temp1.OPTNAGE,temp1.CRNSCOD,temp1.SEQNR,temp1.SEQNR_ROT,temp1.BJGTLINES proc";       
		sql="drop table ZNMAT103";
		sql="CREATE TABLE ZNMAT103 (MANDT VARCHAR(3),         PERIO VARCHAR(7),       SEQNR VARCHAR(50),      RULEID_FQ VARCHAR(50),   RULEID VARCHAR(50),      COKEY VARCHAR(50),       VRGAR VARCHAR(2),  VERSION VARCHAR(3),      SEQNR_SPR VARCHAR(50),          SEQNR_ROT VARCHAR(50),          RULEID_SPR VARCHAR(5),          RULEID_SND VARCHAR(50),          DATYPE VARCHAR(2),      IFDONE VARCHAR(1),          KEY_ORGANCOD VARCHAR(50),        KEY_LINECOD VARCHAR(1),         KEY_CUSTMCACOD VARCHAR(50),      KEY_PRDNO VARCHAR(50),   FTYNAM_RL VARCHAR(24),   FTYNAM_ST VARCHAR(24),   FACTORYWET VARCHAR(3),      FACTORYID VARCHAR(14),   KM VARCHAR(10),         CRNSCOD VARCHAR(5),     OPEXTYP VARCHAR(50),     ZFLOGO VARCHAR(50),      BJGTLINES VARCHAR(50),          SECTOR VARCHAR(50),          CBFTCODE VARCHAR(50),    GENERALACNT VARCHAR(50),        ACNTAGE VARCHAR(50),     OPTNAGE VARCHAR(50),     ORGANTYP VARCHAR(50),    ORGANCOD VARCHAR(50),    BUZNSNTURE VARCHAR(50),      SPECIALCODE VARCHAR(50),         CHANNEL VARCHAR(50),     LINETYP VARCHAR(50),     LINECOD VARCHAR(120),     ABJGTLINES VARCHAR(120),          COBASEDPRO VARCHAR(50),         MAKTPRO VARCHAR(50),         CUSTMNO VARCHAR(50),    CUSTMCATYP VARCHAR(50),          CUSTMCACOD VARCHAR(50),          STAFFNO VARCHAR(50),    PRDTYP VARCHAR(50),      PRDNO VARCHAR(50),       REVONUM VARCHAR(50),         ACNTNUMONLY VARCHAR(50),         BEASID VARCHAR(50),      SELIID VARCHAR(50),      OPEXPENSES DOUBLE,          CUSBNDNUM DOUBLE,   SECTORNUM DOUBLE,   CVSNUM DOUBLE,          SSBANK DOUBLE,      DEVICES DOUBLE,     INVEBAPR DOUBLE,    REVECST DOUBLE,     COST_OP DOUBLE,     TOTALINCM DOUBLE,   INTERESTIN DOUBLE,     CSTCAPITAL DOUBLE,   VALCAPITAL DOUBLE,          INTERESTEX DOUBLE,          FEECOMIN DOUBLE,    FEECOMEX DOUBLE,    REINVES DOUBLE,     VALUEGAINS DOUBLE,     EXCHANGE DOUBLE,     REBZNSO DOUBLE,     PFABLITY DOUBLE,    MOVEAC DOUBLE,      ACNTNUM DOUBLE,     TAMBOAIAO DOUBLE,   MOENDBA DOUBLE,     MOBGNBA DOUBLE,         IOATCRBTTA DOUBLE,          BEASSETS DOUBLE,    RISKWEASS DOUBLE,   TICKETDELS DOUBLE,          TICKETRATIO DOUBLE,         WKLODEQ DOUBLE,     CREDIT DOUBLE,          ACNTTIME DOUBLE,    LCOT DOUBLE,        VOLB DOUBLE,        TRANSNUM DOUBLE,    APPROVAL DOUBLE,    RMBSNUM DOUBLE,     RETAILSCO DOUBLE,   ELECSCO DOUBLE,         CUSTNO DOUBLE,      DIFFICULTY DOUBLE,          TOTILTIME DOUBLE,   INRATECO DOUBLE,    LENDERS DOUBLE,     BASHET DOUBLE,      CAP_SUM DOUBLE,         PRDNUM DOUBLE,      LOAN_BAL DOUBLE,    BAD_LOAN_BAL DOUBLE,        PRJ_XM VARCHAR(18),      PRJ_SYS VARCHAR(18),     PRJ_YJ VARCHAR(18),      CJXH VARCHAR(2),   BMD_CODE VARCHAR(20),     ZIZHU_CODE VARCHAR(20),          ACNTAGE_CODE VARCHAR(50),        LOBID_MAPRD VARCHAR(18),         LOBID_MACUS VARCHAR(18),         CATE_CODE VARCHAR(20),   HR_SPLIT_FLG VARCHAR(1),    SYACNTAGE VARCHAR(50),   SYOPTNAGE VARCHAR(20),   ZGUEST_GROUP VARCHAR(2))";
        sql = "insert into ZNMAT103(MANDT, SEQNR, RULEID, PERIO, SECTOR, CBFTCODE, ACNTAGE, KM, BUZNSNTURE, OPEXPENSES, GENERALACNT, BMD_CODE, OPTNAGE, CRNSCOD, COBASEDPRO,CUSTMNO, DATYPE, SEQNR_SPR, SEQNR_ROT, BJGTLINES)" 
				+"select MANDT, SEQNR, RULEID, PERIO, SECTOR, CBFTCODE, ACNTAGE, KM, BUZNSNTURE, OPEXPENSES, GENERALACNT, BMD_CODE, OPTNAGE, CRNSCOD, COBASEDPRO,CUSTMNO, DATYPE, SEQNR_SPR, SEQNR_ROT, BJGTLINES from temp3 where OPEXPENSES <> 0 proc";
        sql="select * from ZNMAT103";
        sql="drop table temp1";
        sql="drop table temp2";
        sql="drop table temp3";
        
        //HQ_CC2PC_CK_BZ
//        sql="CREATE  TABLE ZNMAT088 (MANDT VARCHAR(3) ,DATYPE VARCHAR(2) ) ";
//        sql="CREATE  TABLE ZNMAT011 (MANDT VARCHAR(3),PERIO VARCHAR(7), SEQNR VARCHAR(50)  , RULEID_FQ VARCHAR(50)  , RULEID VARCHAR(50)  , COKEY VARCHAR(50)  , VRGAR VARCHAR(2)  , VERSION VARCHAR(3)  , SEQNR_SPR VARCHAR(50)  , SEQNR_ROT VARCHAR(50)  , RULEID_SPR VARCHAR(50)  , RULEID_SND VARCHAR(50)  , DATYPE VARCHAR(2)  , IFDONE VARCHAR(1)  , KEY_ORGANCOD VARCHAR(50)  , KEY_LINECOD VARCHAR(120)  , KEY_CUSTMCACOD VARCHAR(50)  , KEY_PRDNO VARCHAR(50)  , FTYNAM_RL VARCHAR(24)  , FTYNAM_ST VARCHAR(24)  , FACTORYWET VARCHAR(3)  , FACTORYID VARCHAR(14)  , KM VARCHAR(10)  , CRNSCOD VARCHAR(5)  , OPEXTYP VARCHAR(50)  , ZFLOGO VARCHAR(50)  , BJGTLINES VARCHAR(50)  , SECTOR VARCHAR(50)  , CBFTCODE VARCHAR(50)  , GENERALACNT VARCHAR(50)  , ACNTAGE VARCHAR(50)  , OPTNAGE VARCHAR(50)  , ORGANTYP VARCHAR(50)  , ORGANCOD VARCHAR(50)  , BUZNSNTURE VARCHAR(50)  , SPECIALCODE VARCHAR(50)  , CHANNEL VARCHAR(50)  , LINETYP VARCHAR(50)  , LINECOD VARCHAR(120)  , ABJGTLINES VARCHAR(120)  , COBASEDPRO VARCHAR(50)  , MAKTPRO VARCHAR(50)  , CUSTMNO VARCHAR(50)  , CUSTMCATYP VARCHAR(50)  , CUSTMCACOD VARCHAR(50)  , STAFFNO VARCHAR(50)  , PRDTYP VARCHAR(50)  , PRDNO VARCHAR(50)  , REVONUM VARCHAR(50)  , ACNTNUMONLY VARCHAR(50)  , BEASID VARCHAR(50)  , SELIID VARCHAR(50)  , OPEXPENSES DOUBLE, CUSBNDNUM DOUBLE, SECTORNUM DOUBLE, CVSNUM DOUBLE, SSBANK DOUBLE, DEVICES DOUBLE, INVEBAPR DOUBLE, REVECST DOUBLE, COST_OP DOUBLE, TOTALINCM DOUBLE, INTERESTIN DOUBLE, CSTCAPITAL DOUBLE, VALCAPITAL DOUBLE, INTERESTEX DOUBLE, FEECOMIN DOUBLE, FEECOMEX DOUBLE, REINVES DOUBLE, VALUEGAINS DOUBLE, EXCHANGE DOUBLE, REBZNSO DOUBLE, PFABLITY DOUBLE, MOVEAC DOUBLE, ACNTNUM DOUBLE, TAMBOAIAO DOUBLE, MOENDBA DOUBLE, MOBGNBA DOUBLE, IOATCRBTTA DOUBLE, BEASSETS DOUBLE, RISKWEASS DOUBLE, TICKETDELS DOUBLE, TICKETRATIO DOUBLE, WKLODEQ DOUBLE, CREDIT DOUBLE, ACNTTIME DOUBLE, LCOT DOUBLE, VOLB DOUBLE, TRANSNUM DOUBLE, APPROVAL DOUBLE, RMBSNUM DOUBLE, RETAILSCO DOUBLE, ELECSCO DOUBLE, CUSTNO DOUBLE, DIFFICULTY DOUBLE, TOTILTIME DOUBLE, INRATECO DOUBLE, LENDERS DOUBLE, BASHET DOUBLE, CAP_SUM DOUBLE, PRDNUM DOUBLE, LOAN_BAL DOUBLE, BAD_LOAN_BAL DOUBLE, PRJ_XM VARCHAR(18)  , PRJ_SYS VARCHAR(18)  , PRJ_YJ VARCHAR(18)  , CJXH VARCHAR(2)  , BMD_CODE VARCHAR(20)  , ZIZHU_CODE VARCHAR(20)  , ACNTAGE_CODE VARCHAR(50)  , GRPID_LOB VARCHAR(35)  , GRPID_CUSCAT VARCHAR(35)  , GRPID_PRDSA VARCHAR(35)  , LOBID_MAPRD VARCHAR(18)  , LOBID_MACUS VARCHAR(18)  , CUSCAT_MAIN VARCHAR(18)  , JZZB_VAL DOUBLE, INC_TAX DOUBLE, OPTAX DOUBLE, BSGAP DOUBLE, OTHER_COST DOUBLE, INCOME_OPO DOUBLE, EXPENSE_OPO DOUBLE, BAL_AVG_M DOUBLE, BAL_BW DOUBLE, VOL_AVG_D DOUBLE, EXPENSE_ZCJZSS DOUBLE, VAL_JZSS DOUBLE, CAPITAL_JG DOUBLE, CAPITAL_CRED DOUBLE, RWA_CR DOUBLE, AVG_D_JZSS DOUBLE, BAL_JRZC DOUBLE, AVG_D_JRZC DOUBLE, BAL_BBW DOUBLE, AVG_D_BBW DOUBLE,TRANS_COUNT_SCF_S DOUBLE,TRANS_COUNT_MJ_S DOUBLE,CATE_CODE VARCHAR(20)  ,CUST_CAT VARCHAR(18)  ,SYACNTAGE VARCHAR(50)  ,SYOPTNAGE VARCHAR(20)  ,SYSECTOR VARCHAR(50)  ,SYABJGTLINES VARCHAR(20)  ,SYPRDNO VARCHAR(20)  ,SYCOBASEDPRO VARCHAR(20)  ,SYCUST_CAT_ID VARCHAR(20)  ,SYCUST_CAT_DESC VARCHAR(20)  ,ZYDL VARCHAR(4)  ,ZYLX VARCHAR(10)  ,XMQS VARCHAR(3)  ,ASSET_TOL DOUBLE,LIAB_SUM DOUBLE,PACKCOUNT DOUBLE,ZYZXBM VARCHAR(18) ,CL_FICATION VARCHAR(1)  ,SJORTJ VARCHAR(1)  ,HR_SPLIT_FLG VARCHAR(1)  ) ;";
        sql = "create table Y1(DATYPE VARCHAR(2));";
        sql = "insert into Y1 select DATYPE from ZNMAT088 proc";
        sql = "create table Y2(DATYPE VARCHAR(2),SEQNR VARCHAR(50),OPEXPENSES double);";
        sql = "insert into Y2 select DATYPE,SEQNR,OPEXPENSES from ZNMAT011 WHERE IFDONE = '7' AND RULEID_SND = '1' AND MANDT = '801' proc;";
        sql = "create table Y(SEQNR VARCHAR(50),OPEXPENSES double);";
        sql = "insert into Y select Y2.SEQNR,Y2.OPEXPENSES from Y2 join Y1 on Y2.DATYPE = Y1.DATYPE proc;";
		sql="drop table f";

        sql = "create table F(SEQNR_SPR VARCHAR(50),OPEXPENSES DOUBLE);";
        sql = "insert into F(SEQNR_SPR,OPEXPENSES) SELECT SEQNR_SPR,SUM(OPEXPENSES) FROM ZNMAT011 WHERE PERIO = '2018001' AND RULEID = '5' GROUP BY SEQNR_SPR proc;";
        sql = "create table FG1(OPEXPENSES DOUBLE,SEQNR VARCHAR(50),SEQNR_SPR VARCHAR(50));";
        sql = "create table FG4(OPEXPENSES DOUBLE,SEQNR VARCHAR(50),SEQNR_SPR VARCHAR(50));";
        sql = "insert into FG4 SELECT ABS(OPEXPENSES),SEQNR,SEQNR_SPR FROM ZNMAT011 WHERE PERIO = '2018001' AND RULEID = '5' proc";
        sql = "insert into FG1 SELECT OPEXPENSES,MIN(SEQNR),SEQNR_SPR FROM FG4 GROUP BY SEQNR_SPR, OPEXPENSES proc";
        sql = "create table FG2(OPEXPENSES DOUBLE,SEQNR_SPR VARCHAR(50));";
        sql = "insert into FG2 select MAX(ABS(OPEXPENSES)),SEQNR_SPR FROM ZNMAT011  WHERE PERIO = '2018001' AND RULEID = '5' proc;";
        sql = "create table FG(SEQNR_SPR VARCHAR(50),OPEXPENSES DOUBLE,SEQNR VARCHAR(50));";
        sql = "insert into FG select DISTINCT FG1.SEQNR_SPR, FG1.OPEXPENSES, FG1.SEQNR FROM FG1 join FG2 on FG1.SEQNR_SPR = FG2.SEQNR_SPR AND FG1.OPEXPENSES = FG2.OPEXPENSES proc;";
        sql = "create table B(SEQNR VARCHAR(50),OPEXPENSES DOUBLE,FGOPEXPENSES DOUBLE);";
        sql = "INSERT into B SELECT Y.SEQNR,Y.OPEXPENSES,FG.OPEXPENSES from Y join F on F.SEQNR_SPR = Y.SEQNR join FG on FG.SEQNR_SPR = Y.SEQNR proc;";
        sql = "update ZNMAT011 SET ZNMAT011.OPEXPENSES = B.OPEXPENSES from ZNMAT011,B WHERE ZNMAT011.OPEXPENSES = B.FGOPEXPENSES  AND B.SEQNR = ZNMAT011.SEQNR AND ZNMAT011.RULEID = '5' AND ZNMAT011.PERIO = '2018001'";
        sql="drop table Y";
        sql="drop table Y1";
        sql="drop table Y2";
        sql="drop table F";
        sql="drop table FG";
        sql="drop table FG2";
        sql="drop table FG4";
        sql="drop table B";
// 
//
//        
//
////ruleId_HQ_CC2PC_RL_GG
//        sql="CREATE  TABLE ZNMAT088A (MANDT VARCHAR(3) ,BS VARCHAR(1),DATYPE VARCHAR(2))";
//        sql="CREATE  TABLE ZNMAT065 (MANDT VARCHAR(3) , PERIO VARCHAR(7) , RULEID VARCHAR(50) , VERSION VARCHAR(3) , SETKIND VARCHAR(1) , FIELD VARCHAR(30) , FIELDGRP VARCHAR(18) , FIELDCOD VARCHAR(50)  ,FIELDTYP VARCHAR(50) ) ;";
        sql = "create table temp3(DATYPE varchar(2));";
        sql = "insert into temp3 SELECT DATYPE FROM ZNMAT088A WHERE BS = 'F' proc;";
        sql = "create table SEND1(CUSTMCATYP VARCHAR(50),CUSTMCACOD VARCHAR(50),BJGTLINES VARCHAR(50),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),"+
				"RULEID_SPR VARCHAR(50),CRNSCOD VARCHAR(5),ABJGTLINES VARCHAR(120),ACNTAGE VARCHAR(50),BMD_CODE VARCHAR(20),BUZNSNTURE VARCHAR(50),"+
				"CATE_CODE VARCHAR(20),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),"+
				"OPTNAGE VARCHAR(50),SECTOR VARCHAR(50),STAFFNO VARCHAR(50),ZIZHU_CODE VARCHAR(20),OPEXPENSES DOUBLE);";
        sql = "insert into SEND1 select ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE,SUM(ZTAB.OPEXPENSES) "
				+ "FROM ZNMAT011 ZTAB join temp3 on ZTAB.DATYPE = temp3.DATYPE where ZTAB.PERIO = '2018001' AND ZTAB.VERSION <> '' AND ZTAB.MANDT = '801' AND ZTAB.IFDONE <> '' "
				+ "AND ZTAB.KM in ('82088','21995','34465','77642','03382','85751','44887','39952','37632','20490') "
				+ "GROUP BY ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR ,ZTAB.SEQNR_ROT ,ZTAB.RULEID,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO, ZTAB.CUSTMNO, ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE proc;";
        sql = "create table temp1(ABJGTLINES VARCHAR(120));";
        sql = "insert into temp1 SELECT DISTINCT FIELDCOD AS ABJGTLINES FROM ZNMAT065 WHERE PERIO ='2018001' proc;";
        sql = "create table temp2(MANDT VARCHAR(3),BJGTLINES VARCHAR(50),PERIO VARCHAR(7),SEQNR VARCHAR(50),RULEID VARCHAR(50),RULEID_FQ VARCHAR(50),DATYPE VARCHAR(2),GENERALACNT VARCHAR(50),SECTORNUM DOUBLE)";
        sql = "insert into temp2 SELECT TAB.MANDT,TAB.ABJGTLINES ,'2018001' ,TAB.KEYVALUE AS SEQNR ,'HQ' AS RULEID ,'HQ' AS RULEID_FQ ,'A3' AS DATYPE ,TAB.GENERALACNT, TAB.SECTORNUM "+
		        "FROM  ZNMAT004 TAB JOIN temp1 on TAB.ABJGTLINES = temp1.ABJGTLINES where TAB.PERIO = '2018001' AND TAB.MANDT = '801'  "+
		        "GROUP BY TAB.MANDT,TAB.KEYVALUE,TAB.ABJGTLINES,TAB.GENERALACNT, TAB.SECTORNUM proc;";
        sql = "create table temp4(MANDT VARCHAR(3),CUSTMCATYP VARCHAR(50),CUSTMCACOD VARCHAR(50),BJGTLINES VARCHAR(50),PERIO VARCHAR(7),SEQNR VARCHAR(50),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),RULEID VARCHAR(50),RULEID_FQ VARCHAR(50),DATYPE VARCHAR(2),CRNSCOD VARCHAR(5),ACNTAGE VARCHAR(50),BMD_CODE VARCHAR(20),BUZNSNTURE VARCHAR(50),CATE_CODE VARCHAR(20),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),OPTNAGE VARCHAR(50),SECTOR VARCHAR(50),STAFFNO VARCHAR(50),ZIZHU_CODE VARCHAR(20),ABJGTLINES VARCHAR(120),GENERALACNT VARCHAR(50),OPEXPENSES DOUBLE);";
        sql = "insert into temp4 select temp2.MANDT,SEND1.CUSTMCATYP,SEND1.CUSTMCACOD,temp2.BJGTLINES,temp2.PERIO,temp2.SEQNR,SEND1.SEQNR_SPR,SEND1.SEQNR_ROT,SEND1.RULEID_SPR,temp2.RULEID,temp2.RULEID_FQ,temp2.DATYPE,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES,temp2.GENERALACNT,ROUND(SUM ( SEND1.OPEXPENSES * 100 / 100 * ( temp2.SECTORNUM / 47948.00000 ) ),5)  "
				+ "from temp2 cross join SEND1 on temp2.MANDT = SEND1.CUSTMCATYP GROUP BY temp2.MANDT,SEND1.CUSTMCATYP,SEND1.CUSTMCACOD,temp2.BJGTLINES,temp2.PERIO,temp2.SEQNR,SEND1.SEQNR_SPR,SEND1.SEQNR_ROT,SEND1.RULEID_SPR,temp2.RULEID,temp2.RULEID_FQ,temp2.DATYPE,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES,temp2.GENERALACNT proc;";
        sql = "INSERT INTO ZNMAT011 (MANDT,CUSTMCATYP,CUSTMCACOD,BJGTLINES,PERIO,SEQNR,SEQNR_SPR,SEQNR_ROT,RULEID_SPR,RULEID,ruleid_fq,DATYPE,CRNSCOD,ACNTAGE,BMD_CODE,BUZNSNTURE,CATE_CODE,CBFTCODE,CHANNEL,COBASEDPRO,CUSTMNO,KM,MAKTPRO,OPTNAGE,SECTOR,STAFFNO,ZIZHU_CODE ,ABJGTLINES,GENERALACNT,OPEXPENSES)"+
				" SELECT MANDT,CUSTMCATYP,CUSTMCACOD,BJGTLINES,PERIO,SEQNR,SEQNR_SPR,SEQNR_ROT,RULEID_SPR,RULEID,RULEID_FQ,DATYPE,CRNSCOD,ACNTAGE,BMD_CODE,BUZNSNTURE,CATE_CODE,CBFTCODE,CHANNEL,COBASEDPRO,CUSTMNO,KM,MAKTPRO,OPTNAGE,SECTOR,STAFFNO,ZIZHU_CODE,ABJGTLINES,GENERALACNT,OPEXPENSES "+
				" FROM temp4 where OPEXPENSES >= 0.00000000000000 or OPEXPENSES <=-0.00000000000000 proc";
        sql="drop table temp3";
        sql="drop table SEND1";
        sql="drop table temp1";
        sql="drop table temp2";
        sql="drop table temp4";
//ruleId_HQ_SJ_GG
//        sql="CREATE  TABLE ZNMAT011 (MANDT VARCHAR(3),PERIO VARCHAR(7), SEQNR VARCHAR(50)  , RULEID_FQ VARCHAR(50)  , RULEID VARCHAR(50)  , COKEY VARCHAR(50)  , VRGAR VARCHAR(2)  , VERSION VARCHAR(3)  , SEQNR_SPR VARCHAR(50)  , SEQNR_ROT VARCHAR(50)  , RULEID_SPR VARCHAR(50)  , RULEID_SND VARCHAR(50)  , DATYPE VARCHAR(2)  , IFDONE VARCHAR(1)  , KEY_ORGANCOD VARCHAR(50)  , KEY_LINECOD VARCHAR(120)  , KEY_CUSTMCACOD VARCHAR(50)  , KEY_PRDNO VARCHAR(50)  , FTYNAM_RL VARCHAR(24)  , FTYNAM_ST VARCHAR(24)  , FACTORYWET VARCHAR(3)  , FACTORYID VARCHAR(14)  , KM VARCHAR(10)  , CRNSCOD VARCHAR(5)  , OPEXTYP VARCHAR(50)  , ZFLOGO VARCHAR(50)  , BJGTLINES VARCHAR(50)  , SECTOR VARCHAR(50)  , CBFTCODE VARCHAR(50)  , GENERALACNT VARCHAR(50)  , ACNTAGE VARCHAR(50)  , OPTNAGE VARCHAR(50)  , ORGANTYP VARCHAR(50)  , ORGANCOD VARCHAR(50)  , BUZNSNTURE VARCHAR(50)  , SPECIALCODE VARCHAR(50)  , CHANNEL VARCHAR(50)  , LINETYP VARCHAR(50)  , LINECOD VARCHAR(120)  , ABJGTLINES VARCHAR(120)  , COBASEDPRO VARCHAR(50)  , MAKTPRO VARCHAR(50)  , CUSTMNO VARCHAR(50)  , CUSTMCATYP VARCHAR(50)  , CUSTMCACOD VARCHAR(50)  , STAFFNO VARCHAR(50)  , PRDTYP VARCHAR(50)  , PRDNO VARCHAR(50)  , REVONUM VARCHAR(50)  , ACNTNUMONLY VARCHAR(50)  , BEASID VARCHAR(50)  , SELIID VARCHAR(50)  , OPEXPENSES DOUBLE, CUSBNDNUM DOUBLE, SECTORNUM DOUBLE, CVSNUM DOUBLE, SSBANK DOUBLE, DEVICES DOUBLE, INVEBAPR DOUBLE, REVECST DOUBLE, COST_OP DOUBLE, TOTALINCM DOUBLE, INTERESTIN DOUBLE, CSTCAPITAL DOUBLE, VALCAPITAL DOUBLE, INTERESTEX DOUBLE, FEECOMIN DOUBLE, FEECOMEX DOUBLE, REINVES DOUBLE, VALUEGAINS DOUBLE, EXCHANGE DOUBLE, REBZNSO DOUBLE, PFABLITY DOUBLE, MOVEAC DOUBLE, ACNTNUM DOUBLE, TAMBOAIAO DOUBLE, MOENDBA DOUBLE, MOBGNBA DOUBLE, IOATCRBTTA DOUBLE, BEASSETS DOUBLE, RISKWEASS DOUBLE, TICKETDELS DOUBLE, TICKETRATIO DOUBLE, WKLODEQ DOUBLE, CREDIT DOUBLE, ACNTTIME DOUBLE, LCOT DOUBLE, VOLB DOUBLE, TRANSNUM DOUBLE, APPROVAL DOUBLE, RMBSNUM DOUBLE, RETAILSCO DOUBLE, ELECSCO DOUBLE, CUSTNO DOUBLE, DIFFICULTY DOUBLE, TOTILTIME DOUBLE, INRATECO DOUBLE, LENDERS DOUBLE, BASHET DOUBLE, CAP_SUM DOUBLE, PRDNUM DOUBLE, LOAN_BAL DOUBLE, BAD_LOAN_BAL DOUBLE, PRJ_XM VARCHAR(18)  , PRJ_SYS VARCHAR(18)  , PRJ_YJ VARCHAR(18)  , CJXH VARCHAR(2)  , BMD_CODE VARCHAR(20)  , ZIZHU_CODE VARCHAR(20)  , ACNTAGE_CODE VARCHAR(50)  , GRPID_LOB VARCHAR(35)  , GRPID_CUSCAT VARCHAR(35)  , GRPID_PRDSA VARCHAR(35)  , LOBID_MAPRD VARCHAR(18)  , LOBID_MACUS VARCHAR(18)  , CUSCAT_MAIN VARCHAR(18)  , JZZB_VAL DOUBLE, INC_TAX DOUBLE, OPTAX DOUBLE, BSGAP DOUBLE, OTHER_COST DOUBLE, INCOME_OPO DOUBLE, EXPENSE_OPO DOUBLE, BAL_AVG_M DOUBLE, BAL_BW DOUBLE, VOL_AVG_D DOUBLE, EXPENSE_ZCJZSS DOUBLE, VAL_JZSS DOUBLE, CAPITAL_JG DOUBLE, CAPITAL_CRED DOUBLE, RWA_CR DOUBLE, AVG_D_JZSS DOUBLE, BAL_JRZC DOUBLE, AVG_D_JRZC DOUBLE, BAL_BBW DOUBLE, AVG_D_BBW DOUBLE,TRANS_COUNT_SCF_S DOUBLE,TRANS_COUNT_MJ_S DOUBLE,CATE_CODE VARCHAR(20)  ,CUST_CAT VARCHAR(18)  ,SYACNTAGE VARCHAR(50)  ,SYOPTNAGE VARCHAR(20)  ,SYSECTOR VARCHAR(50)  ,SYABJGTLINES VARCHAR(20)  ,SYPRDNO VARCHAR(20)  ,SYCOBASEDPRO VARCHAR(20)  ,SYCUST_CAT_ID VARCHAR(20)  ,SYCUST_CAT_DESC VARCHAR(20)  ,ZYDL VARCHAR(4)  ,ZYLX VARCHAR(10)  ,XMQS VARCHAR(3)  ,ASSET_TOL DOUBLE,LIAB_SUM DOUBLE,PACKCOUNT DOUBLE,ZYZXBM VARCHAR(18) ,CL_FICATION VARCHAR(1)  ,SJORTJ VARCHAR(1)  ,HR_SPLIT_FLG VARCHAR(1)  ) ;"; 
//        sql="CREATE  TABLE ZNMAT065 (MANDT VARCHAR(3) , PERIO VARCHAR(7) , RULEID VARCHAR(50) , VERSION VARCHAR(3) , SETKIND VARCHAR(1) , FIELD VARCHAR(30) , FIELDGRP VARCHAR(18) , FIELDCOD VARCHAR(50)  ,FIELDTYP VARCHAR(50) ) ;";
//        sql="CREATE  TABLE ZNMAT046 (MANDT VARCHAR(3),PERIO VARCHAR(7)  ,ORGANTYP VARCHAR(50)  ,ORGANCOD VARCHAR(50)  ,ORGANLEAF VARCHAR(50),ORG_WZ_LEVEL VARCHAR(18) ,ORG_SORT VARCHAR(18) )";
//        sql="CREATE  TABLE ZNMAT004 (MANDT VARCHAR(3),KEYVALUE VARCHAR(60),PERIO VARCHAR(7),RULEID VARCHAR(50),COKEY VARCHAR(50),SEQNR VARCHAR(50),VRGAR VARCHAR(2),VERSION VARCHAR(3),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),RULEID_SND VARCHAR(50) ,DATYPE NVARCHAR(2),IFDONE VARCHAR(1),KEY_ORGANCOD VARCHAR(50),KEY_LINECOD VARCHAR(120)  ,KEY_CUSTMCACOD VARCHAR(50)  ,KEY_PRDNO VARCHAR(50)  ,FTYNAM_RL VARCHAR(24)  ,FTYNAM_ST VARCHAR(24)  ,FACTORYWET VARCHAR(3),FACTORYID VARCHAR(14)  ,KM VARCHAR(10)  ,CRNSCOD VARCHAR(5)  ,OPEXTYP VARCHAR(50)  ,ZFLOGO VARCHAR(50)  ,BJGTLINES VARCHAR(50)  ,SECTOR VARCHAR(50)  ,CBFTCODE VARCHAR(50)  ,GENERALACNT VARCHAR(50)  ,ACNTAGE VARCHAR(50)  ,OPTNAGE VARCHAR(50)  ,ORGANTYP VARCHAR(50)  ,ORGANCOD VARCHAR(50)  ,BUZNSNTURE VARCHAR(50)  ,SPECIALCODE VARCHAR(50)  ,CHANNEL VARCHAR(50)  ,LINETYP VARCHAR(50)  ,LINECOD VARCHAR(120)  ,ABJGTLINES VARCHAR(120)  ,COBASEDPRO VARCHAR(50)  ,MAKTPRO VARCHAR(50)  ,CUSTMNO VARCHAR(50)  ,CUSTMCATYP VARCHAR(50)  ,CUSTMCACOD VARCHAR(50)  ,STAFFNO VARCHAR(50)  ,PRDTYP VARCHAR(50)  ,PRDNO VARCHAR(50)  ,REVONUM VARCHAR(50)  ,ACNTNUMONLY VARCHAR(50)  ,BEASID VARCHAR(50)  ,SELIID VARCHAR(50)  ,OPEXPENSES DOUBLE ,CUSBNDNUM DOUBLE,SECTORNUM DOUBLE,CVSNUM DOUBLE,SSBANK DOUBLE,DEVICES DOUBLE,INVEBAPR DOUBLE,REVECST DOUBLE,COST_OP DOUBLE,TOTALINCM DOUBLE,INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,MOVEAC DOUBLE,ACNTNUM DOUBLE,TAMBOAIAO DOUBLE,MOENDBA DOUBLE,MOBGNBA DOUBLE,IOATCRBTTA DOUBLE,BEASSETS DOUBLE,RISKWEASS DOUBLE ,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE ,CREDIT DOUBLE ,ACNTTIME DOUBLE ,LCOT DOUBLE  ,VOLB DOUBLE ,TRANSNUM DOUBLE,APPROVAL DOUBLE,RMBSNUM DOUBLE ,RETAILSCO DOUBLE ,ELECSCO DOUBLE,CUSTNO DOUBLE ,DIFFICULTY DOUBLE,TOTILTIME DOUBLE ,INRATECO DOUBLE ,LENDERS DOUBLE,BASHET DOUBLE,CAP_SUM DOUBLE ,PRDNUM DOUBLE ,LOAN_BAL DOUBLE,BAD_LOAN_BAL DOUBLE ,PRJ_XM VARCHAR(18)  ,PRJ_SYS VARCHAR(18)  ,PRJ_YJ VARCHAR(18)  ,CJXH VARCHAR(2)  ,BMD_CODE VARCHAR(20)  ,ZIZHU_CODE VARCHAR(20)  ,ACNTAGE_CODE VARCHAR(50)  ,GRPID_LOB VARCHAR(35)  ,GRPID_CUSCAT VARCHAR(35)  ,GRPID_PRDSA VARCHAR(35)  ,LOBID_MAPRD VARCHAR(18)  ,LOBID_MACUS VARCHAR(18)  ,CUSCAT_MAIN VARCHAR(18)  ,JZZB_VAL DOUBLE,INC_TAX DOUBLE,OPTAX DOUBLE ,BSGAP DOUBLE,OTHER_COST DOUBLE,INCOME_OPO DOUBLE,EXPENSE_OPO DOUBLE ,BAL_AVG_M DOUBLE,BAL_BW DOUBLE ,VOL_AVG_D DOUBLE ,EXPENSE_ZCJZSS DOUBLE ,VAL_JZSS DOUBLE ,CAPITAL_JG DOUBLE ,CAPITAL_CRED DOUBLE,RWA_CR DOUBLE ,AVG_D_JZSS DOUBLE,BAL_JRZC DOUBLE ,AVG_D_JRZC DOUBLE,BAL_BBW DOUBLE ,AVG_D_BBW DOUBLE ,TRANS_COUNT_SCF_S DOUBLE  ,TRANS_COUNT_MJ_S DOUBLE,CATE_CODE VARCHAR(20)  ,CUST_CAT VARCHAR(18)  ,SYACNTAGE VARCHAR(50)  ,SYOPTNAGE VARCHAR(20)  ,SYSECTOR VARCHAR(50)  ,SYABJGTLINES VARCHAR(20)  ,SYPRDNO VARCHAR(20)  ,SYCOBASEDPRO VARCHAR(20)  ,SYCUST_CAT_ID VARCHAR(20)  ,SYCUST_CAT_DESC VARCHAR(20)  ,ZYDL VARCHAR(4)  ,ZYLX VARCHAR(10)  ,XMQS VARCHAR(3)  ,ASSET_TOL DOUBLE ,LIAB_SUM DOUBLE ,PACKCOUNT DOUBLE ,ZYZXBM VARCHAR(18)  ,BAL_SXZC_LY DOUBLE,RMB_TOTAL_AMT DOUBLE ,FOR_TOTAL_AMT DOUBLE  ,IS_NEW  INT,ZGUEST_GROUP VARCHAR(20)) ";
//        sql="CREATE  TABLE ZNMAT105 (MANDT VARCHAR(3)  ,PERIO VARCHAR(7) ,SEQNR VARCHAR(50)  ,RULEID_FQ VARCHAR(50)  ,RULEID VARCHAR(50)  ,COKEY VARCHAR(50)  ,VRGAR VARCHAR(2)  ,VERSION VARCHAR(3)  ,SEQNR_SPR VARCHAR(50)  ,SEQNR_ROT VARCHAR(50)  ,RULEID_SPR VARCHAR(50)  ,RULEID_SND VARCHAR(50)  ,DATYPE VARCHAR(2)  ,IFDONE VARCHAR(1)  ,KEY_ORGANCOD VARCHAR(50)  ,KEY_LINECOD VARCHAR(120)  ,KEY_CUSTMCACOD VARCHAR(50)  ,KEY_PRDNO VARCHAR(50)  ,FTYNAM_RL VARCHAR(24)  ,FTYNAM_ST VARCHAR(24)  ,FACTORYWET VARCHAR(3) ,FACTORYID VARCHAR(14)  ,KM VARCHAR(10)  ,CRNSCOD VARCHAR(5)  ,OPEXTYP VARCHAR(50)  ,ZFLOGO VARCHAR(50)  ,BJGTLINES VARCHAR(50)  ,SECTOR VARCHAR(50)  ,CBFTCODE VARCHAR(50)  ,GENERALACNT VARCHAR(50)  ,ACNTAGE VARCHAR(50)  ,OPTNAGE VARCHAR(50)  ,ORGANTYP VARCHAR(50)  ,ORGANCOD VARCHAR(50)  ,BUZNSNTURE VARCHAR(50)  ,SPECIALCODE VARCHAR(50)  ,CHANNEL VARCHAR(50)  ,LINETYP VARCHAR(50)  ,LINECOD VARCHAR(120)  ,ABJGTLINES VARCHAR(120)  ,COBASEDPRO VARCHAR(50)  ,MAKTPRO VARCHAR(50)  ,CUSTMNO VARCHAR(50)  ,CUSTMCATYP VARCHAR(50)  ,CUSTMCACOD VARCHAR(50)  ,STAFFNO VARCHAR(50)  ,PRDTYP VARCHAR(50)  ,PRDNO VARCHAR(50)  ,REVONUM VARCHAR(50)  ,ACNTNUMONLY VARCHAR(50)  ,BEASID VARCHAR(50)  ,SELIID VARCHAR(50)  ,OPEXPENSES DOUBLE,CUSBNDNUM DOUBLE,SECTORNUM DOUBLE,CVSNUM DOUBLE,SSBANK DOUBLE,DEVICES DOUBLE,INVEBAPR DOUBLE,REVECST DOUBLE,COST_OP DOUBLE,TOTALINCM DOUBLE,INTERESTIN DOUBLE,CSTCAPITAL DOUBLE,VALCAPITAL DOUBLE,INTERESTEX DOUBLE,FEECOMIN DOUBLE,FEECOMEX DOUBLE,REINVES DOUBLE,VALUEGAINS DOUBLE,EXCHANGE DOUBLE,REBZNSO DOUBLE,PFABLITY DOUBLE,MOVEAC DOUBLE,ACNTNUM DOUBLE,TAMBOAIAO DOUBLE,MOENDBA DOUBLE,MOBGNBA DOUBLE,IOATCRBTTA DOUBLE,BEASSETS DOUBLE,RISKWEASS DOUBLE,TICKETDELS DOUBLE,TICKETRATIO DOUBLE,WKLODEQ DOUBLE,CREDIT DOUBLE,ACNTTIME DOUBLE,LCOT DOUBLE,VOLB DOUBLE,TRANSNUM DOUBLE,APPROVAL DOUBLE,RMBSNUM DOUBLE,RETAILSCO DOUBLE,ELECSCO DOUBLE,CUSTNO DOUBLE,DIFFICULTY DOUBLE,TOTILTIME DOUBLE,INRATECO DOUBLE,LENDERS DOUBLE,BASHET DOUBLE,CAP_SUM DOUBLE,PRDNUM DOUBLE,LOAN_BAL DOUBLE,BAD_LOAN_BAL DOUBLE,PRJ_XM VARCHAR(18)  ,PRJ_SYS VARCHAR(18)  ,PRJ_YJ VARCHAR(18)  ,CJXH VARCHAR(2)  ,BMD_CODE VARCHAR(20)  ,ZIZHU_CODE VARCHAR(20)  ,ACNTAGE_CODE VARCHAR(50)  ,LOBID_MAPRD VARCHAR(18)  ,LOBID_MACUS VARCHAR(18)  ,CATE_CODE VARCHAR(20)  ,HR_SPLIT_FLG VARCHAR(1)  ,SYACNTAGE VARCHAR(50)  ,SYOPTNAGE VARCHAR(20)  ,ZGUEST_GROUP VARCHAR(20)  ) ";

        sql = "create table temp1(DATYPE VARCHAR(2));";
        sql = "insert into temp1 SELECT DATYPE FROM ZNMAT088;";
        sql = "create table SEND1(SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),CRNSCOD VARCHAR(5),ABJGTLINES VARCHAR(120),CATE_CODE VARCHAR(20),"
				+ "ZIZHU_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),SECTOR VARCHAR(50),BMD_CODE VARCHAR(20),"
				+ "BUZNSNTURE VARCHAR(50),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),STAFFNO VARCHAR(50),OPEXPENSES DOUBLE);";
        sql = "create table SEND2(SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),CRNSCOD VARCHAR(5),ABJGTLINES VARCHAR(120),CATE_CODE VARCHAR(20),"
				+ "ZIZHU_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),SECTOR VARCHAR(50),BMD_CODE VARCHAR(20),"
				+ "BUZNSNTURE VARCHAR(50),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),STAFFNO VARCHAR(50),OPEXPENSES DOUBLE);";
        sql = " insert into SEND2 SELECT ZTAB.SEQNR AS SEQNR_SPR ,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.CATE_CODE,ZTAB.ZIZHU_CODE,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.SECTOR,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.ACNTAGE,ZTAB.OPTNAGE,ZTAB.STAFFNO ,SUM(ZTAB.OPEXPENSES) AS OPEXPENSES "
        		+ " FROM ZNMAT011 ZTAB join temp1 on ZTAB.DATYPE = temp1.DATYPE "
        		+ " where ZTAB.PERIO = '2018001' AND ZTAB.ACNTAGE = '2'  "
        		+ " AND ZTAB.KM in ('46352','68788','32378','95641','13941','09347','28002','68302','65492','36735') "
                + " AND ZTAB.SECTOR <> '' AND ZTAB.CUSTMCATYP <> '' AND ZTAB.CUSTMCACOD <> '' AND ZTAB.MAKTPRO <> '' AND ZTAB.ABJGTLINES <> '' AND ZTAB.BJGTLINES <> '' AND ZTAB.CUSTMNO <> '' AND ZTAB.MANDT = '801' AND ZTAB.PERIO = '2018001' AND ZTAB.IFDONE <> '' "
                + " GROUP BY ZTAB.SEQNR ,ZTAB.SEQNR_ROT ,ZTAB.RULEID,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.CATE_CODE,ZTAB.ZIZHU_CODE,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.SECTOR,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.ACNTAGE,ZTAB.OPTNAGE,ZTAB.STAFFNO  ;";
////        sql="select KM from ZNMAT011 where ACNTAGE = '2'";
////        sql="select * from SEND2";
//        sql = "SELECT * FROM SEND2 order by OPEXPENSES,SEQNR_SPR LIMIT 1 OFFSET 2";
//		PageBean2 page0 = api.search(sql, 0, 0);
//		String str = page0.getRows().get(1);
//		String[] strs = str.split("");
//		String sql0 = "insert into SEND1(SEQNR_SPR,SEQNR_ROT,RULEID_SPR,CRNSCOD,ABJGTLINES,CATE_CODE,ZIZHU_CODE,COBASEDPRO,CUSTMNO,KM,MAKTPRO,SECTOR,BMD_CODE,BUZNSNTURE,CBFTCODE,CHANNEL,ACNTAGE,OPTNAGE,STAFFNO,OPEXPENSES) values ('";
//		for(int i=0;i<strs.length-1;i++){
//			sql0 += strs[i] + "','";
//			}
//		sql0 = sql0.substring(0,sql0.length()-1);
//		sql0 += strs[19] + ");";
//		sql = sql0;
//        sql="SELECT * FROM SEND1";
        sql = "create table temp2(FIELDCOD VARCHAR(50));";
        sql = "insert into temp2 SELECT DISTINCT FIELDCOD FROM ZNMAT065 WHERE FIELDGRP = '9' AND FIELD = '0' AND SETKIND = 'G' AND RULEID <> '' AND VERSION <> '' AND MANDT = '801' AND PERIO = '2018001';";
        sql = "create table temp3(ORGANLEAF VARCHAR(50));";
        sql = "insert into temp3 SELECT DISTINCT ZNMAT046.ORGANLEAF FROM ZNMAT046 join temp2 on ZNMAT046.ORGANCOD = temp2.FIELDCOD where ZNMAT046.ORGANTYP <> '601' AND ZNMAT046.MANDT = '801' AND ZNMAT046.PERIO = '2018001';";
//        sql="select * from temp5";
        sql = "CREATE TABLE temp4 (MANDT VARCHAR(3),ABJGTLINES VARCHAR(120),ACNTAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),ZIZHU_CODE VARCHAR(20),CBFTCODE VARCHAR(50),MAKTPRO VARCHAR(50),OPTNAGE VARCHAR(50),STAFFNO VARCHAR(50),ZGUEST_GROUP VARCHAR(20),GENERALACNT VARCHAR(50),PFABLITY DOUBLE,ACNTNUM DOUBLE,tempCol DOUBLE);";
        sql = "INSERT INTO temp4 SELECT TAB.MANDT,TAB.ABJGTLINES,TAB.ACNTAGE,TAB.BMD_CODE,TAB.COBASEDPRO,TAB.CUSTMNO,TAB.ZIZHU_CODE,TAB.CBFTCODE,TAB.MAKTPRO,TAB.OPTNAGE,TAB.STAFFNO,TAB.ZGUEST_GROUP ,TAB.GENERALACNT,TAB.PFABLITY,TAB.ACNTNUM,2091915.00000 * 040 /100 * TAB.ACNTNUM / 15434928.65000 + 2091915.00000 * 060 /100 * TAB.PFABLITY / 25147056315.45000"
				+ " from ZNMAT004 TAB join temp3 on TAB.OPTNAGE = temp3.ORGANLEAF"
				+ " where TAB.DATYPE <> '' AND TAB.MANDT = '801' AND TAB.PERIO = '2018001' proc";
        sql = "CREATE TABLE temp5(MANDT VARCHAR(3),PERIO VARCHAR(7),SEQNR VARCHAR(50),SEQNR_SPR  VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),RULEID VARCHAR(50), DATYPE VARCHAR(2), CRNSCOD VARCHAR(5),CATE_CODE VARCHAR(20),KM VARCHAR(10),SECTOR VARCHAR(50),BUZNSNTURE VARCHAR(50),CHANNEL VARCHAR(50),ABJGTLINES VARCHAR(120),ACNTAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),ZIZHU_CODE VARCHAR(20),CBFTCODE VARCHAR(50),MAKTPRO VARCHAR(50),OPTNAGE VARCHAR(50),STAFFNO VARCHAR(50),ZGUEST_GROUP VARCHAR(20),GENERALACNT VARCHAR(50),FACTORYID VARCHAR(14),OPEXPENSES DOUBLE)";
        sql = "insert into temp5 SELECT temp4.MANDT,'2018001' AS PERIO ,0 AS SEQNR ,SEND1.SEQNR_SPR  AS SEQNR_SPR ,SEND1.SEQNR_ROT  AS SEQNR_ROT ,SEND1.RULEID_SPR AS RULEID_SPR , "
        		+ " 'HQ' AS RULEID ,'C3' AS DATYPE ,SEND1.CRNSCOD,SEND1.CATE_CODE,SEND1.KM,SEND1.SECTOR,SEND1.BUZNSNTURE,SEND1.CHANNEL ,temp4.ABJGTLINES,temp4.ACNTAGE,temp4.BMD_CODE,temp4.COBASEDPRO,temp4.CUSTMNO,temp4.ZIZHU_CODE, "
                + " temp4.CBFTCODE,temp4.MAKTPRO,temp4.OPTNAGE,temp4.STAFFNO,temp4.ZGUEST_GROUP ,temp4.GENERALACNT,'FT' AS FACTORYID ,SEND1.OPEXPENSES,temp4.ACNTNUM,SEND1.OPEXPENSES,temp4.PFABLITY,ROUND(SUM ( SEND1.OPEXPENSES * 40 /100 * temp4.ACNTNUM / 15.11600 + SEND1.OPEXPENSES * 60 /100 * temp4.PFABLITY / 25.10000),5) AS OPEXPENSES "
                + " FROM temp4 cross join SEND1 on temp4.ABJGTLINES= SEND1.SEQNR_SPR "
                + " where temp4.MANDT = '801' AND temp4.tempCol >= 0.05000000000000 "
                + " GROUP BY temp4.MANDT, temp4.PFABLITY , SEND1.SEQNR_SPR, SEND1.SEQNR_ROT , SEND1.RULEID_SPR , SEND1.CRNSCOD, SEND1.CATE_CODE, SEND1.KM, SEND1.SECTOR, SEND1.BUZNSNTURE, SEND1.CHANNEL , temp4.ABJGTLINES, temp4.ACNTAGE, temp4.BMD_CODE, temp4.COBASEDPRO, temp4.CUSTMNO, temp4.ZIZHU_CODE, temp4.CBFTCODE, temp4.MAKTPRO, temp4.OPTNAGE, temp4.STAFFNO, temp4.ZGUEST_GROUP, temp4.GENERALACNT proc; ";
        sql = "INSERT INTO ZNMAT105(MANDT,PERIO,SEQNR,SEQNR_SPR,SEQNR_ROT,RULEID_SPR,RULEID,DATYPE,CRNSCOD,CATE_CODE,KM,SECTOR,BUZNSNTURE,CHANNEL ,ABJGTLINES,ACNTAGE,BMD_CODE,COBASEDPRO,CUSTMNO,ZIZHU_CODE,CBFTCODE,MAKTPRO,OPTNAGE,STAFFNO,ZGUEST_GROUP,GENERALACNT,FACTORYID,OPEXPENSES)"
				+ " SELECT * from temp5 where OPEXPENSES >= 0.05 or OPEXPENSES <= 0.05 proc";
        sql="select * from temp4";
        sql="drop table temp1";
        sql="drop table temp2";
        sql="drop table temp3";
        sql="drop table temp4";
        sql="drop table temp5";
        sql="drop table SEND1";
        sql="drop table SEND2";
        sql="select * from ZNMAT134";
        sql="drop table ZNMAT134";
        sql="CREATE  TABLE ZNMAT134 (MANDT VARCHAR(3) ,PERIO VARCHAR(7)  ,STAFFNO VARCHAR(50)  ,BUZNSNTURE VARCHAR(50)  ,CATE_CODE VARCHAR(20) )";
        sql="import ZNMAT134 from hdfs base_path='/user/hive/warehouse/ms.db/'  separator='|' partition_flag='dt'  date='2019-07-02';";
        sql="select * from ZNMAT134";
        sql="INSERT INTO temp3 SELECT temp1.MANDT, concat('GC',temp1.SECTOR,temp1.CBFTCODE) as SEQNR, temp1.RULEID_SND AS RULEID,temp1.PERIO , temp1.SECTOR , temp1.CBFTCODE , temp1.ACNTAGE , temp1.KM , temp1.BUZNSNTURE ,SUM(temp1.OPEXPENSES-IFNULL(temp2.OPEXPENSES, 0)) AS OPEXPENSES, concat('XN',temp1.SEQNR) as GENERALACNT, temp1.BMD_CODE,temp1.OPTNAGE , temp1.CRNSCOD , 'P11020201' , 'DO00000001', 'X3',temp1.SEQNR AS SEQNR_SPR, temp1.SEQNR_ROT AS SEQNR_ROT , temp1.BJGTLINES FROM temp1 left join temp2 on temp1.SEQNR = temp2.SEQNR_SPR GROUP BY temp1.MANDT,concat('GC',temp1.SECTOR,temp1.CBFTCODE),temp1.RULEID_SND,temp1.PERIO,temp1.SECTOR,temp1.CBFTCODE,temp1.ACNTAGE,temp1.KM,temp1.BUZNSNTURE,concat('XN',temp1.SEQNR),temp1.BMD_CODE,temp1.OPTNAGE,temp1.CRNSCOD,temp1.SEQNR,temp1.SEQNR_ROT,temp1.BJGTLINES ";
        
//        sql="select * from temp3";
//        sql="select OPEXPENSES from ZNMAT004";
//        sql="select * from ZNMAT105";
//        sql="select * from temp3";
        sql="select count(ZGUEST_GROUP) from ZNMAT011";
//        sql="SELECT DATYPE FROM ZNMAT088A WHERE BS = '1'";
        sql="SELECT * FROM ZNMAT088;";
        sql="SELECT MAX(HE) AS HE2 FROM he_temp_SQL25_20;";
//          sql="drop table kmtemp";
//          sql="CREATE TABLE ZNMAT011 (MANDT VARCHAR(3), 	 PERIO VARCHAR(7), 	 SEQNR VARCHAR(50), 	 RULEID_FQ VARCHAR(50), 	 RULEID VARCHAR(50), 	 COKEY VARCHAR(50), 	 VRGAR VARCHAR(2), 	 VERSION VARCHAR(3), 	 SEQNR_SPR VARCHAR(50), 	 SEQNR_ROT VARCHAR(50), 	 RULEID_SPR VARCHAR(50), 	 RULEID_SND VARCHAR(50), 	 DATYPE VARCHAR(2), 	 IFDONE VARCHAR(1), 	 KEY_ORGANCOD VARCHAR(50), 	 KEY_LINECOD VARCHAR(120), 	 KEY_CUSTMCACOD VARCHAR(50), 	 KEY_PRDNO VARCHAR(50), 	 FTYNAM_RL VARCHAR(24), 	 FTYNAM_ST VARCHAR(24), 	 FACTORYWET VARCHAR(3), 	 FACTORYID VARCHAR(14), 	 KM VARCHAR(10), 	 CRNSCOD VARCHAR(5), 	 OPEXTYP VARCHAR(50), 	 ZFLOGO VARCHAR(50), 	 BJGTLINES VARCHAR(50), 	 SECTOR VARCHAR(50), 	 CBFTCODE VARCHAR(50), 	 GENERALACNT VARCHAR(50), 	 ACNTAGE VARCHAR(50), 	 OPTNAGE VARCHAR(50), 	 ORGANTYP VARCHAR(50), 	 ORGANCOD VARCHAR(50), 	 BUZNSNTURE VARCHAR(50), 	 SPECIALCODE VARCHAR(50), 	 CHANNEL VARCHAR(50), 	 LINETYP VARCHAR(50), 	 LINECOD VARCHAR(120), 	 ABJGTLINES VARCHAR(120), 	 COBASEDPRO VARCHAR(50), 	 MAKTPRO VARCHAR(50), 	 CUSTMNO VARCHAR(50), 	 CUSTMCATYP VARCHAR(50), 	 CUSTMCACOD VARCHAR(50), 	 STAFFNO VARCHAR(50), 	 PRDTYP VARCHAR(50), 	 PRDNO VARCHAR(50), 	 REVONUM VARCHAR(50), 	 ACNTNUMONLY VARCHAR(50), 	 BEASID VARCHAR(50), 	 SELIID VARCHAR(50), 	 OPEXPENSES DOUBLE, 	 CUSBNDNUM DOUBLE, 	 SECTORNUM DOUBLE, 	 CVSNUM DOUBLE, 	 SSBANK DOUBLE, 	 DEVICES DOUBLE, 	 INVEBAPR DOUBLE, 	 REVECST DOUBLE, 	 COST_OP DOUBLE, 	 TOTALINCM DOUBLE, 	 INTERESTIN DOUBLE, 	 CSTCAPITAL DOUBLE, 	 VALCAPITAL DOUBLE, 	 INTERESTEX DOUBLE, 	 FEECOMIN DOUBLE, 	 FEECOMEX DOUBLE, 	 REINVES DOUBLE, 	 VALUEGAINS DOUBLE, 	 EXCHANGE DOUBLE, 	 REBZNSO DOUBLE, 	 PFABLITY DOUBLE, 	 MOVEAC DOUBLE, 	 ACNTNUM DOUBLE, 	 TAMBOAIAO DOUBLE, 	 MOENDBA DOUBLE, 	 MOBGNBA DOUBLE, 	 IOATCRBTTA DOUBLE, 	 BEASSETS DOUBLE, 	 RISKWEASS DOUBLE, 	 TICKETDELS DOUBLE, 	 TICKETRATIO DOUBLE, 	 WKLODEQ DOUBLE, 	 CREDIT DOUBLE, 	 ACNTTIME DOUBLE, 	 LCOT DOUBLE, 	 VOLB DOUBLE, 	 TRANSNUM DOUBLE, 	 APPROVAL DOUBLE, 	 RMBSNUM DOUBLE, 	 RETAILSCO DOUBLE, 	 ELECSCO DOUBLE, 	 CUSTNO DOUBLE, 	 DIFFICULTY DOUBLE, 	 TOTILTIME DOUBLE, 	 INRATECO DOUBLE, 	 LENDERS DOUBLE, 	 BASHET DOUBLE, 	 CAP_SUM DOUBLE, 	 PRDNUM DOUBLE, 	 LOAN_BAL DOUBLE, 	 BAD_LOAN_BAL DOUBLE, 	 PRJ_XM VARCHAR(18), 	 PRJ_SYS VARCHAR(18), 	 PRJ_YJ VARCHAR(18), 	 CJXH VARCHAR(2), 	 BMD_CODE VARCHAR(20), 	 ZIZHU_CODE VARCHAR(20), 	 ACNTAGE_CODE VARCHAR(50), 	 GRPID_LOB VARCHAR(35), 	 GRPID_CUSCAT VARCHAR(35), 	 GRPID_PRDSA VARCHAR(35), 	 LOBID_MAPRD VARCHAR(18), 	 LOBID_MACUS VARCHAR(18), 	 CUSCAT_MAIN VARCHAR(18), 	 JZZB_VAL DOUBLE, 	 INC_TAX DOUBLE, 	 OPTAX DOUBLE, 	 BSGAP DOUBLE, 	 OTHER_COST DOUBLE, 	 INCOME_OPO DOUBLE, 	 EXPENSE_OPO DOUBLE, 	 BAL_AVG_M DOUBLE, 	 BAL_BW DOUBLE, 	 VOL_AVG_D DOUBLE, 	 EXPENSE_ZCJZSS DOUBLE, 	 VAL_JZSS DOUBLE, 	 CAPITAL_JG DOUBLE, 	 CAPITAL_CRED DOUBLE, 	 RWA_CR DOUBLE, 	 AVG_D_JZSS DOUBLE, 	 BAL_JRZC DOUBLE, 	 AVG_D_JRZC DOUBLE, 	 BAL_BBW DOUBLE, 	 AVG_D_BBW DOUBLE, 	 TRANS_COUNT_SCF_S DOUBLE, 	 TRANS_COUNT_MJ_S DOUBLE, 	 CATE_CODE VARCHAR(20), 	 CUST_CAT VARCHAR(18), 	 SYACNTAGE VARCHAR(50), 	 SYOPTNAGE VARCHAR(20), 	 SYSECTOR VARCHAR(50), 	 SYABJGTLINES VARCHAR(20), 	 SYPRDNO VARCHAR(20), 	 SYCOBASEDPRO VARCHAR(20), 	 SYCUST_CAT_ID VARCHAR(20), 	 SYCUST_CAT_DESC VARCHAR(20), 	 ZYDL VARCHAR(4), 	 ZYLX VARCHAR(10), 	 XMQS VARCHAR(3), 	 ASSET_TOL DOUBLE,LIAB_SUM DOUBLE,PACKCOUNT DOUBLE,ZYZXBM VARCHAR(18),CL_FICATION VARCHAR(1),SJORTJ VARCHAR(1),HR_SPLIT_FLG VARCHAR(1),ZGUEST_GROUP VARCHAR(20),ZGUEST_GROUP_SY VARCHAR(50)) ;";
        sql="CREATE  TABLE ZNMAT088A (MANDT VARCHAR(3) ,BS VARCHAR(1),DATYPE VARCHAR(2));";
        sql="import ZNMAT088a from hdfs base_path='/user/hive/warehouse/ms.db/'  separator='|' partition_flag='dt'  date='2019-07-08';";
        sql="select * from znmat088a limit 1  offset 1";
//        sql="select count(*) from znmat088a";
        sql="drop table znmat088a";
        
        
        sql="";





































         




		
		
		
		
		
		
		
		
		
		
		
		
		
		//功能测试
//		sql="select current_timestamp() from ZNMAT134";
//        sql="create table temp1(ip varchar(30))";
//        sql="create table temp2(ip varchar(20))";
//        sql="insert into temp1(time) values('2019-02-19 11:06:46')";
//        sql="insert into temp2(ip) values('2.2.2.2')";
//        sql="select * from temp1";
//	    sql="select get_ip_addr(ip) from temp1";
//		sql="select ip from temp1 exist (select ip from temp2)";
//	    sql="select ip from temp1 where since_epoch(ip)-since_epoch('2019-02-19 11:06:50')>0";
//	    sql="select cast(10 as double) from temp1";
//	    sql="with table as (select * from temp2) select table.ip from table";
//	    sql="drop table temp1";
//        sql="select left(ip,4) from temp2";
		
		
		
		
		
		
		
		
		
		
		
		
		//中信
//		sql="select lpad('3',4,'0') from ACMG_T_PECUST_VALUE_INFO";
//		sql="create table temp1(name varchar(3),age varchar(3))";
//		sql="create table temp2(name varchar(3),age int(3))";
//		 sql="insert into temp1(name) values(1)";
//		 sql="insert into temp1(name,age) values('a','1')";
//		 sql="insert into temp1(name,age) values('acc','2')";
//		 sql="insert into temp1(name,age) values('ad','3')";
//		 sql="insert into temp2(name,age) values('aa','1')";
//		 sql="insert into temp2(name,age) values('cc','3')";
//		 sql="select medium name from temp1";
//		 sql="select temp1.name,temp2.name from temp1 left join temp2 on temp1.age=temp2.age and temp2.age='1' left join temp2 on temp1.age=temp2.age and temp2.age='3' ";
//		 sql="select *,2 tab from temp1";
//		 sql="select rpad('tech',8,'0') from temp1";
//		 sql="select coalesce(name) from temp1";
//		 sql="drop table temp1";
//		 sql="select coalesce(age,name) from temp1 ";
//		 sql="select cast('9.0' as decimal) from temp1";
//		 sql="select convert(varchar(19),'2018-06-07 07:33:43') from temp1";
//		 sql="select round(1.54,0) from temp1";
//		 sql="select  SINCE_EPOCH('2018-06-07 07:33:43')-SINCE_EPOCH('2018-06-07 07:34:43') from temp1";
//		 sql="select getdate() from temp1";
//		 sql="select replace(name,'a','1') from temp1";
//		 sql="select left(name,1) from temp1";
//		 sql="select DATEADD(day,2,'2014-12-30') from temp1";
//		 sql="select decode(name,'a','1','2') from temp1";
//		 sql="select rand() from temp1";
		
		
		
		
		
		
		
		
		//齐鲁存储过程1
//		sql="CREATE TABLE TMP_ACMG_T_PECUST_VALUE_INFO(CUST_NO             int,CUST_MGR_NO         VARCHAR(10),CUST_MGR            VARCHAR(10),BELONG_ORG_NO       VARCHAR(10),PECUST_NAME         VARCHAR(10),CERT_NO             VARCHAR(10),CERT_TYPE           VARCHAR(10),CUST_LEVEL_M        VARCHAR(10),SPEC_CUST_LVL_DT    VARCHAR(10),SPEC_LVL_EXPIRE_DT  VARCHAR(10),IS_SPEC_EFF         VARCHAR(10),IS_SPEC_QUOA        VARCHAR(10),CUST_TYPE          int,INSERT_USER         VARCHAR(10),INSERT_USER_NAME    VARCHAR(10),CREATOR_ORG_NO      VARCHAR(10),CREATOR_ORG         VARCHAR(10),INSERT_IPADDRESS    VARCHAR(10),INSERT_DATETIME     VARCHAR(10),UPDATE_USER         VARCHAR(10),UPDATE_USER_NAME    VARCHAR(10),MODIFER_ORG_NO      VARCHAR(10),MODIFER_ORG         VARCHAR(10),UPDATE_IPADDRESS    VARCHAR(10),UPDATE_DATETIME     VARCHAR(10))";
//		sql="select CUST_NO,cust_mgr_no,cust_mgr,belong_org_no,PECUST_NAME,CERT_NO,CERT_TYPE,CUST_LEVEL_M  ,SPEC_CUST_LVL_DT,SPEC_LVL_EXPIRE_DT,IS_SPEC_EFF,IS_SPEC_QUOA,CUST_TYPE  ,insert_user,insert_user_name,creator_org_no,creator_org,insert_ipaddress,insert_datetime,update_user,update_user_name,modifer_org_no,modifer_org,update_ipaddress,update_datetime FROM ACMG_T_PECUST_VALUE_INFO WHERE CUST_TYPE>=2";
//        sql="INSERT INTO  TMP_ACMG_T_PECUST_VALUE_INFO SELECT CUST_NO,cust_mgr_no,cust_mgr,belong_org_no,PECUST_NAME,CERT_NO,CERT_TYPE,CUST_LEVEL_M  ,SPEC_CUST_LVL_DT,SPEC_LVL_EXPIRE_DT,IS_SPEC_EFF,IS_SPEC_QUOA,CUST_TYPE  ,insert_user,insert_user_name,creator_org_no,creator_org,insert_ipaddress,insert_datetime,update_user,update_user_name,modifer_org_no,modifer_org,update_ipaddress,update_datetime FROM ACMG_T_PECUST_VALUE_INFO WHERE CUST_TYPE>=2 proc ";
//        sql="select count(*) from TMP_ACMG_T_PECUST_VALUE_INFO";
//		sql="create table temp1(CUST_NO int,value1 varchar(2),value2 varchar(2),value3 varchar(2),value4 varchar(2),value5 varchar(2),value6 varchar(2),value7 varchar(2),value8 varchar(2),value9 varchar(2),value10 varchar(2),value11 varchar(2),value12 varchar(2),value13 varchar(2),value14 varchar(2),value15 varchar(2),value16 varchar(2),value17 varchar(2),value18 varchar(2),value19 varchar(2),value20 varchar(2),value21 varchar(2),value22 varchar(2),value23 varchar(2),value24 varchar(2),value25 varchar(2),value26 varchar(2),value27 varchar(2),value28 varchar(2),value29 varchar(30))";
//        sql="select b.CUST_NO,case when  substr(ifnull(c.cust_prd_flg,'22222222'),1,1)='1' then '1'  when  substr(ifnull(c.cust_prd_flg,'22222222'),2,1)='1' then '1' else '2' end ,substr(ifnull(c.cust_prd_flg,'22222222'),8,1),substr(ifnull(c.cust_prd_flg,'22222222'),5,1),case when c.debt_bal > 0 then '1' else '2' end ,substr(ifnull(c.cust_prd_flg,'22222222'),9,1),substr(ifnull(c.cust_prd_flg,'22222222'),18,1),case when c.intrust_bal>0 then '1' else '2' end ,substr(ifnull(c.cust_prd_flg,'22222222'),19,1),case when   substr(ifnull(c.cust_prd_flg,'22222222'),10,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),11,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),12,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),13,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),14,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),15,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),16,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),17,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),18,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),19,1)='1' then '1'  else '2' end, case when substr(ifnull(c.cust_prd_flg,'22222222'),12,1)='1' then '1'  when substr(ifnull(c.cust_prd_flg,'22222222'),13,1)='1' then '1'  else '2' end, substr(ifnull(c.cust_prd_flg,'22222222'),10,1),substr(ifnull(c.cust_prd_flg,'22222222'),6,1),substr(ifnull(c.cust_prd_flg,'22222222'),21,1),substr(ifnull(c.cust_prd_flg,'22222222'),20,1),substr(ifnull(c.cust_prd_flg,'22222222'),3,1),substr(ifnull(c.ebank_cust,'20000002'),length(ifnull(c.ebank_cust,'20000002')),1),substr(ifnull(c.pbank_cust,'20000002'),length(ifnull(c.pbank_cust,'20000002')),1),substr(ifnull(c.mobile_bank_cust,'20000002'),length(ifnull(c.mobile_bank_cust,'20000002')),1),case when c.loan_amt>0 then '1' else '2' end,substr(ifnull(c.is_loan_overdue,'20000002'),length(ifnull(c.is_loan_overdue,'20000002')),1),substr(c.is_loan_clear,length(c.is_loan_clear),1),substr(ifnull(c.is_pay_cust,'20000002'),length(ifnull(c.is_pay_cust,'20000002')),1),substr(ifnull(c.vip_card_cust,'20000002'),length(ifnull(c.vip_card_cust,'20000002')),1),substr(ifnull(c.is_cc_cust,'20000002'),length(ifnull(c.is_cc_cust,'20000002')),1),substr(ifnull(b.is_bank_emp,'20000002'),length(ifnull(b.is_bank_emp,'20000002')),1),substr(ifnull(c.is_directbank_cust ,'20000002'),length(ifnull(c.is_directbank_cust ,'20000002')),1),case when b2.cust_mgr_no='' then '2'  else '1' end ,'2' from ACMG_T_PECUST_BASIC_INFO   b    join ACMG_R_PECUST_DISTRIBUTE_INFO  b2 on b.cust_no=b2.cust_no left   join ACMG_T_PECUST_CUSTLEVEL        c1 on b.cust_no=c1.cust_no left   join BCST_T_PECUST_VALUE_INFO_TMP   c  on b.cust_no=c.cust_no left   join ACMG_T_MVP_CONTRACT_INFO       d  on b.cust_no=d.cust_no left   join BACC_T_MOST_CARD_INFO          e  on b.cust_no=e.cust_no left   join ACMG_T_CUST_CONTRI             f  on b.cust_no=f.cust_no left   join TMP_ACMG_T_PECUST_VALUE_INFO   g2 on b.cust_no=g2.cust_no  left   join auap_t_org                   org on b2.org_no=org.org_id where g2.cust_type= 3";
//        sql="insert into temp1(CUST_NO,value1,value2,value3,value4,value5,value6,value7,value8,value9 ,value10 ,value11 ,value12 ,value13,value14,value15,value16 ,value17 ,value18 ,value19 ,value20 ,value21 ,value22 ,value23 ,value24 ,value25 ,value26,value27,value28) select b.CUST_NO,case when  substr(ifnull(c.cust_prd_flg,'22222222'),1,1)='1' then '1'  when  substr(ifnull(c.cust_prd_flg,'22222222'),2,1)='1' then '1' else '2' end ,substr(ifnull(c.cust_prd_flg,'22222222'),8,1),substr(ifnull(c.cust_prd_flg,'22222222'),5,1),case when c.debt_bal > 0 then '1' else '2' end ,substr(ifnull(c.cust_prd_flg,'22222222'),9,1),substr(ifnull(c.cust_prd_flg,'22222222'),18,1),case when c.intrust_bal>0 then '1' else '2' end ,substr(ifnull(c.cust_prd_flg,'22222222'),19,1),case when   substr(ifnull(c.cust_prd_flg,'22222222'),10,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),11,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),12,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),13,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),14,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),15,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),16,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),17,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),18,1)='1' then '1' when   substr(ifnull(c.cust_prd_flg,'22222222'),19,1)='1' then '1'  else '2' end, case when substr(ifnull(c.cust_prd_flg,'22222222'),12,1)='1' then '1'  when substr(ifnull(c.cust_prd_flg,'22222222'),13,1)='1' then '1'  else '2' end, substr(ifnull(c.cust_prd_flg,'22222222'),10,1),substr(ifnull(c.cust_prd_flg,'22222222'),6,1),substr(ifnull(c.cust_prd_flg,'22222222'),21,1),substr(ifnull(c.cust_prd_flg,'22222222'),20,1),substr(ifnull(c.cust_prd_flg,'22222222'),3,1),substr(ifnull(c.ebank_cust,'20000002'),length(ifnull(c.ebank_cust,'20000002')),1),substr(ifnull(c.pbank_cust,'20000002'),length(ifnull(c.pbank_cust,'20000002')),1),substr(ifnull(c.mobile_bank_cust,'20000002'),length(ifnull(c.mobile_bank_cust,'20000002')),1),case when c.loan_amt>0 then '1' else '2' end,substr(ifnull(c.is_loan_overdue,'20000002'),length(ifnull(c.is_loan_overdue,'20000002')),1),substr(c.is_loan_clear,length(c.is_loan_clear),1),substr(ifnull(c.is_pay_cust,'20000002'),length(ifnull(c.is_pay_cust,'20000002')),1),substr(ifnull(c.vip_card_cust,'20000002'),length(ifnull(c.vip_card_cust,'20000002')),1),substr(ifnull(c.is_cc_cust,'20000002'),length(ifnull(c.is_cc_cust,'20000002')),1),substr(ifnull(b.is_bank_emp,'20000002'),length(ifnull(b.is_bank_emp,'20000002')),1),substr(ifnull(c.is_directbank_cust ,'20000002'),length(ifnull(c.is_directbank_cust ,'20000002')),1),case when b2.cust_mgr_no='' then '2'  else '1' end ,'2' from ACMG_T_PECUST_BASIC_INFO   b    join ACMG_R_PECUST_DISTRIBUTE_INFO  b2 on b.cust_no=b2.cust_no left   join ACMG_T_PECUST_CUSTLEVEL        c1 on b.cust_no=c1.cust_no left   join BCST_T_PECUST_VALUE_INFO_TMP   c  on b.cust_no=c.cust_no left   join ACMG_T_MVP_CONTRACT_INFO       d  on b.cust_no=d.cust_no left   join BACC_T_MOST_CARD_INFO          e  on b.cust_no=e.cust_no left   join ACMG_T_CUST_CONTRI             f  on b.cust_no=f.cust_no left   join TMP_ACMG_T_PECUST_VALUE_INFO   g2 on b.cust_no=g2.cust_no  left   join auap_t_org                   org on b2.org_no=org.org_id where g2.cust_type= 3 proc";		
//		sql="select * from temp1";
//		sql = "update temp1 set value29 = concat(concat(concat(concat(concat(value1,value2,value3,value4,value5,value6),concat(value7,value8,value9,value10,value11,value12)),concat(value13,value14,value15,value16,value17,value18)),concat(value19,value20,value21,value22,value23,value24)),concat(value25,value26,value27,value28)) from temp1";
//		sql="select value29 from temp1 ";
//		sql="drop table temp1";
//		sql="insert    into ACMG_T_PECUST_VALUE_INFO (CORPORATION,cust_no,manger_no,manger_name,reason,pecust_name,name_en,cust_mgr_no,cust_mgr,belong_org_no,org_no_sub,org_name,cert_type,cert_no,sex,assist_custmgr_no,assist_custmgr_name,area_code,age,acct_age,year_income,nation,country,is_bank_emp,mar_stat,birth_y,highest_edu,profession,belong_trade,position,title,distrib_stat,is_pote_cust,office_tel,mobile_tel,contact_addr,perf_info,cust_level,cust_level_lmon,cust_level_max,card_level,cust_level_sys,cust_level_sys_max,cust_level_m,cust_level_m_max,spec_cust_lvl_dt,spec_lvl_expire_dt,is_spec_eff,is_spec_quoa,focs_num,focs_days,family_member_num,unit_name,tot_asset,tot_debt,asset_bank,debt_bank,cust_contri,dept_contri,loan_contri,cust_contri_tot,used_point,avail_integral,aum,aum_max,aum_max_dt,aum_m_class,aum_m_class_max,aum_m_class_dt_max,aum_m_ad,aum_m_ad_max,aum_m_ad_dt_max,aum_q_ad,aum_y_ad,dept_bal,dept_m_ad,dept_q_ad,dept_y_ad,fixdept_bal,fixdept_m_ad ,fixdept_q_ad ,fixdept_y_ad ,savdept_bal,savdept_m_ad,savdept_q_ad,savdept_y_ad,credit_degree,loan_amt,loan_bal,loan_m_ad,loan_q_ad,loan_y_ad,loan_bal_nonperf,finprod_bal,fin_avg_bal_m,fin_avg_bal_q,fin_avg_bal_y,finprod_sub_amt,finprod_sub_cnt,kffina_bal,kffina_m_ad,kffina_q_ad,kffina_y_ad,bbfina_bal,bbfina_m_ad,bbfina_q_ad,bbfina_y_ad,fbbfina_bal,fbbfina_m_ad,fbbfina_q_ad,fbbfina_y_ad,fund_bal,fund_m_ad,fund_q_ad,fund_y_ad,debt_bal,debt_m_ad,debt_q_ad,debt_y_ad,gold_bal,gold_m_ad,gold_q_ad,gold_y_ad,insur_bal,insur_m_ad,insur_q_ad,insur_y_ad,intrust_bal,intrust_m_ad,intrust_q_ad,intrust_y_ad,overdue_bal,dc_bal,dc_trantime_m,dc_tran_amt_m,dc_trantime_q,dc_tran_amt_q,dc_trantime_y,dc_tran_amt_y,dc_pos_tran_time_m,dc_pos_tran_amt_m,crcd_lmt,crcd_bal,crcd_trantime_m,crcd_tran_amt_m,crcd_trantime_q,crcd_tran_amt_q,crcd_trantime_y,crcd_tran_amt_y,none_loan_acct,pbank_cust,ebank_cust,mobile_bank_cust,wage_acct,vip_card_cust,wage_fin_cust,is_wage_fin_cust,is_inte_dept,is_inte_noti_dept,is_profit,is_satd,cust_prd_num,cust_prd_flg,CUST_HOLD_PRD,cust_loyalty,is_loan_clear,is_loan_overdue,crcd_cust,wxin_bank_cust,is_directbank_cust,cust_star_grade,cons_tellation,origin_name,register_cd,register_fg,farmer_fg,local_years,dependants,blacklist_fg,is_our_stockholder,asset_outside_bank,debt_outside_bank,asset_other_bank,debt_other_bank,cust_stat,rsk_type,risk_date,re_mark,crm_start_dt,crm_end_dt,insert_user,insert_user_name,creator_org_no,creator_org,insert_ipaddress,insert_datetime,update_user,update_user_name,modifer_org_no,modifer_org,update_ipaddress,update_datetime,EC_CRT_SCT_N,IS_PUH_CUST,LOAN_BAL_JY)"
//		+"SELECT  substr(b.cust_no,1,3) CORPORATION,b.cust_no cust_no,B2.manger_no manger_no,B2.manger_name manger_name,b2.reason reason,b.pecust_name pecust_name,b.name_en name_en,b2.cust_mgr_no cust_mgr_no,b2.cust_mgr cust_mgr,b2.org_no belong_org_no,org.org_no_sub org_no_sub,b2.org_name org_name,b.cert_type cert_type,b.cert_no cert_no,b.sex sex,b.assist_custmgr_no assist_custmgr_no  ,b.assist_custmgr_name assist_custmgr_name,b.area_code area_code,case when substr(b.birth_y,1,4)>=1901 and substr(b.birth_y,1,4)<=2019 then 2019-substr(b.birth_y,1,4) else NULL end age,b.acct_age acct_age,b.year_income year_income,b.nation  nation,b.country  country,b.is_bank_emp  is_bank_emp,b.mar_stat  mar_stat,b.birth_y  birth_y,b.highest_edu  highest_edu,b.profession  profession,b.belong_trade  belong_trade,b.position  position,b.title  title,case when b2.cust_mgr_no is null then '20010002'  else '20010001' end             distrib_stat       ,'20000002'   is_pote_cust,d.office_tel  office_tel,d.mobile_tel  mobile_tel,d.contact_addr  contact_addr,b.perf_info  perf_info,ifnull(c1.cust_level ,'20810001')  cust_level,ifnull(c1.cust_level_lmon,'20810001')   cust_level_lmon    ,ifnull(c1.cust_level_max ,'20810001')  cust_level_max     ,ifnull(e.card_level  ,'201')  card_level,ifnull(c1.cust_level_sys ,'20810001')  cust_level_sys     ,ifnull(c1.cust_level_sys_max ,'20810001')  cust_level_sys_max ,g2.cust_level_m  cust_level_m       ,''  cust_level_m_max   ,g2.spec_cust_lvl_dt  spec_cust_lvl_dt   ,g2.SPEC_lvl_EXPIRE_DT  SPEC_lvl_EXPIRE_DT ,g2.is_spec_eff  is_spec_eff,g2.is_spec_quoa  is_spec_quoa       ,ifnull(c1.focs_num,0)  focs_num,case when c1.focs_num=1 then  1 when c1.focs_num=2 then 2 else 0 end    focs_days          ,b.family_member_num  family_member_num  ,b.unit_name  unit_name,ifnull(c.aum,0)   tot_asset,0 tot_debt ,ifnull(c.aum,0)  asset_bank,ifnull(c.loan_bal,0)  debt_bank,ifnull(f.cust_contri,0)  cust_contri,0   dept_contri,0   loan_contri,ifnull(f.cust_contri_tot,0)   cust_contri_tot    ,0  used_point,0  avail_integral,ifnull(c.aum,0)   aum,ifnull(c.aum_max,0)  aum_max,c.aum_max_dt   aum_max_dt ,ifnull(c1.aum_m_class         ,0)                aum_m_class        ,ifnull(c1.aum_m_class_max     ,0)                aum_m_class_max    ,c1.aum_m_class_dt_max                         aum_m_class_dt_max ,ifnull(c.aum_m_ad             ,0)                aum_m_ad           ,ifnull(c.aum_m_ad_max         ,0)                aum_m_ad_max       ,c.aum_m_ad_dt_max                             aum_m_ad_dt_max    ,ifnull(c.aum_q_ad             ,0)    aum_q_ad           ,ifnull(c.aum_y_ad             ,0)    aum_y_ad           ,ifnull(c.dept_bal             ,0)    dept_bal           ,ifnull(c.dept_m_ad            ,0)    dept_m_ad          ,ifnull(c.dept_q_ad            ,0)    dept_q_ad          ,ifnull(c.dept_y_ad            ,0)    dept_y_ad          ,ifnull(c.fixdept_bal          ,0)    fixdept_bal        ,ifnull(C.fixdept_m_ad         ,0)    fixdept_m_ad       ,ifnull(C.fixdept_q_ad         ,0)    fixdept_q_ad       ,ifnull(C.fixdept_y_ad         ,0)    fixdept_y_ad       ,ifnull(c.savdept_bal          ,0)    savdept_bal        ,ifnull(c.SAVDEPT_M_AD         ,0)    SAVDEPT_M_AD       ,ifnull(c.SAVDEPT_Q_AD         ,0)    SAVDEPT_Q_AD       ,ifnull(c.SAVDEPT_Y_AD         ,0)    SAVDEPT_Y_AD       ,ifnull(c.credit_degree        ,0)    credit_degree      ,ifnull(c.loan_amt             ,0)    loan_amt           ,ifnull(c.loan_bal             ,0)    loan_bal           ,ifnull(c.loan_m_ad            ,0)    loan_m_ad          ,ifnull(c.loan_q_ad            ,0)    loan_q_ad          ,ifnull(c.loan_y_ad            ,0)    loan_y_ad          ,ifnull(c.loan_bal_nonperf     ,0)    loan_bal_nonperf   ,ifnull(c.finprod_bal          ,0)    finprod_bal        ,ifnull(c.fin_avg_bal_m        ,0)    fin_avg_bal_m      ,ifnull(c.fin_avg_bal_q        ,0)    fin_avg_bal_q      ,ifnull(c.fin_avg_bal_y        ,0)    fin_avg_bal_y      ,ifnull(c.finprod_sub_amt      ,0)    finprod_sub_amt    ,ifnull(c.finprod_sub_cnt      ,0)    finprod_sub_cnt    ,ifnull(c.kffina_bal           ,0)    kffina_bal         ,ifnull(c.kffina_m_ad          ,0)    kffina_m_ad        ,ifnull(c.kffina_q_ad          ,0)    kffina_q_ad        ,ifnull(c.kffina_y_ad          ,0)    kffina_y_ad        ,ifnull(c.bbfina_bal           ,0)    bbfina_bal         ,ifnull(c.bbfina_m_ad          ,0)    bbfina_m_ad        ,ifnull(c.bbfina_q_ad          ,0)    bbfina_q_ad        ,ifnull(c.bbfina_y_ad          ,0)    bbfina_y_ad        ,ifnull(c.fbbfina_bal          ,0)    fbbfina_bal        ,ifnull(c.fbbfina_m_ad         ,0)    fbbfina_m_ad       ,ifnull(c.fbbfina_q_ad         ,0)    fbbfina_q_ad       ,ifnull(c.fbbfina_y_ad         ,0)    fbbfina_y_ad       ,ifnull(c.fund_bal             ,0)    fund_bal           ,ifnull(c.fund_m_ad            ,0)    fund_m_ad          ,ifnull(c.fund_q_ad            ,0)    fund_q_ad          ,ifnull(c.fund_y_ad            ,0)    fund_y_ad          ,ifnull(c.debt_bal             ,0)    debt_bal           ,ifnull(c.debt_m_ad            ,0)    debt_m_ad          ,ifnull(c.debt_q_ad            ,0)    debt_q_ad          ,ifnull(c.debt_y_ad            ,0)    debt_y_ad          ,ifnull(c.gold_bal             ,0)  gold_bal           ,ifnull(c.gold_m_ad            ,0)  gold_m_ad          ,ifnull(c.gold_q_ad            ,0)  gold_q_ad          ,ifnull(c.gold_y_ad            ,0)  gold_y_ad          ,ifnull(c.insur_bal            ,0)  insur_bal          ,ifnull(c.insur_m_ad           ,0)  insur_m_ad         ,ifnull(c.insur_q_ad           ,0)  insur_q_ad         ,ifnull(c.insur_y_ad           ,0)  insur_y_ad         ,ifnull(c.intrust_bal          ,0)  intrust_bal        ,ifnull(c.intrust_m_ad         ,0)  intrust_m_ad       ,ifnull(c.intrust_q_ad         ,0)  intrust_q_ad       ,ifnull(c.intrust_y_ad         ,0)  intrust_y_ad       ,ifnull(c.overdue_bal          ,0)  overdue_bal        ,ifnull(c.dc_bal               ,0)  dc_bal             ,ifnull(c.dc_trantime_m        ,0) dc_trantime_m      ,ifnull(c.dc_tran_amt_m        ,0) dc_tran_amt_m      ,ifnull(c.dc_trantime_q        ,0)  dc_trantime_q      ,ifnull(c.dc_tran_amt_q        ,0) dc_tran_amt_q      ,ifnull(c.dc_trantime_y        ,0) dc_trantime_y      ,ifnull(c.dc_tran_amt_y        ,0) dc_tran_amt_y      ,ifnull(c.dc_pos_tran_time_m   ,0) dc_pos_tran_time_m ,ifnull(c.dc_pos_tran_amt_m    ,0) dc_pos_tran_amt_m  ,ifnull(c.crcd_lmt             ,0) as crcd_lmt           ,ifnull(c.crcd_bal             ,0) as crcd_bal           ,ifnull(c.crcd_trantime_m      ,0) as crcd_trantime_m    ,ifnull(c.crcd_tran_amt_m      ,0) as crcd_tran_amt_m    ,ifnull(c.crcd_trantime_q      ,0) as crcd_trantime_q    ,ifnull(c.crcd_tran_amt_q      ,0) as crcd_tran_amt_q    ,ifnull(c.crcd_trantime_y      ,0) as crcd_trantime_y    ,ifnull(c.crcd_tran_amt_y      ,0) as crcd_tran_amt_y    ,ifnull(c.none_loan_acct     ,'20000002') as none_loan_acct     ,ifnull(c.pbank_cust         ,'20000002') as pbank_cust         ,ifnull(c.ebank_cust         ,'20000002') as ebank_cust         ,ifnull(c.mobile_bank_cust   ,'20000002') as mobile_bank_cust   ,ifnull(c.IS_PAY_CUST        ,'20000002') as wage_acct,ifnull(c.vip_card_cust      ,'20000002') as vip_card_cust      ,'20000002' as wage_fin_cust      ,'20000002' as is_wage_fin_cust   ,'20000002' as is_inte_dept,'20000002' as is_inte_noti_dept  ,'20000002' as is_profit          ,'20000002' as is_satd,ifnull(c.cust_prd_num,0) as cust_prd_num,ifnull(c.cust_prd_flg,'22222222') as cust_prd_flg,temp1.value29 as CUST_HOLD_PRD ,'20000002' as cust_loyalty,c.is_loan_clear as is_loan_clear      ,ifnull(c.is_loan_overdue    ,'20000002') as is_loan_overdue    ,ifnull(c.is_cc_cust,'20000002') as crcd_cust,ifnull(c.wxin_bank_cust     ,'20000002') as wxin_bank_cust,ifnull(c.is_directbank_cust ,'20000002') as is_directbank_cust ,'1' as cust_star_grade,b.cons_tellation as cons_tellation,b.origin_name as origin_name,b.register_cd as register_cd,b.register_fg as register_fg,b.farmer_fg as farmer_fg,b.local_years as local_years,b.dependants as dependants,b.blacklist_fg as blacklist_fg,b.is_our_stockholder  as is_our_stockholder ,0 as  asset_outside_bank ,0 as  debt_outside_bank  ,0   as  asset_other_bank,0 as  debt_other_bank,'1'  as  cust_stat,b.rsk_type as rsk_type,b.risk_date  as  risk_date,b.re_mark  as  re_mark,'1' as crm_start_dt,'2'  as crm_end_dt,b.insert_user     as   insert_user,b.insert_user_name  as      insert_user_name,b.creator_org_no    as  creator_org_no,b.creator_org   as   creator_org,b.insert_ipaddress    as  insert_ipaddress,b.insert_datetime  as  insert_datetime,b.update_user as   update_user,b.update_user_name  as  update_user_name,b.modifer_org_no as modifer_org_no,b.modifer_org  as  modifer_org,b.update_ipaddress   as update_ipaddress   ,b.update_datetime  as update_datetime    ,b.EC_CRT_SCT_N,ifnull(c.IS_PUH_CUST,'20000002'),ifnull(c.LOAN_BAL_JY,0)  "
//	  			+ "from ACMG_T_PECUST_BASIC_INFO   b   join ACMG_R_PECUST_DISTRIBUTE_INFO  b2 on b.cust_no=b2.cust_no left   join ACMG_T_PECUST_CUSTLEVEL  c1 on b.cust_no=c1.cust_no left   join BCST_T_PECUST_VALUE_INFO_TMP   c  on b.cust_no=c.cust_no left   join ACMG_T_MVP_CONTRACT_INFO       d  on b.cust_no=d.cust_no left   join BACC_T_MOST_CARD_INFO          e  on b.cust_no=e.cust_no left   join ACMG_T_CUST_CONTRI             f  on b.cust_no=f.cust_no left   join TMP_ACMG_T_PECUST_VALUE_INFO   g2 on b.cust_no=g2.cust_no   left   join auap_t_org                    org on b2.org_no=org.org_id left join temp1 on b.cust_no=temp1.cust_no where g2.cust_type=3 proc";	
		
//			    sql="SELECT  substr(b.cust_no,1,3) CORPORATION,b.cust_no cust_no,B2.manger_no manger_no,B2.manger_name manger_name,b2.reason reason,b.pecust_name pecust_name,b.name_en name_en,b2.cust_mgr_no cust_mgr_no,b2.cust_mgr cust_mgr,b2.org_no belong_org_no,org.org_no_sub org_no_sub,b2.org_name org_name,b.cert_type cert_type,b.cert_no cert_no,b.sex sex,b.assist_custmgr_no assist_custmgr_no  ,b.assist_custmgr_name assist_custmgr_name,b.area_code area_code,case when substr(b.birth_y,1,4)>=1901 and substr(b.birth_y,1,4)<=2019 then 2019-substr(b.birth_y,1,4) else NULL end age,b.acct_age acct_age,b.year_income year_income,b.nation  nation,b.country  country,b.is_bank_emp  is_bank_emp,b.mar_stat  mar_stat,b.birth_y  birth_y,b.highest_edu  highest_edu,b.profession  profession,b.belong_trade  belong_trade,b.position  position,b.title  title,case when b2.cust_mgr_no is null then '20010002'  else '20010001' end             distrib_stat       ,'20000002'   is_pote_cust,d.office_tel  office_tel,d.mobile_tel  mobile_tel,d.contact_addr  contact_addr,b.perf_info  perf_info,ifnull(c1.cust_level ,'20810001')  cust_level,ifnull(c1.cust_level_lmon,'20810001')   cust_level_lmon    ,ifnull(c1.cust_level_max ,'20810001')  cust_level_max     ,ifnull(e.card_level  ,'201')  card_level,ifnull(c1.cust_level_sys ,'20810001')  cust_level_sys     ,ifnull(c1.cust_level_sys_max ,'20810001')  cust_level_sys_max ,g2.cust_level_m  cust_level_m       ,''  cust_level_m_max   ,g2.spec_cust_lvl_dt  spec_cust_lvl_dt   ,g2.SPEC_lvl_EXPIRE_DT  SPEC_lvl_EXPIRE_DT ,g2.is_spec_eff  is_spec_eff,g2.is_spec_quoa  is_spec_quoa       ,ifnull(c1.focs_num,0)  focs_num,case when c1.focs_num=1 then  1 when c1.focs_num=2 then 2 else 0 end    focs_days          ,b.family_member_num  family_member_num  ,b.unit_name  unit_name,ifnull(c.aum,0)   tot_asset,0 tot_debt ,ifnull(c.aum,0)  asset_bank,ifnull(c.loan_bal,0)  debt_bank,ifnull(f.cust_contri,0)  cust_contri,0   dept_contri,0   loan_contri,ifnull(f.cust_contri_tot,0)   cust_contri_tot    ,0  used_point,0  avail_integral,ifnull(c.aum,0)   aum,ifnull(c.aum_max,0)  aum_max,c.aum_max_dt   aum_max_dt ,ifnull(c1.aum_m_class         ,0)                aum_m_class        ,ifnull(c1.aum_m_class_max     ,0)                aum_m_class_max    ,c1.aum_m_class_dt_max                         aum_m_class_dt_max ,ifnull(c.aum_m_ad             ,0)                aum_m_ad           ,ifnull(c.aum_m_ad_max         ,0)                aum_m_ad_max       ,c.aum_m_ad_dt_max                             aum_m_ad_dt_max    ,ifnull(c.aum_q_ad             ,0)    aum_q_ad           ,ifnull(c.aum_y_ad             ,0)    aum_y_ad           ,ifnull(c.dept_bal             ,0)    dept_bal           ,ifnull(c.dept_m_ad            ,0)    dept_m_ad          ,ifnull(c.dept_q_ad            ,0)    dept_q_ad          ,ifnull(c.dept_y_ad            ,0)    dept_y_ad          ,ifnull(c.fixdept_bal          ,0)    fixdept_bal        ,ifnull(C.fixdept_m_ad         ,0)    fixdept_m_ad       ,ifnull(C.fixdept_q_ad         ,0)    fixdept_q_ad       ,ifnull(C.fixdept_y_ad         ,0)    fixdept_y_ad       ,ifnull(c.savdept_bal          ,0)    savdept_bal        ,ifnull(c.SAVDEPT_M_AD         ,0)    SAVDEPT_M_AD       ,ifnull(c.SAVDEPT_Q_AD         ,0)    SAVDEPT_Q_AD       ,ifnull(c.SAVDEPT_Y_AD         ,0)    SAVDEPT_Y_AD       ,ifnull(c.credit_degree        ,0)    credit_degree      ,ifnull(c.loan_amt             ,0)    loan_amt           ,ifnull(c.loan_bal             ,0)    loan_bal           ,ifnull(c.loan_m_ad            ,0)    loan_m_ad          ,ifnull(c.loan_q_ad            ,0)    loan_q_ad          ,ifnull(c.loan_y_ad            ,0)    loan_y_ad          ,ifnull(c.loan_bal_nonperf     ,0)    loan_bal_nonperf   ,ifnull(c.finprod_bal          ,0)    finprod_bal        ,ifnull(c.fin_avg_bal_m        ,0)    fin_avg_bal_m      ,ifnull(c.fin_avg_bal_q        ,0)    fin_avg_bal_q      ,ifnull(c.fin_avg_bal_y        ,0)    fin_avg_bal_y      ,ifnull(c.finprod_sub_amt      ,0)    finprod_sub_amt    ,ifnull(c.finprod_sub_cnt      ,0)    finprod_sub_cnt    ,ifnull(c.kffina_bal           ,0)    kffina_bal         ,ifnull(c.kffina_m_ad          ,0)    kffina_m_ad        ,ifnull(c.kffina_q_ad          ,0)    kffina_q_ad        ,ifnull(c.kffina_y_ad          ,0)    kffina_y_ad        ,ifnull(c.bbfina_bal           ,0)    bbfina_bal         ,ifnull(c.bbfina_m_ad          ,0)    bbfina_m_ad        ,ifnull(c.bbfina_q_ad          ,0)    bbfina_q_ad        ,ifnull(c.bbfina_y_ad          ,0)    bbfina_y_ad        ,ifnull(c.fbbfina_bal          ,0)    fbbfina_bal        ,ifnull(c.fbbfina_m_ad         ,0)    fbbfina_m_ad       ,ifnull(c.fbbfina_q_ad         ,0)    fbbfina_q_ad       ,ifnull(c.fbbfina_y_ad         ,0)    fbbfina_y_ad       ,ifnull(c.fund_bal             ,0)    fund_bal           ,ifnull(c.fund_m_ad            ,0)    fund_m_ad          ,ifnull(c.fund_q_ad            ,0)    fund_q_ad          ,ifnull(c.fund_y_ad            ,0)    fund_y_ad          ,ifnull(c.debt_bal             ,0)    debt_bal           ,ifnull(c.debt_m_ad            ,0)    debt_m_ad          ,ifnull(c.debt_q_ad            ,0)    debt_q_ad          ,ifnull(c.debt_y_ad            ,0)    debt_y_ad          ,ifnull(c.gold_bal             ,0)  gold_bal           ,ifnull(c.gold_m_ad            ,0)  gold_m_ad          ,ifnull(c.gold_q_ad            ,0)  gold_q_ad          ,ifnull(c.gold_y_ad            ,0)  gold_y_ad          ,ifnull(c.insur_bal            ,0)  insur_bal          ,ifnull(c.insur_m_ad           ,0)  insur_m_ad         ,ifnull(c.insur_q_ad           ,0)  insur_q_ad         ,ifnull(c.insur_y_ad           ,0)  insur_y_ad         ,ifnull(c.intrust_bal          ,0)  intrust_bal        ,ifnull(c.intrust_m_ad         ,0)  intrust_m_ad       ,ifnull(c.intrust_q_ad         ,0)  intrust_q_ad       ,ifnull(c.intrust_y_ad         ,0)  intrust_y_ad       ,ifnull(c.overdue_bal          ,0)  overdue_bal        ,ifnull(c.dc_bal               ,0)  dc_bal             ,ifnull(c.dc_trantime_m        ,0) dc_trantime_m      ,ifnull(c.dc_tran_amt_m        ,0) dc_tran_amt_m      ,ifnull(c.dc_trantime_q        ,0)  dc_trantime_q      ,ifnull(c.dc_tran_amt_q        ,0) dc_tran_amt_q      ,ifnull(c.dc_trantime_y        ,0) dc_trantime_y      ,ifnull(c.dc_tran_amt_y        ,0) dc_tran_amt_y      ,ifnull(c.dc_pos_tran_time_m   ,0) dc_pos_tran_time_m ,ifnull(c.dc_pos_tran_amt_m    ,0) dc_pos_tran_amt_m  ,ifnull(c.crcd_lmt             ,0) as crcd_lmt           ,ifnull(c.crcd_bal             ,0) as crcd_bal           ,ifnull(c.crcd_trantime_m      ,0) as crcd_trantime_m    ,ifnull(c.crcd_tran_amt_m      ,0) as crcd_tran_amt_m    ,ifnull(c.crcd_trantime_q      ,0) as crcd_trantime_q    ,ifnull(c.crcd_tran_amt_q      ,0) as crcd_tran_amt_q    ,ifnull(c.crcd_trantime_y      ,0) as crcd_trantime_y    ,ifnull(c.crcd_tran_amt_y      ,0) as crcd_tran_amt_y    ,ifnull(c.none_loan_acct     ,'20000002') as none_loan_acct     ,ifnull(c.pbank_cust         ,'20000002') as pbank_cust         ,ifnull(c.ebank_cust         ,'20000002') as ebank_cust         ,ifnull(c.mobile_bank_cust   ,'20000002') as mobile_bank_cust   ,ifnull(c.IS_PAY_CUST        ,'20000002') as wage_acct,ifnull(c.vip_card_cust      ,'20000002') as vip_card_cust      ,'20000002' as wage_fin_cust      ,'20000002' as is_wage_fin_cust   ,'20000002' as is_inte_dept,'20000002' as is_inte_noti_dept  ,'20000002' as is_profit          ,'20000002' as is_satd,ifnull(c.cust_prd_num,0) as cust_prd_num,ifnull(c.cust_prd_flg,'22222222') as cust_prd_flg,temp1.value29 as CUST_HOLD_PRD ,'20000002' as cust_loyalty,c.is_loan_clear as is_loan_clear      ,ifnull(c.is_loan_overdue    ,'20000002') as is_loan_overdue    ,ifnull(c.is_cc_cust,'20000002') as crcd_cust,ifnull(c.wxin_bank_cust     ,'20000002') as wxin_bank_cust,ifnull(c.is_directbank_cust ,'20000002') as is_directbank_cust ,'1' as cust_star_grade,b.cons_tellation as cons_tellation,b.origin_name as origin_name,b.register_cd as register_cd,b.register_fg as register_fg,b.farmer_fg as farmer_fg,b.local_years as local_years,b.dependants as dependants,b.blacklist_fg as blacklist_fg,b.is_our_stockholder  as is_our_stockholder ,0 as  asset_outside_bank ,0 as  debt_outside_bank  ,0   as  asset_other_bank,0 as  debt_other_bank,'1'  as  cust_stat,b.rsk_type as rsk_type,b.risk_date  as  risk_date,b.re_mark  as  re_mark,'1' as crm_start_dt,'2'  as crm_end_dt,b.insert_user     as   insert_user,b.insert_user_name  as      insert_user_name,b.creator_org_no    as  creator_org_no,b.creator_org   as   creator_org,b.insert_ipaddress    as  insert_ipaddress,b.insert_datetime  as  insert_datetime,b.update_user as   update_user,b.update_user_name  as  update_user_name,b.modifer_org_no as modifer_org_no,b.modifer_org  as  modifer_org,b.update_ipaddress   as update_ipaddress   ,b.update_datetime  as update_datetime    ,b.EC_CRT_SCT_N,ifnull(c.IS_PUH_CUST,'20000002'),ifnull(c.LOAN_BAL_JY,0)  "
//	  			+ "from ACMG_T_PECUST_BASIC_INFO   b   join ACMG_R_PECUST_DISTRIBUTE_INFO  b2 on b.cust_no=b2.cust_no left   join ACMG_T_PECUST_CUSTLEVEL  c1 on b.cust_no=c1.cust_no left   join BCST_T_PECUST_VALUE_INFO_TMP   c  on b.cust_no=c.cust_no left   join ACMG_T_MVP_CONTRACT_INFO       d  on b.cust_no=d.cust_no left   join BACC_T_MOST_CARD_INFO          e  on b.cust_no=e.cust_no left   join ACMG_T_CUST_CONTRI             f  on b.cust_no=f.cust_no left   join TMP_ACMG_T_PECUST_VALUE_INFO   g2 on b.cust_no=g2.cust_no   left   join auap_t_org                    org on b2.org_no=org.org_id left join temp1 on b.cust_no=temp1.cust_no where g2.cust_type=3 ";	

//		sql="select count(*) from ACMG_T_PECUST_VALUE_INFO";
			
//		sql="UPDATE ACMG_T_PECUST_VALUE_INFO SET a.PECUST_NAME=b.PECUST_NAME,a.CERT_NO=b.CERT_NO,a.CERT_TYPE=b.CERT_TYPE,a.CUST_LEVEL_M=b.CUST_LEVEL_M, a.SPEC_CUST_LVL_DT  =b.SPEC_CUST_LVL_DT   ,a.SPEC_LVL_EXPIRE_DT=b.SPEC_LVL_EXPIRE_DT ,a.IS_SPEC_EFF       =b.IS_SPEC_EFF,a.IS_SPEC_QUOA=b.IS_SPEC_QUOA,a.CUST_TYPE= case when b.CUST_TYPE=3 then 1 else b.CUST_TYPE end ,a.insert_user=b.insert_user,a.insert_user_name  =b.insert_user_name   ,a.creator_org_no=b.creator_org_no,a.creator_org=b.creator_org,a.insert_ipaddress  =b.insert_ipaddress,a.insert_datetime=b.insert_datetime,a.update_user=b.update_user,a.update_user_name  =b.update_user_name,a.modifer_org_no=b.modifer_org_no,a.modifer_org=b.modifer_org,a.update_ipaddress  =b.update_ipaddress,a.update_datetime=b.update_datetime from ACMG_T_PECUST_VALUE_INFO a,TMP_ACMG_T_PECUST_VALUE_INFO b where a.cust_no=b.cust_no";
		
//		sql="Select * from ACMG_T_PECUST_VALUE_INFO";
		
		
		
		
		
		
		
		
		
		
		//齐鲁功能测试
//		sql="create table temp1(name varchar(5),age varchar(5))";
//      sql="create table temp2(name varchar(5),age varchar(5),a varchar(10))";
//      sql="update  temp1  set a=concat(temp1.name,temp1.age) from temp1";
//      sql="insert into temp1(age) values('  1  ')";
//      sql="insert into temp1(age) values('')";
//      sql="insert into temp1(age) values('2')";
//      sql="insert into temp1(name,age) values('aaa','1')";
//      sql="insert into temp1(name,age) values('asc','2')";
//      sql="insert into temp1(name,age) values('ccc','3')";
//      sql="insert into temp1(name,age) values('abc','5')";

//      sql="insert into temp2(name,age) values('111','1')";
//      sql="insert into temp2(name,age) values('222','2')";
//		sql="insert into temp2(name,age) values('333','3')";
//       sql="create table temp3(name varchar(5),age varchar(5))";
//       sql="insert into temp3(name,age) values('1111','1')";
//       sql="insert into temp3(name,age) values('2222','2')";
//       sql="insert into temp3(name,age) values('3333','3')";
//       sql="insert into temp3(name,age) values('  5  5 ','5')";
//       sql="insert into temp3(name,age) values('','6')";
//       sql="insert into temp3(name,age) values('null','7')";
//       sql="select substr(age,1,9) from temp1";
//       sql="select * from temp1";
//		sql="update temp1 set temp1.name=case when temp2.name='111' then '33' else temp2.name end from temp1,temp2 where temp1.age=temp2.age";
//		sql="select concat(temp1.name,temp2.name) from temp1 left join temp2 on temp1.age=temp2.age";
//		sql="select concat((case when temp3.name='2222' then temp3.age else temp3.name end),substr(name,1,1)) from temp3 ";
//        sql="select concat(substr(name,1,1),age) from temp3";
//		sql="select case when substr(temp3.name,1,1)='2' then temp3.age else temp3.name end from temp3 ";
//
//		sql="select concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(name,age),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name),name) from temp3";
//		sql="create table temp4(name data)";
//		sql="insert into temp4(data) values('2005-01-01')";
//       sql="select ifnull(name,'3') from temp3";
//       sql="select * from temp3";
//		sql="select case when substr(ifnull(age,name),1,1)='1' then name else age end  from temp3";
//        sql="select case when concat(name,age)='11111' then name else age end from temp3";
//				sql="select to_char(age,'yyyy') from temp3";
//        sql="select to_number(age,int) from temp3";
//      sql="select concat(age,'12') from temp1";
//       sql="select trim(age) from temp1";
//        sql="create table temp3(age varchar(5))";
//        sql="insert into temp3(age)select age from temp1 where age='3'  ";
//        sql="select sbustr(name,-1) from temp1";
//         sql="insert into temp1(name,age)select name,age from temp2 where temp1.age not in temp3";
//       sql="drop table temp1";
//       sql="select temp2.name,temp2.age from temp2  join  temp1 on temp2.age=temp1.age";
//       sql="update temp2 set temp2.name='cba' from temp2 join temp1 on temp2.age=temp1.age  ";
//       sql="select * from temp2";
        
//		 sql="select PTY_ID.length from T01_PTY_RELA_H";
//       sql="select case when substr(ifnull(temp2.age,'666'),1,2)='66' then '33' else temp2.age end from temp1 left join temp2 on temp1.age=temp2.age";
//         sql="select case when substr(temp3.age,1,1) is null  then '333' else temp3.age end from temp1 left join temp2 on temp1.age=temp2.age left join temp3 on temp2.age=temp3.age";
//       sql="select substr(ifnull(temp2.age,'666'),1,2) from temp1 left join temp2 on temp1.age=temp2.age";
//       sql="select substr(trim(temp1.name),length(temp1.name),1) from temp1";
//       sql="select length(age) from temp1";
//       sql="select trim(concat(concat('   ',age),'     ')) from temp1";
//       sql="select 2019-age from temp1  ";

		
		
		
		
		
		
		
		
		
		//民生复测
//        sql="select count(*) FROM ZNMAT142  ";
//		sql = "insert into ZNMAT004NOPKLIST select '801',cust_no,'2018001','' FROM ZNMAT142 WHERE PERIO = '2018001'  AND IS_UNPACKED = 'W' AND GRPID_CUSCAT <> '' proc;";
//		sql = "create table C(STAFFNO VARCHAR(50));";
//		sql="drop table C";
//		sql="select DISTINCT STAFFNO from ZNMAT134 WHERE PERIO = '2018001'";
//		sql = "insert into C( STAFFNO ) select DISTINCT STAFFNO from ZNMAT134 WHERE PERIO = '2018001' proc;";
//        sql="select * from C";
//		sql = "create table E(PRDLEAF VARCHAR(50));";
//		sql = "insert into E(PRDLEAF)select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'I%' AND PERIO = '2018001' proc;";
//		sql = "create table tempA(PREFIX VARCHAR(10),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),INTERESTIN DOUBLE(25),CSTCAPITAL DOUBLE(25),VALCAPITAL DOUBLE(25),INTERESTEX DOUBLE(25),FEECOMIN DOUBLE(25),FEECOMEX DOUBLE(25),REINVES DOUBLE(25),VALUEGAINS DOUBLE(25),EXCHANGE DOUBLE(25),REBZNSO DOUBLE(25),PFABLITY DOUBLE(25),JZZB_VAL DOUBLE(22),INC_TAX DOUBLE(22),OPTAX DOUBLE(22),BSGAP DOUBLE(22),OTHER_COST DOUBLE(22),INCOME_OPO DOUBLE(22),EXPENSE_OPO DOUBLE(22),BAL_AVG_M DOUBLE(22),MOBGNBA DOUBLE(25),MOENDBA DOUBLE(25),IOATCRBTTA DOUBLE(25),RISKWEASS DOUBLE(25),CAP_SUM DOUBLE(25),BAL_BW DOUBLE(22),VOL_AVG_D DOUBLE(22),EXPENSE_ZCJZSS DOUBLE(22),VAL_JZSS DOUBLE(22),CAPITAL_JG DOUBLE(22),CAPITAL_CRED DOUBLE(22),RWA_CR DOUBLE(22),AVG_D_JZSS DOUBLE(22),BAL_JRZC DOUBLE(22),AVG_D_JRZC DOUBLE(22),BAL_BBW DOUBLE(22),AVG_D_BBW DOUBLE(22),TICKETDELS DOUBLE(22),TICKETRATIO DOUBLE(22),WKLODEQ DOUBLE(22),CREDIT DOUBLE(22),ACNTNUM DOUBLE(22),CUSTNO DOUBLE(25),MOVEAC DOUBLE(22),ACNTTIME DOUBLE(22),LENDERS DOUBLE(22),VOLB DOUBLE(22),TRANSNUM DOUBLE(22),APPROVAL DOUBLE(22),TRANS_COUNT_SCF_S DOUBLE(22),DIFFICULTY DOUBLE(22),TRANS_COUNT_MJ_S DOUBLE(22),INVEBAPR DOUBLE(22),BAL_SXZC_LY DOUBLE(19),RMB_TOTAL_AMT DOUBLE(27),FOR_TOTAL_AMT DOUBLE(27),IS_NEW INT(10),ZGUEST_GROUP VARCHAR(20),KEYVALUE VARCHAR(60));";
//		sql = "insert into tempA SELECT 'PC',A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,IFNULL(C.STAFFNO,'99999') AS STAFFNO,A.BEASID,A.SELIID,A.INTERESTIN,A.CSTCAPITAL,A.VALCAPITAL,A.INTERESTEX,A.FEECOMIN,A.FEECOMEX,A.REINVES,A.VALUEGAINS,A.EXCHANGE,A.REBZNSO,A.PFABLITY,A.JZZB_VAL,A.INC_TAX,A.OPTAX,A.BSGAP,A.OTHER_COST,A.INCOME_OPO,A.EXPENSE_OPO,A.BAL_AVG_M,A.MOBGNBA,A.MOENDBA,A.IOATCRBTTA,A.RISKWEASS,A.CAP_SUM,A.BAL_BW,A.VOL_AVG_D,A.EXPENSE_ZCJZSS,A.VAL_JZSS,A.CAPITAL_JG,A.CAPITAL_CRED,A.RWA_CR,A.AVG_D_JZSS,A.BAL_JRZC,A.AVG_D_JRZC,A.BAL_BBW,A.AVG_D_BBW,A.TICKETDELS,A.TICKETRATIO,A.WKLODEQ,A.CREDIT,A.ACNTNUM,A.CUSTNO,A.MOVEAC,A.ACNTTIME,A.LENDERS,A.VOLB,A.TRANSNUM,A.APPROVAL,A.TRANS_COUNT_SCF_S,A.DIFFICULTY,A.TRANS_COUNT_MJ_S,A.INVEBAPR,A.BAL_SXZC_LY,A.RMB_TOTAL_AMT,A.FOR_TOTAL_AMT,A.IS_NEW,A.ZGUEST_GROUP,A.KEYVALUE "
//				+ "FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST B ON A.CUSTMNO = B.CUSTMNO left JOIN  C ON  A.STAFFNO = C.STAFFNO left JOIN  E ON A.COBASEDPRO = E.PRDLEAF "
//				+ "WHERE B.CUSTMNO IS NULL AND A.PERIO = '2018001' AND E.PRDLEAF IS NULL and B.PERIO <= '2018001' proc";
//////		sql="SELECT 'PC',A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,IFNULL(C.STAFFNO,'99999') AS STAFFNO,A.BEASID,A.SELIID,A.INTERESTIN,A.CSTCAPITAL,A.VALCAPITAL,A.INTERESTEX,A.FEECOMIN,A.FEECOMEX,A.REINVES,A.VALUEGAINS,A.EXCHANGE,A.REBZNSO,A.PFABLITY,A.JZZB_VAL,A.INC_TAX,A.OPTAX,A.BSGAP,A.OTHER_COST,A.INCOME_OPO,A.EXPENSE_OPO,A.BAL_AVG_M,A.MOBGNBA,A.MOENDBA,A.IOATCRBTTA,A.RISKWEASS,A.CAP_SUM,A.BAL_BW,A.VOL_AVG_D,A.EXPENSE_ZCJZSS,A.VAL_JZSS,A.CAPITAL_JG,A.CAPITAL_CRED,A.RWA_CR,A.AVG_D_JZSS,A.BAL_JRZC,A.AVG_D_JRZC,A.BAL_BBW,A.AVG_D_BBW,A.TICKETDELS,A.TICKETRATIO,A.WKLODEQ,A.CREDIT,A.ACNTNUM,A.CUSTNO,A.MOVEAC,A.ACNTTIME,A.LENDERS,A.VOLB,A.TRANSNUM,A.APPROVAL,A.TRANS_COUNT_SCF_S,A.DIFFICULTY,A.TRANS_COUNT_MJ_S,A.INVEBAPR,A.BAL_SXZC_LY,A.RMB_TOTAL_AMT,A.FOR_TOTAL_AMT,A.IS_NEW,A.ZGUEST_GROUP,A.KEYVALUE "
//////				+ "FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST B ON A.CUSTMNO = B.CUSTMNO left JOIN  C ON  A.STAFFNO = C.STAFFNO left JOIN  E ON A.COBASEDPRO = E.PRDLEAF "
//////				+ "WHERE B.CUSTMNO IS NULL AND A.PERIO = '2018001' AND E.PRDLEAF IS NULL and B.PERIO <= '2018001'";
//		sql = "create table F(PRDLEAF VARCHAR(50));";
//		sql="select * from tempa";
//		sql = "insert into F(PRDLEAF) select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE (PRDNO LIKE 'I%' OR PRDNO LIKE 'J%') AND PERIO = '2018001' proc;";
//		sql = "insert into tempA SELECT 'PC',A.ACNTAGE,A.OPTNAGE,A.BMD_CODE,A.COBASEDPRO,A.GRPID_LOB,A.GRPID_CUSCAT,A.GRPID_PRDSA,A.LOBID_MAPRD,A.LOBID_MACUS,A.CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,case A.STAFFNO when '' then '99999' else A.STAFFNO end AS STAFFNO,A.BEASID,A.SELIID,A.INTERESTIN,A.CSTCAPITAL,A.VALCAPITAL,A.INTERESTEX,A.FEECOMIN,A.FEECOMEX,A.REINVES,A.VALUEGAINS,A.EXCHANGE,A.REBZNSO,A.PFABLITY,A.JZZB_VAL,A.INC_TAX,A.OPTAX,A.BSGAP,A.OTHER_COST,A.INCOME_OPO,A.EXPENSE_OPO,A.BAL_AVG_M,A.MOBGNBA,A.MOENDBA,A.IOATCRBTTA,A.RISKWEASS,A.CAP_SUM,A.BAL_BW,A.VOL_AVG_D,A.EXPENSE_ZCJZSS,A.VAL_JZSS,A.CAPITAL_JG,A.CAPITAL_CRED,A.RWA_CR,A.AVG_D_JZSS,A.BAL_JRZC,A.AVG_D_JRZC,A.BAL_BBW,A.AVG_D_BBW,A.TICKETDELS,A.TICKETRATIO,A.WKLODEQ,A.CREDIT,A.ACNTNUM,A.CUSTNO,A.MOVEAC,A.ACNTTIME,A.LENDERS,A.VOLB,A.TRANSNUM,A.APPROVAL,A.TRANS_COUNT_SCF_S,A.DIFFICULTY,A.TRANS_COUNT_MJ_S,A.INVEBAPR,A.BAL_SXZC_LY,A.RMB_TOTAL_AMT,A.FOR_TOTAL_AMT,A.IS_NEW,A.ZGUEST_GROUP,A.KEYVALUE "
//				+ "FROM ZNMAT004TEMP A left JOIN ZNMAT004NOPKLIST B ON A.CUSTMNO = B.CUSTMNO left JOIN  F ON A.COBASEDPRO = F.PRDLEAF "
//				+ "WHERE B.CUSTMNO IS NULL AND A.PERIO= '2018001' AND F.PRDLEAF IS NULL  and B.PERIO <= '2018001' proc";
//		sql = "create table tempB(PREFIX VARCHAR(10),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),INTERESTIN DOUBLE(25),CSTCAPITAL DOUBLE(25),VALCAPITAL DOUBLE(25),INTERESTEX DOUBLE(25),FEECOMIN DOUBLE(25),FEECOMEX DOUBLE(25),REINVES DOUBLE(25),VALUEGAINS DOUBLE(25),EXCHANGE DOUBLE(25),REBZNSO DOUBLE(25),PFABLITY DOUBLE(25),JZZB_VAL DOUBLE(22),INC_TAX DOUBLE(22),OPTAX DOUBLE(22),BSGAP DOUBLE(22),OTHER_COST DOUBLE(22),INCOME_OPO DOUBLE(22),EXPENSE_OPO DOUBLE(22),BAL_AVG_M DOUBLE(22),MOBGNBA DOUBLE(25),MOENDBA DOUBLE(25),IOATCRBTTA DOUBLE(25),RISKWEASS DOUBLE(25),CAP_SUM DOUBLE(25),BAL_BW DOUBLE(22),VOL_AVG_D DOUBLE(22),EXPENSE_ZCJZSS DOUBLE(22),VAL_JZSS DOUBLE(22),CAPITAL_JG DOUBLE(22),CAPITAL_CRED DOUBLE(22),RWA_CR DOUBLE(22),AVG_D_JZSS DOUBLE(22),BAL_JRZC DOUBLE(22),AVG_D_JRZC DOUBLE(22),BAL_BBW DOUBLE(22),AVG_D_BBW DOUBLE(22),TICKETDELS DOUBLE(22),TICKETRATIO DOUBLE(22),WKLODEQ DOUBLE(22),CREDIT DOUBLE(22),ACNTNUM DOUBLE(22),CUSTNO DOUBLE(25),MOVEAC DOUBLE(22),ACNTTIME DOUBLE(22),LENDERS DOUBLE(22),VOLB DOUBLE(22),TRANSNUM DOUBLE(22),APPROVAL DOUBLE(22),TRANS_COUNT_SCF_S DOUBLE(22),DIFFICULTY DOUBLE(22),TRANS_COUNT_MJ_S DOUBLE(22),INVEBAPR DOUBLE(22),BAL_SXZC_LY DOUBLE(19),RMB_TOTAL_AMT DOUBLE(27),FOR_TOTAL_AMT DOUBLE(27),IS_NEW INT(10),ZGUEST_GROUP VARCHAR(20),KEYVALUE VARCHAR(60));";
//		sql = "insert into tempB SELECT PREFIX, ACNTAGE, OPTNAGE, BMD_CODE, COBASEDPRO, GRPID_LOB, GRPID_CUSCAT, GRPID_PRDSA, LOBID_MAPRD, LOBID_MACUS, CUSCAT_MAIN, CUSTMNO, STAFFNO, BEASID, SELIID, SUM(INTERESTIN), SUM(CSTCAPITAL), SUM(VALCAPITAL), SUM(INTERESTEX), SUM(FEECOMIN), SUM(FEECOMEX), SUM(REINVES), SUM(VALUEGAINS), SUM(EXCHANGE), SUM(REBZNSO), SUM(PFABLITY), SUM(JZZB_VAL), SUM(INC_TAX), SUM(OPTAX), SUM(BSGAP), SUM(OTHER_COST), SUM(INCOME_OPO), SUM(EXPENSE_OPO), SUM(BAL_AVG_M), SUM(MOBGNBA), SUM(MOENDBA),"
//				+ "SUM(IOATCRBTTA), SUM(RISKWEASS), SUM(CAP_SUM), SUM(BAL_BW), SUM(VOL_AVG_D), SUM(EXPENSE_ZCJZSS), SUM(VAL_JZSS), SUM(CAPITAL_JG), SUM(CAPITAL_CRED), SUM(RWA_CR), SUM(AVG_D_JZSS), SUM(BAL_JRZC), SUM(AVG_D_JRZC), SUM(BAL_BBW), SUM(AVG_D_BBW), SUM(TICKETDELS), SUM(TICKETRATIO), SUM(WKLODEQ), SUM(CREDIT), 1 AS ACNTNUM, SUM(CUSTNO), SUM(MOVEAC), SUM(ACNTTIME), SUM(LENDERS), SUM(VOLB), SUM(TRANSNUM), SUM(APPROVAL), SUM(TRANS_COUNT_SCF_S), SUM(DIFFICULTY), SUM(TRANS_COUNT_MJ_S), SUM(INVEBAPR),SUM(BAL_SXZC_LY),SUM(RMB_TOTAL_AMT),SUM(FOR_TOTAL_AMT),SUM(IS_NEW),ZGUEST_GROUP, KEYVALUE "
//				+ "FROM tempA "
//				+ "GROUP BY PREFIX, ACNTAGE, OPTNAGE, BMD_CODE, COBASEDPRO, GRPID_LOB, GRPID_CUSCAT, GRPID_PRDSA, LOBID_MAPRD, LOBID_MACUS, CUSCAT_MAIN, CUSTMNO, STAFFNO, BEASID, SELIID, ZGUEST_GROUP, KEYVALUE proc";
//        sql="SELECT PREFIX, ACNTAGE, OPTNAGE, BMD_CODE, COBASEDPRO, GRPID_LOB, GRPID_CUSCAT, GRPID_PRDSA, LOBID_MAPRD, LOBID_MACUS, CUSCAT_MAIN, CUSTMNO, STAFFNO, BEASID, SELIID, SUM(INTERESTIN), SUM(CSTCAPITAL), SUM(VALCAPITAL), SUM(INTERESTEX), SUM(FEECOMIN), SUM(FEECOMEX), SUM(REINVES), SUM(VALUEGAINS), SUM(EXCHANGE), SUM(REBZNSO), SUM(PFABLITY), SUM(JZZB_VAL), SUM(INC_TAX), SUM(OPTAX), SUM(BSGAP), SUM(OTHER_COST), SUM(INCOME_OPO), SUM(EXPENSE_OPO), SUM(BAL_AVG_M), SUM(MOBGNBA), SUM(MOENDBA),"
//				+ "SUM(IOATCRBTTA), SUM(RISKWEASS), SUM(CAP_SUM), SUM(BAL_BW), SUM(VOL_AVG_D), SUM(EXPENSE_ZCJZSS), SUM(VAL_JZSS), SUM(CAPITAL_JG), SUM(CAPITAL_CRED), SUM(RWA_CR), SUM(AVG_D_JZSS), SUM(BAL_JRZC), SUM(AVG_D_JRZC), SUM(BAL_BBW), SUM(AVG_D_BBW), SUM(TICKETDELS), SUM(TICKETRATIO), SUM(WKLODEQ), SUM(CREDIT), 1 AS ACNTNUM, SUM(CUSTNO), SUM(MOVEAC), SUM(ACNTTIME), SUM(LENDERS), SUM(VOLB), SUM(TRANSNUM), SUM(APPROVAL), SUM(TRANS_COUNT_SCF_S), SUM(DIFFICULTY), SUM(TRANS_COUNT_MJ_S), SUM(INVEBAPR),SUM(BAL_SXZC_LY),SUM(RMB_TOTAL_AMT),SUM(FOR_TOTAL_AMT),SUM(IS_NEW),ZGUEST_GROUP, KEYVALUE "
//			+ "FROM tempA "
//				+ "GROUP BY PREFIX, ACNTAGE, OPTNAGE, BMD_CODE, COBASEDPRO, GRPID_LOB, GRPID_CUSCAT, GRPID_PRDSA, LOBID_MAPRD, LOBID_MACUS, CUSCAT_MAIN, CUSTMNO, STAFFNO, BEASID, SELIID, ZGUEST_GROUP, KEYVALUE";		
//		sql="select count(PREFIX) from tempB";
//		sql = "insert into ZNMAT004(MANDT, DATYPE, PERIO, KEYVALUE, GENERALACNT, ACNTAGE, OPTNAGE, BMD_CODE, COBASEDPRO, GRPID_LOB, GRPID_CUSCAT, GRPID_PRDSA, LOBID_MAPRD, LOBID_MACUS, CUSCAT_MAIN, CUSTMNO, STAFFNO, BEASID, SELIID, INTERESTIN, CSTCAPITAL, VALCAPITAL, INTERESTEX, FEECOMIN, FEECOMEX, REINVES, VALUEGAINS, EXCHANGE, REBZNSO, PFABLITY,	 JZZB_VAL, INC_TAX, OPTAX, BSGAP, OTHER_COST, INCOME_OPO, EXPENSE_OPO, TAMBOAIAO, MOBGNBA, MOENDBA, IOATCRBTTA, RISKWEASS, CAP_SUM, BAL_BW, VOL_AVG_D, EXPENSE_ZCJZSS, VAL_JZSS, CAPITAL_JG, CAPITAL_CRED, RWA_CR, AVG_D_JZSS, BAL_JRZC, AVG_D_JRZC, BAL_BBW, AVG_D_BBW, TICKETDELS, TICKETRATIO, WKLODEQ, CREDIT, ACNTNUM, CUSTNO, MOVEAC, ACNTTIME, LENDERS, VOLB, TRANSNUM, APPROVAL, TRANS_COUNT_SCF_S, DIFFICULTY, TRANS_COUNT_MJ_S, INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP,PACKCOUNT)"
//				+ " SELECT '801', 'B0', '2018001', concat(PREFIX,KEYVALUE) AS KEYVALUE,concat(PREFIX,KEYVALUE) AS GENERALACNT, ACNTAGE, OPTNAGE, BMD_CODE, COBASEDPRO, GRPID_LOB, GRPID_CUSCAT, GRPID_PRDSA, LOBID_MAPRD, LOBID_MACUS, CUSCAT_MAIN, CUSTMNO, STAFFNO, BEASID, SELIID, abs(INTERESTIN) AS INTERESTIN, abs(CSTCAPITAL) AS CSTCAPITAL, abs(VALCAPITAL) AS VALCAPITAL, abs(INTERESTEX) AS INTERESTEX, abs(FEECOMIN) AS FEECOMIN, abs(FEECOMEX) AS FEECOMEX, abs(REINVES) AS REINVES, abs(VALUEGAINS) AS VALUEGAINS, abs(EXCHANGE) AS EXCHANGE, abs(REBZNSO) AS REBZNSO, abs(PFABLITY) AS PFABLITY, abs(JZZB_VAL) AS JZZB_VAL, abs(INC_TAX) AS INC_TAX, abs(OPTAX) AS OPTAX, abs(BSGAP) AS BSGAP, abs(OTHER_COST) AS OTHER_COST, abs(INCOME_OPO) AS INCOME_OPO, abs(EXPENSE_OPO) AS EXPENSE_OPO, abs(BAL_AVG_M) AS TAMBOAIAO, abs(MOBGNBA) AS MOBGNBA, abs(MOENDBA) AS MOENDBA,"
//				+ "abs(IOATCRBTTA) AS IOATCRBTTA, abs(RISKWEASS) AS RISKWEASS, abs(CAP_SUM) AS CAP_SUM, abs(BAL_BW) AS BAL_BW, abs(VOL_AVG_D) AS VOL_AVG_D, abs(EXPENSE_ZCJZSS) AS EXPENSE_ZCJZSS, abs(VAL_JZSS) AS VAL_JZSS, abs(CAPITAL_JG) AS CAPITAL_JG, abs(CAPITAL_CRED) AS CAPITAL_CRED, abs(RWA_CR) AS RWA_CR, abs(AVG_D_JZSS) AS AVG_D_JZSS, abs(BAL_JRZC) AS BAL_JRZC, abs(AVG_D_JRZC) AS AVG_D_JRZC, abs(BAL_BBW) AS BAL_BBW, abs(AVG_D_BBW) AS AVG_D_BBW, abs(TICKETDELS) AS TICKETDELS, abs(TICKETRATIO) AS TICKETRATIO, abs(WKLODEQ) AS WKLODEQ, abs(CREDIT) AS CREDIT, 1 AS ACNTNUM, abs(CUSTNO) AS CUSTNO, abs(MOVEAC) AS MOVEAC, abs(ACNTTIME)AS ACNTTIME, abs(LENDERS) AS LENDERS, abs(VOLB) AS VOLB, abs(TRANSNUM) AS TRANSNUM, abs(APPROVAL) AS APPROVAL, abs(TRANS_COUNT_SCF_S) AS TRANS_COUNT_SCF_S, abs(DIFFICULTY) AS DIFFICULTY, abs(TRANS_COUNT_MJ_S) AS TRANS_COUNT_MJ_S, abs(INVEBAPR) AS INVEBAPR,abs(BAL_SXZC_LY) AS BAL_SXZC_LY,abs(RMB_TOTAL_AMT) AS RMB_TOTAL_AMT,abs(FOR_TOTAL_AMT) AS FOR_TOTAL_AMT,abs(IS_NEW) AS IS_NEW,ZGUEST_GROUP, COUNT(INTERESTIN) "
//				+ "FROM tempB "
//				+ "GROUP BY PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP proc";

		
		
		
		
		
		//update测试
//		sql="create table temp1(name varchar(5),age int(5))";
//        sql="create table temp2(name varchar(5),age int(5))";
//        sql="insert into temp1(name,age) values('aaa','1')";
//        sql="insert into temp1 values('bbb','2')";
//        sql="insert into temp1(name,age) values('ccc','3')";
//        sql="insert into temp1(name,age) values('ddd','4')";
//        sql="insert into temp1(name,age) values('eee',5)";
//        sql="insert into temp2(name,age) values('111',1)";
//        sql="insert into temp2(name,age) values('222',2)";
//		sql="insert into temp2(name,age) values('333',4)";
//		sql="insert into temp2(name,age) values('444',3)";
//		sql="create table temp4(age varchar(5))";
//		sql="insert into temp4(age) values('4')";
//		sql="select * from temp1";
//		sql="drop table temp1";
//		sql="select * from temp2";
//		sql="update  temp2 set name ='ddd' from temp2,temp4 where temp2.age in temp4";
//		sql="update  temp2 set name ='ddd' from temp2 where age='1'";
//		sql="update ZNMAT142 set MANDT='AAA' from ZNMAT142 where MANDT='BWV'";
//		sql="update temp1 set a.name=b.name from temp1 a,temp2 b where a.age=b.age ";
//        sql="select * from temp1";
//        sql="select * from (select * from temp1)";
//        sql="update temp1 set  name='bbb' from temp1 where age=2";
//        sql="update temp1 set  name='22' from temp1 where substr(name,1,1)=age";
//        sql="select substr(name,1,2) from temp1";
//        sql="update temp1  left join temp2  ON temp1.age=temp2.age set  temp1.name = temp2.name from temp1   ";
//        sql="update temp1  set  temp1.name = temp2.name from temp1  left join temp2  ON temp1.age=temp2.age  ";
//        sql="select  * from temp1";
//		sql="select name from temp1 where max(abs(age))<= 1 ";
//		sql="select name from temp2 where abs(age)<=2 ";
          
      
        
        
        
        
        
      
		//中信
	
//		sql="CREATE TABLE VT_NEW_129 (Pty_Id varchar(3), Pty_Rel_Clss_Cd varchar(3), Start_Dt varchar(3), Rltv_Pty_Id varchar(3), End_Dt varchar(3), Src_Sys_Id varchar(3), Src_Tbl_Name varchar(3))";
//		sql="INSERT INTO VT_NEW_129 (Pty_Id,Rltv_Pty_Id) SELECT BANK_NBR_4_NBR_6, ZBCH_FILE_BUFFER FROM S00_SEMA_ZCMBRCHP WHERE ZBCH_FILE_BUFFER is not null AND ZBCH_FILE_BUFFER != ''";
//		sql="select * from VT_NEW_129";
//		sql="UPDATE S00_SEMA_ZCMBRCHP SET Pty_Rel_Clss_Cd='6',Start_Dt='1',End_Dt='1',Src_Sys_Id='0',Src_Tbl_Name='00' WHERE Pty_Id='SIY'";
		
		
			
		
		
		
		//齐鲁银行
//		sql="select trim(cc_call_center_id) from call_center where cc_call_center_sk='1'";
//		sql="select case when  substr(cc_call_center_id,9,1)='C' then '1' else '2' end from call_center where cc_call_center_sk='1'";
//		sql="select case when  IFNULL(cc_call_center_id,'C')='C' then '1' else '2' end from call_center where cc_call_center_sk='1'";
//        sql="select concat(concat(concat(concat(cc_call_center_id,cc_call_center_id),cc_call_center_id),cc_call_center_id),cc_call_center_id) from call_center where cc_call_center_sk='1'";
//        sql="select cc_call_center_id from call_center where cc_call_center_id<>'AAAAAAAAEAAAAAAA'";
//    
//        sql="create table temp11(name varchar(5),age varchar(5))";
//        sql="create table temp22(name2 varchar(5),age varchar(5))";
//        sql="create table temp33(name3 varchar(5),age varchar(5))";
//        sql="insert into temp11(name,age) values('aaa','1')";
//        sql="insert into temp11(name,age) values('bbb','2')";
//        sql="insert into temp11(name,age) values('ccc','3')";
//        sql="insert into temp22(name2,age) values('abb','1')";
//        sql="insert into temp22(name2,age) values('acc','4')";
//        sql="insert into temp33(name3,age) values('baa','4')";
//        sql="insert into temp33(name3,age) values('bab','1')";
//        sql="select * from temp11";
//        sql="select * from temp22";
//        sql="select * from temp33";
//        sql="select  a.name,a.age,b.name2,b.age from temp11 a left join temp22 b on a.age=b.age";
     //   sql="select a.name,a.age,b.name2,b.age,c.name3,c.age from temp11 a left join temp22 b on a.age=b.age left join temp33 c on b.age=c.age";

//		AAAAAAAABAAAAAAA
//		AAAAAAAACAAAAAAA
//		AAAAAAAACAAAAAAA
//		AAAAAAAAEAAAAAAA
//		AAAAAAAAEAAAAAAA
//		AAAAAAAAEAAAAAAA

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
//		//存储4
//		sql = "create table temp3(DATYPE varchar(2))";
////		sql="select * from temp3";
//		sql = "insert into temp3(DATYPE)SELECT DATYPE FROM ZNMAT088A WHERE BS = '1' ";
//		sql = "create table SEND1(CUSTMCATYP VARCHAR(50),CUSTMCACOD VARCHAR(50),BJGTLINES VARCHAR(50),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),CRNSCOD VARCHAR(5),ABJGTLINES VARCHAR(120),ACNTAGE VARCHAR(50),BMD_CODE VARCHAR(20),BUZNSNTURE VARCHAR(50),CATE_CODE VARCHAR(20),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),OPTNAGE VARCHAR(50),SECTOR VARCHAR(50),STAFFNO VARCHAR(50),ZIZHU_CODE VARCHAR(20),OPEXPENSES DOUBLE(25))";
//         sql ="select KM from ZNMAT011 where PERIO = '2018001' AND ACNTAGE = '0001'";
//		sql="SELECT ZTAB.CUSTMCATYP AS CUSTMCATYP,ZTAB.CUSTMCACOD AS CUSTMCACOD,ZTAB.BJGTLINES  AS BJGTLINES,ZTAB.SEQNR AS SEQNR_SPR ,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE,SUM(OPEXPENSES) AS OPEXPENSES FROM  ZNMAT011  ZTAB  join temp3 on ZTAB.DATYPE = temp3.DATYPE where ZTAB.PERIO = '2018001' AND ZTAB.ACNTAGE = '0001' AND (ZTAB.KM = '50800801' OR ZTAB.KM = '50800802' OR ZTAB.KM = '50800803' OR ZTAB.KM = '50800804') AND ZTAB.VERSION = ''   AND ZTAB.MANDT = '801' AND ZTAB.PERIO = '2018001'  GROUP BY CUSTMCATYP,CUSTMCACOD ,BJGTLINES ,SEQNR_SPR ,SEQNR_ROT ,RULEID_SPR ,CRNSCOD ,ABJGTLINES,ACNTAGE ,BMD_CODE ,BUZNSNTURE , CATE_CODE ,CBFTCODE ,CHANNEL ,COBASEDPRO ,CUSTMNO ,KM ,MAKTPRO ,OPTNAGE ,SECTOR ,STAFFNO ,ZIZHU_CODE ";
//		sql ="insert into SEND1(CUSTMCATYP,CUSTMCACOD,BJGTLINES,SEQNR_SPR,SEQNR_ROT,RULEID_SPR,CRNSCOD,ABJGTLINES,ACNTAGE,BMD_CODE,BUZNSNTURE,CATE_CODE,CBFTCODE,CHANNEL,COBASEDPRO,CUSTMNO,KM,MAKTPRO,OPTNAGE,SECTOR,STAFFNO,ZIZHU_CODE,OPEXPENSES)SELECT ZTAB.CUSTMCATYP AS CUSTMCATYP,ZTAB.CUSTMCACOD AS CUSTMCACOD,ZTAB.BJGTLINES  AS BJGTLINES,ZTAB.SEQNR AS SEQNR_SPR ,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE,SUM(OPEXPENSES) AS OPEXPENSES FROM  ZNMAT011  ZTAB  join temp3 on ZTAB.DATYPE = temp3.DATYPE where ZTAB.PERIO = '2018001' AND ZTAB.ACNTAGE = '0001' AND ZTAB.VERSION = ''   AND ZTAB.MANDT = '801' AND ZTAB.PERIO = '2018001'  PROC";
//		sql="select RULEID,CRNSCOD,ABJGTLINES from ZNMAT011 where  SEQNR='Y24658308639'";
//		sql = "insert into  SEND1(CUSTMCATYP,CUSTMCACOD ,BJGTLINES ,SEQNR_SPR ,SEQNR_ROT ,RULEID_SPR ,CRNSCOD ,ABJGTLINES,ACNTAGE ,BMD_CODE ,BUZNSNTURE , CATE_CODE ,CBFTCODE ,CHANNEL ,COBASEDPRO ,CUSTMNO ,KM ,MAKTPRO ,OPTNAGE ,SECTOR ,STAFFNO ,ZIZHU_CODE ,OPEXPENSES )"+    
//				 "SELECT ZTAB.CUSTMCATYP AS CUSTMCATYP,ZTAB.CUSTMCACOD AS CUSTMCACOD,ZTAB.BJGTLINES  AS BJGTLINES,ZTAB.SEQNR AS SEQNR_SPR ,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,CRNSCOD,ABJGTLINES,ACNTAGE,BMD_CODE,BUZNSNTURE,CATE_CODE,CBFTCODE,CHANNEL,COBASEDPRO,CUSTMNO,KM,MAKTPRO,OPTNAGE,SECTOR,STAFFNO,ZIZHU_CODE ,SUM(OPEXPENSES) AS OPEXPENSES "+
//						      "FROM  ZNMAT011 AS ZTAB join temp3 on ZTAB.DATYPE = temp3.DATYPE where ZTAB.PERIO = '2018001' AND ZTAB.ACNTAGE = '0001' "
////						      + " AND (ZTAB.KM = '50800801' OR ZTAB.KM = '50800802' OR ZTAB.KM = '50800803' OR ZTAB.KM = '50800804')"
//						      + " AND ZTAB.VERSION = '' AND ZTAB.MANDT = '801' AND ZTAB.PERIO = '2018001' AND ZTAB.IFDONE = '' "+
//						      "GROUP BY CUSTMCATYP,CUSTMCACOD ,BJGTLINES ,SEQNR_SPR ,SEQNR_ROT ,RULEID_SPR ,CRNSCOD ,ABJGTLINES,ACNTAGE ,BMD_CODE ,BUZNSNTURE , CATE_CODE ,CBFTCODE ,CHANNEL ,COBASEDPRO ,CUSTMNO ,KM ,MAKTPRO ,OPTNAGE ,SECTOR ,STAFFNO ,ZIZHU_CODE;";
//         sql=
//        		 "SELECT ZTAB.CUSTMCATYP AS CUSTMCATYP,ZTAB.CUSTMCACOD AS CUSTMCACOD,ZTAB.BJGTLINES  AS BJGTLINES,ZTAB.SEQNR AS SEQNR_SPR ,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE ,SUM(OPEXPENSES) AS OPEXPENSES "+
//			      "FROM  ZNMAT011 AS ZTAB join temp3 on ZTAB.DATYPE = temp3.DATYPE where ZTAB.PERIO = '2018001' AND ZTAB.ACNTAGE = '0001' "
////			      + " AND (ZTAB.KM = '50800801' OR ZTAB.KM = '50800802' OR ZTAB.KM = '50800803' OR ZTAB.KM = '50800804')"
//			      + " AND ZTAB.VERSION = '' AND ZTAB.MANDT = '801' AND ZTAB.PERIO = '2018001' AND ZTAB.IFDONE = '' "+
//			      "GROUP BY ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD ,ZTAB.BJGTLINES ,ZTAB.SEQNR_SPR ,ZTAB.SEQNR_ROT ,ZTAB.RULEID_SPR ,ZTAB.CRNSCOD ,ZTAB.ABJGTLINES,ZTAB.ACNTAGE ,ZTAB.BMD_CODE ,ZTAB.BUZNSNTURE , ZTAB.CATE_CODE ,ZTAB.CBFTCODE ,ZTAB.CHANNEL ,ZTAB.COBASEDPRO ,ZTAB.CUSTMNO ,ZTAB.KM ,ZTAB.MAKTPRO ,ZTAB.OPTNAGE ,ZTAB.SECTOR ,ZTAB.STAFFNO ,ZTAB.ZIZHU_CODE;";
//
//         sql = "insert into SEND1 select ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE,SUM(ZTAB.OPEXPENSES) "
// 				+ "FROM ZNMAT011 ZTAB join temp3 on ZTAB.DATYPE = temp3.DATYPE where ZTAB.PERIO = '2018001' and ZTAB.ACNTAGE = '0001' AND ZTAB.VERSION = '' AND ZTAB.MANDT = '801' AND ZTAB.IFDONE = '' "
// 				+ "GROUP BY ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR ,ZTAB.SEQNR_ROT ,ZTAB.RULEID,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO, ZTAB.CUSTMNO, ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE PROC";
//         sql="select * from SEND1";
//         sql = "create table temp1(ABJGTLINES VARCHAR(120))";
//         sql = "insert into temp1(ABJGTLINES)SELECT DISTINCT FIELDCOD AS ABJGTLINES FROM ZNMAT065 WHERE PERIO ='2018001' AND RULEID ='HQ_CC2PC_RL_GG' AND SETKIND ='R'";
//         sql="select  * from ZNMAT065 where RULEID ='HQ_CC2PC_RL_GG' ";
//		
		
//		//140
//	sql="create table testa(an1 varchar(5),meaval varchar(5))";
//	sql="insert into testa(an1,meaval) values('111','aaa')";
//	sql="insert into testa(an1,meaval) values('222','bbb')";
//	sql="insert into testa(an1,meaval) values('222','lck')";
//	sql="insert into testa(an1,meaval) values('333','ccc')";
//	sql="select * from testa ";
//	sql="create table testb(an1 varchar(5),meaval varchar(5))";
//	sql="insert into testb(an1,meaval) values('111','abc')";
//	sql="insert into testb(an1,meaval) values('111','nba')";
//	sql="insert into testb(an1,meaval) values('222','cba')";
//	sql="insert into testb(an1,meaval) values('222','lpl')";
//	
//	sql="select testa.an1,testb.an1,testa.meaval,testb.meaval from testa cross join testb on testa.meaval=testb.meaval ";
//		sql = "create table temp3(DATYPE varchar(2));";	
//		sql = "insert into temp3(DATYPE)SELECT DATYPE FROM ZNMAT088A WHERE BS = '1' proc;";
//		sql="select * from temp3";
//		sql = "create table SEND1(CUSTMCATYP VARCHAR(50),CUSTMCACOD VARCHAR(50),BJGTLINES VARCHAR(50),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),"+
//				"RULEID_SPR VARCHAR(50),CRNSCOD VARCHAR(5),ABJGTLINES VARCHAR(120),ACNTAGE VARCHAR(50),BMD_CODE VARCHAR(20),BUZNSNTURE VARCHAR(50),"+
//				"CATE_CODE VARCHAR(20),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),"+
//				"OPTNAGE VARCHAR(50),SECTOR VARCHAR(50),STAFFNO VARCHAR(50),ZIZHU_CODE VARCHAR(20),OPEXPENSES DOUBLE(25))";
//
//		sql = "insert into SEND1 select ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE,SUM(ZTAB.OPEXPENSES) "
//				+ "FROM ZNMAT011 ZTAB join temp3 on ZTAB.DATYPE = temp3.DATYPE where ZTAB.PERIO = '2018001' and ZTAB.ACNTAGE = '0001' AND ZTAB.VERSION = '' AND ZTAB.MANDT = '801' AND ZTAB.IFDONE = '' "
//				+ "GROUP BY ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR ,ZTAB.SEQNR_ROT ,ZTAB.RULEID,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO, ZTAB.CUSTMNO, ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE proc;";
//      KPBI75589594648F98334124112FCHVHYTUJMMY0001JYVJHQQVGNTOAENYCVNGEPZTFONWGF8245769JCADHLVAAGUDJO90.392470000000003
//		MAEF03506205204Y32237719852ONUEKXCUBULE0001OHATTYDGLCKNNYKGECQERHSHELESLV6038737IVKUZCDHVCSIKZ30.886410000000001
//		BMRG37297026024S48103566134IVWLKQUPUQVU0001WJOLBDFONWRRLGQSSQNBRIRXCWPTQY8340214QQVEMJOGXCKSGS80.692509999999999
//		sql = "create table temp1(ABJGTLINES VARCHAR(120));";
//		sql = "SELECT * FROM ZNMAT065 WHERE RULEID='HQ_CC2PC_RL_GG' ";
//		sql = "create table temp2(MANDT VARCHAR(3),BJGTLINES VARCHAR(50),PERIO VARCHAR(7),SEQNR VARCHAR(50),RULEID VARCHAR(50),RULEID_FQ VARCHAR(50),DATYPE VARCHAR(2),GENERALACNT VARCHAR(50),SECTORNUM DOUBLE(22));";
//		sql = "insert into temp2 SELECT TAB.MANDT,TAB.ABJGTLINES ,'5067032' ,TAB.KEYVALUE AS SEQNR ,'HQ_CC2PC_RL_GG' AS RULEID ,'HQ_CC2PC_RL_GG' AS RULEID_FQ ,'A3' AS DATYPE ,TAB.GENERALACNT, TAB.SECTORNUM "+
//		        "FROM  ZNMAT004 TAB JOIN temp1 on TAB.ABJGTLINES = temp1.ABJGTLINES where TAB.PERIO = '5067032' AND TAB.MANDT = '182'  AND TAB.DATYPE = 'V2' "+
//		        "GROUP BY TAB.MANDT,TAB.KEYVALUE,TAB.ABJGTLINES,TAB.GENERALACNT, TAB.SECTORNUM proc;";
		//182MF50670320HQ_CC2PC_RL_GGHQ_CC2PC_RL_GGA3S10.685300000000000
//		sql = "create table temp4(MANDT VARCHAR(3),CUSTMCATYP VARCHAR(50),CUSTMCACOD VARCHAR(50),BJGTLINES VARCHAR(50),PERIO VARCHAR(7),SEQNR VARCHAR(50),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),RULEID VARCHAR(50),RULEID_FQ VARCHAR(50),DATYPE VARCHAR(2),CRNSCOD VARCHAR(5),ACNTAGE VARCHAR(50),BMD_CODE VARCHAR(20),BUZNSNTURE VARCHAR(50),CATE_CODE VARCHAR(20),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),OPTNAGE VARCHAR(50),SECTOR VARCHAR(50),STAFFNO VARCHAR(50),ZIZHU_CODE VARCHAR(20),ABJGTLINES VARCHAR(120),GENERALACNT VARCHAR(50),OPEXPENSES DOUBLE(25));";
//		sql = "select temp2.MANDT,SEND1.CUSTMCATYP,SEND1.CUSTMCACOD,temp2.BJGTLINES,temp2.PERIO,temp2.SEQNR,SEND1.SEQNR_SPR,SEND1.SEQNR_ROT,SEND1.RULEID_SPR,temp2.RULEID,temp2.RULEID_FQ,temp2.DATYPE,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES,temp2.GENERALACNT,ROUND(SUM ( SEND1.OPEXPENSES * 100 / 100 * ( temp2.SECTORNUM / 47948.00000 ) ),5)  "
//				+ "from temp2 cross join SEND1 on temp2.MANDT = SEND1.CUSTMCATYP GROUP BY temp2.MANDT,SEND1.CUSTMCATYP,SEND1.CUSTMCACOD,temp2.BJGTLINES,temp2.PERIO,temp2.SEQNR,SEND1.SEQNR_SPR,SEND1.SEQNR_ROT,SEND1.RULEID_SPR,temp2.RULEID,temp2.RULEID_FQ,temp2.DATYPE,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES,temp2.GENERALACNT ;";
//      sql="select * from temp2";
//		sql="select count(*) from SEND1";


		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
//		sql="select * from temp3";
//		sql = "create table temp1(ABJGTLINES VARCHAR(120));";
//		419|2018001|HQ_CC2PC_RL_GG|USR|R|DSUSWVS|D291107|TY17MZ8U5S|114
//		sql = "insert into temp1(ABJGTLINES)SELECT DISTINCT FIELDCOD AS ABJGTLINES FROM ZNMAT065 WHERE PERIO ='2018001' AND RULEID ='HQ_CC2PC_RL_GG' AND SETKIND ='R';";
//
//		sql="SELECT SEND1.MANDT,SEND1.CUSTMCATYP AS CUSTMCATYP,SEND1.CUSTMCACOD AS CUSTMCACOD ,TAB.ABJGTLINES   AS BJGTLINES,'2018001' AS PERIO,ZNMA_SEQ.NEXTVAL AS SEQNR ,SEND1.SEQNR_SPR  AS SEQNR_SPR ,SEND1.SEQNR_ROT  AS SEQNR_ROT ,SEND1.RULEID_SPR AS RULEID_SPR ,'HQ_CC2PC_RL_GG' AS RULEID ,'HQ_CC2PC_RL_GG' AS RULEID_FQ ,'A3' AS DATYPE ,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES ,SEND1.GENERALACNT, SECTORNUM,ROUND(SUM ( SEND1.OPEXPENSES * 100 / 100 * ( SECTORNUM / 47948.00000 ) ),5) AS OPEXPENSES FROM  ZNMAT004  TAB JOIN temp1 on TAB.ABJGTLINES = temp1.ABJGTLINES join SEND1 where TAB.PERIO = '2018001' AND TAB.MANDT = '801' AND TAB.PERIO = '2018001' AND TAB.DATYPE = 'B9' GROUP BY MANDT,TAB.KEYVALUE,SEND1.CUSTMCATYP,SEND1.CUSTMCACOD,TAB.ABJGTLINES,SEND1.SEQNR_SPR,SEND1.SEQNR_ROT ,SEND1.RULEID_SPR ,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES,GENERALACNT,SECTORNUM";
//		sql="select ABJGTLINES from ZNMAT004 where PERIO='2018001' ";
		
		
		
		
		//存储5
//		sql = "create table temp1(DATYPE VARCHAR(2))";
//		sql = "insert into temp1 SELECT DATYPE FROM ZNMAT088";
//		sql = "create table SEND1(SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),CRNSCOD VARCHAR(5),ABJGTLINES VARCHAR(120),CATE_CODE VARCHAR(20),ZIZHU_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),SECTOR VARCHAR(50),BMD_CODE VARCHAR(20),BUZNSNTURE VARCHAR(50),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),STAFFNO VARCHAR(50),OPEXPENSES DOUBLE(25))";
//      sql="insert into SEND1 SELECT  ZTAB.SEQNR AS SEQNR_SPR ,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.CATE_CODE,ZTAB.ZIZHU_CODE,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.SECTOR,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.ACNTAGE,ZTAB.OPTNAGE,ZTAB.STAFFNO ,SUM(OPEXPENSES) AS OPEXPENSES FROM ZNMAT011  ZTAB join temp1 on ZTAB.DATYPE = temp1.DATYPE  where ZTAB.PERIO = '2018001' AND ZTAB.ACNTAGE = '0001'  AND ( ZTAB.KM = '16100180' OR  ZTAB.KM = '16100500' OR  ZTAB.KM = '16100420' ) AND ZTAB.SECTOR = 'A080000' AND ZTAB.CUSTMCATYP = '' AND ZTAB.CUSTMCACOD = '' AND ZTAB.MAKTPRO = '' AND ZTAB.ABJGTLINES = '' AND ZTAB.BJGTLINES = 'PO10' AND ZTAB.CUSTMNO = '' AND ZTAB.MANDT = '801' AND ZTAB.PERIO = '2018001' AND ZTAB.IFDONE = '' GROUP BY ZTAB.SEQNR ,ZTAB.SEQNR_ROT ,ZTAB.RULEID,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.CATE_CODE,ZTAB.ZIZHU_CODE,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.SECTOR,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.ACNTAGE,ZTAB.OPTNAGE,ZTAB.STAFFNO PROC";
//      sql="select * from SEND1";
//      sql="select OPEXPENSES from ZNMAT011 where PERIO = '2018001'";
//        sql = "create table temp2(FIELDCOD VARCHAR(50))";
//      sql="SELECT DISTINCT FIELDCOD FROM ZNMAT065 WHERE FIELDGRP = 'GB00017' AND FIELD = 'OPTNAGE' AND SETKIND = 'R' AND RULEID = 'HQ_SJ_GG' AND VERSION = '' AND MANDT = '801' AND PERIO = '2018001'";
//        ID2405C0KF
//        sql = "insert into temp2  SELECT DISTINCT FIELDCOD FROM ZNMAT065 WHERE FIELDGRP = 'GB00017' AND FIELD = 'OPTNAGE' AND SETKIND = 'R' AND RULEID = 'HQ_SJ_GG' AND VERSION = '' AND MANDT = '801' AND PERIO = '2018001'";
//        sql = "create table temp3(ORGANLEAF VARCHAR(50))";
//        sql="insert into temp3 SELECT DISTINCT ZNMAT046.ORGANLEAF FROM ZNMAT046 join temp2 on ZNMAT046.ORGANCOD = temp2.FIELDCOD where ORGANTYP = '601' AND MANDT = '801' AND PERIO = '2018001'";
//      sql="select * from temp3";//UOS3W3L2O9
//      sql="select OPTNAGE from ZNMAT004 where PERIO = '2018001'  AND DATYPE = 'B0' AND MANDT = '801'";
//        sql="SELECT MANDT,'2018001' AS PERIO ,0 AS SEQNR ,SEND1.SEQNR_SPR  AS SEQNR_SPR ,SEND1.SEQNR_ROT  AS SEQNR_ROT ,SEND1.RULEID_SPR AS RULEID_SPR ,'HQ_SJ_GG' AS RULEID ,'C3' AS DATYPE ,SEND1.CRNSCOD,SEND1.CATE_CODE,SEND1.KM,SEND1.SECTOR,SEND1.BUZNSNTURE,SEND1.CHANNEL ,TAB.ABJGTLINES,TAB.ACNTAGE,TAB.BMD_CODE,TAB.COBASEDPRO,TAB.CUSTMNO,TAB.ZIZHU_CODE,TAB.CBFTCODE,TAB.MAKTPRO,TAB.OPTNAGE,TAB.STAFFNO,TAB.ZGUEST_GROUP ,GENERALACNT,'FTYZ0000000013' AS FACTORYID , OPEXPENSES FROM ZNMAT004 AS TAB join temp3 on  TAB.OPTNAGE = temp3.ORGANLEAF  join SEND1 where TAB.PERIO = '2018001'  AND TAB.DATYPE = 'B0' AND TAB.MANDT = '801'  GROUP BY MANDT, TAB. PFABLITY , SEND1.SEQNR_SPR, SEND1.SEQNR_ROT , SEND1.RULEID_SPR , SEND1.CRNSCOD, SEND1.CATE_CODE, SEND1.KM, SEND1.SECTOR, SEND1.BUZNSNTURE, SEND1.CHANNEL ,TAB.ABJGTLINES, TAB.ACNTAGE, TAB.BMD_CODE, TAB.COBASEDPRO, TAB.CUSTMNO, TAB.ZIZHU_CODE, TAB.CBFTCODE, TAB.MAKTPRO, TAB.OPTNAGE, TAB.STAFFNO, TAB.ZGUEST_GROUP, GENERALACNT";
//      sql = "INSERT INTO ZNMAT105 SELECT MANDT,'2018001' AS PERIO ,0 AS SEQNR ,SEND1.SEQNR_SPR  AS SEQNR_SPR ,SEND1.SEQNR_ROT  AS SEQNR_ROT ,SEND1.RULEID_SPR AS RULEID_SPR ,'HQ_SJ_GG' AS RULEID ,'C3' AS DATYPE ,SEND1.CRNSCOD,SEND1.CATE_CODE,SEND1.KM,SEND1.SECTOR,SEND1.BUZNSNTURE,SEND1.CHANNEL ,TAB.ABJGTLINES,TAB.ACNTAGE,TAB.BMD_CODE,TAB.COBASEDPRO,TAB.CUSTMNO,TAB.ZIZHU_CODE,TAB.CBFTCODE,TAB.MAKTPRO,TAB.OPTNAGE,TAB.STAFFNO,TAB.ZGUEST_GROUP ,GENERALACNT,'FTYZ0000000013' AS FACTORYID ,ROUND(SUM ( SEND1.OPEXPENSES * 040 /100 * ACNTNUM / 15284962.11600 + SEND1.OPEXPENSES * 060 /100 * PFABLITY / 25095244730.10000),5) AS OPEXPENSES FROM ZNMAT004 AS TAB join temp3 on  TAB.OPTNAGE = temp3.ORGANLEAF join temp3 on TAB.OPTNAGE = TEMPTABLE.ORGANLEAF join SEND1   where TAB.PERIO = '2018001' AND TAB.PERIO = '2018001' AND TAB.DATYPE = 'B0' AND TAB.MANDT = '801' AND TAB.PERIO = '2018001' AND (2091915.00000 * 040 /100 * ACNTNUM / 15434928.65000 + 2091915.00000 * 060 /100 * PFABLITY / 25147056315.45000) >= 0.05000000000000 GROUP BY MANDT, TAB. PFABLITY , SEND1.SEQNR_SPR, SEND1.SEQNR_ROT , SEND1.RULEID_SPR , SEND1.CRNSCOD, SEND1.CATE_CODE, SEND1.KM, SEND1.SECTOR, SEND1.BUZNSNTURE, SEND1.CHANNEL ,TAB.ABJGTLINES, TAB.ACNTAGE, TAB.BMD_CODE, TAB.COBASEDPRO, TAB.CUSTMNO, TAB.ZIZHU_CODE, TAB.CBFTCODE, TAB.MAKTPRO, TAB.OPTNAGE, TAB.STAFFNO, TAB.ZGUEST_GROUP, GENERALACNT ";

		
		
		
		
		
		//招行
		//        sql="select VALUE2   from T_POC  WHERE TYPE= 'UVZVU' AND VALUE1= '36.59.213.70'";
//		sql="select DD_TRAN_DAT_TIM,SEQ_NO from T_TRANSACTION  WHERE MERCHANT_ID= '000000000' AND SD_TERM_NAME_LOC ='JFETQBPVWE' AND SINCE_EPOCH('2018-06-07 07:33:43') - SINCE_EPOCH(DD_TRAN_DAT_TIM) <= 7 * 3600 ORDER BY DD_TRAN_DAT_TIM ";
//		sql="select a.DD_TRAN_DAT_TIM,b.IP from T_TRANSACTION a left join t_merchant b ON a.MERCHANT_ID=b.MERCHANT_ID where a.SD_TERM_CNTRY = 'WESVOENMPV' AND a.SD_TERM_NAME_LOC ='JFETQBPVWE' AND SINCE_EPOCH('2018-06-07 07:33:43') - SINCE_EPOCH(DD_TRAN_DAT_TIM) <= 7 * 3600 ORDER BY DD_TRAN_DAT_TIM";
//		sql="select DD_TRAN_DAT_TIM,SD_TERM_CNTRY,MD_TRAN_AMT1 from T_TRANSACTION  WHERE SM_USER_ID= '3253542558' AND SD_KEY= '6185309077' AND T_TRANSACTION.SEQ_NO <> '' ORDER BY DD_TRAN_DAT_TIM DESC";
//		sql="select DD_TRAN_DAT_TIM,SD_TERM_ST  from T_TRANSACTION  WHERE SM_USER_ID = '3253542558' AND SD_KEY = '6185309077' AND T_TRANSACTION.SEQ_NO <> '' AND SD_TERM_ST = 'NZJEQ' AND SINCE_EPOCH('2018-06-07 07:33:43') - SINCE_EPOCH(DD_TRAN_DAT_TIM) <= 7 * 24 *  3600 ORDER BY DD_TRAN_DAT_TIM ";
//		sql="select DD_TRAN_DAT_TIM,T_TRANSACTION.SEQ_NO  from T_TRANSACTION  WHERE SM_USER_ID= '6525600315' AND SD_KEY = '1923275495'  AND SEQ_NO <>'' AND SD_TERM_CNTRY='FYWIOZKRON' AND SINCE_EPOCH('2019-06-07 07:33:43') - SINCE_EPOCH(DD_TRAN_DAT_TIM) >= 24 * 3600 ORDER BY DD_TRAN_DAT_TIM DESC";
//		sql="select a.MERCHANT_ID,b.IP   from t_transaction a left join t_merchant b ON a.MERCHANT_ID=b.MERCHANT_ID where SD_TERM_CNTRY = 'WESVOENMPV'";
//		sql="select count(*)   from T_TRANSACTION  WHERE SM_USER_ID = '3253542558' AND SD_KEY = '6185309077' AND SEQ_NO <> '' AND SD_TERM_ST = 'NZJEQ' AND SINCE_EPOCH('2018-06-07 07:33:43') - SINCE_EPOCH(DD_TRAN_DAT_TIM) <= 7 * 24 *  3600 ";
//		sql="select count(*) from T_TRANSACTION";
//		sql="select VALUE2,TYPE  from T_POC  WHERE TYPE= concat('UVZ','VU') ";
//		sql="select count(*) from T_TRANSACTION  WHERE SM_USER_ID = '3253542558' AND SD_KEY = '6185309077' AND SEQ_NO <>'' AND  t_transaction.SD_TERM_CNTRY='WESVOENMPV' AND SINCE_EPOCH('2019-06-07 07:33:43') - SINCE_EPOCH(DD_TRAN_DAT_TIM) >= 24 * 3600 ";
//		sql=" select count(*)  from T_POC  WHERE TYPE = 'UVZVU' AND VALUE1 = '36.59.213.70'";
//		sql=" select count(*)   V_POST_CDE from T_POC  WHERE TYPE= 'UVZVU' AND VALUE1 = CONCAT(LEFT('36.59.213.70', 5), RIGHT('36.59.213.70',7))";
//		sql="select SEQ_NO,MERCHANT_ID from T_TRANSACTION  WHERE SM_USER_ID = '3253542558' AND SD_KEY = '6185309077' AND SEQ_NO <>'' AND MD_TRAN_AMT1 > 10 AND SINCE_EPOCH('2018-06-07 07:33:43') - SINCE_EPOCH(DD_TRAN_DAT_TIM) <= 60 ";
//		sql="select min(MD_TRAN_AMT1) from T_TRANSACTION";
//		sql="select medium MD_TRAN_AMT1 from T_TRANSACTION";
//		sql="select a.DD_TRAN_DAT_TIM,a.SD_TERM_NAME_LOC,b.IP from  T_M b left join T_T a ON a.MERCHANT_ID=b.MERCHANT_ID where b.MERCHANT_ID='000010000'";
//		sql="select a.DD_TRAN_DAT_TIM,a.SD_TERM_NAME_LOC,b.ip from T_T a left join T_M b ON a.MERCHANT_ID=b.MERCHANT_ID where a.SD_TERM_CNTRY = 'DJXFHQ' AND a.SD_TERM_NAME_LOC ='110058' AND SINCE_EPOCH('2017-10-14 12:02:03') - SINCE_EPOCH(DD_TRAN_DAT_TIM) <= 7 * 3600 ORDER BY DD_TRAN_DAT_TIM asc";
//		sql="select * from T_T where MERCHANT_ID='000010000'";
//		sql="select DD_TRAN_DAT_TIM from T_T order by DD_TRAN_DAT_TIM desc";
//		sql="select  a.IP from T1 a left join T2 b on a.ID=b.ID orber by IP";
		
		
		
//		sql="select JOB,VALUE2 from T where TYPE='W' order by JOB";
//		sql="select T_P.VALUE1,T_POC.VALUE1 from T_P left join T_POC on T_P.TYPE=T_POC.TYPE where T_P.TYPE='LFSWK'";
//		sql="select  VALUE1,VALUE2 from T where JOB=concat('620','722')";
//		sql="select  VALUE1,VALUE2 from T where JOB=concat(left('62023',3),right('214722',3))";
//		sql="select VALUE2 from T1 ";
//		sql="select DATA1 from T_TRANSACTION1  ";
//		sql="select T1.VALUE2,T2.VALUE2 from T1  join on T1.TYPE=T2.TYPE";
//		sql="select MERCHANT_ID from T_TRANSACTION WHERE SINCE_EPOCH('2017-10-24 06:03:56')-SINCE_EPOCH(DD_TRAN_DAT_TIM)<>0";
//		sql="select DD_TRAN_DAT_TIM,MERCHANT_ID from T_TRANSACTION where SINCE_EPOCH('2018-01-10 07:52:46')-SINCE_EPOCH(DD_TRAN_DAT_TIM)>=2";
//		sql="select a.value2,b.value2 FROM T1 a right join T2 b on a.type=b.type";
//		sql="select a.value2,b.MERCHANT_ID from T1 a left join T_TRANSACTION b on a.TYPE= b.SD_TERM_ST where SINCE_EPOCH('2017-10-20 19:31:06')-SINCE_EPOCH(DD_TRAN_DAT_TIM) =0 and SEQ_NO<>''";
		
		
		
		
		
//		sql="select VALUE2 from t_poc WHERE TYPE= 'UVZVU' AND VALUE1= '36.59.213.70'";
//		sql="select T_TRANSACTION.SEQ_NO from T_TRANSACTION  WHERE T_TRANSACTION.MERCHANT_ID= '000000000'  AND T_TRANSACTION.SD_TERM_NAME_LOC ='JFETQBPVWE'";
//		sql="select T_MERCHANT.IP from T_MERCHANT where T_MERCHANT.MERCHANT_ID = '000000000'";
//		sql="select T_TRANSACTION.SD_TERM_CNTRY,T_TRANSACTION.MD_TRAN_AMT1 from T_TRANSACTION WHERE SM_USER_ID= '3253542558' AND SD_KEY= '6185309077' AND T_TRANSACTION.SEQ_NO <> ''";
//		sql="select T_TRANSACTION.SD_TERM_ST  from T_TRANSACTION  WHERE T_TRANSACTION.SM_USER_ID = '3253542558' AND T_TRANSACTION.SD_KEY = '6185309077' AND T_TRANSACTION.SEQ_NO <> ''AND T_TRANSACTION.SD_TERM_ST = 'NZJEQ'";
//		sql="select T_TRANSACTION.SEQ_NO from T_TRANSACTION T_TRANSACTION WHERE T_TRANSACTION.SM_USER_ID = '3253542558' AND T_TRANSACTION.SD_KEY = '6185309077' AND T_TRANSACTION.SEQ_NO <>'' AND T_TRANSACTION.SD_TERM_CNTRY='WESVOENMPV'";
//		sql="select a.MERCHANT_ID ,b.NAME,b.IP INTO V_IP,b.Address    FROM t_transaction a left join t_merchant b ON a.MERCHANT_ID=b.MERCHANT_ID where a. MERCHANT_ID = '00010'";
//		sql="select count(*)   from T_TRANSACTION  WHERE SM_USER_ID = '3253542558' AND SD_KEY = '6185309077'AND t_transaction.SEQ_NO <> ''AND t_transaction.SD_TERM_ST = 'NZJEQ'";
//		sql="select count(*) from T_TRANSACTION  WHERE SM_USER_ID = '3253542558'AND SD_KEY = '6185309077' AND t_transaction.SEQ_NO <>'' AND  t_transaction.SD_TERM_CNTRY='WESVOENMPV'";
//		sql="select count(*)  from T_POC WHERE TYPE = 'UVZVU' AND VALUE1 = '36.59.213.70'";
//		sql="select count(*)  V_POST_CDE from T_POC  WHERE TYPE= 'UVZVU'";
//		sql="select SEQ_NO,V_SEQ_NO6 FROM T_TRANSACTION WHERE SM_USER_ID = '3253542558' AND SD_KEY = '6185309077' AND SEQ_NO <> '' AND SD_RETL_ID =   AND t_transaction.MD_TRAN_AMT1 > 10";
//		sql="select T.VALUE3 from T_POC left join T on T.JOB=T_POC.JOB where T_POC.KEY='150688'";
//		sql="select VALUE3 from T where T_POC.KEY='150688' order by JOB";
		
		
		//存储过程第六个
//		sql="create table tempF(mandt VARCHAR(3),GENERALACNT VARCHAR(50),GRPID_LOB VARCHAR(35),PERIO VARCHAR(7))";
//		sql="select * from tempF";
//		sql="insert into tempF(mandt,GENERALACNT,GRPID_LOB,PERIO)SELECT mandt,GENERALACNT,GRPID_LOB,PERIO FROM ZNMAT004 WHERE PERIO ='6820931'  GROUP BY GENERALACNT,GRPID_LOB,PERIO proc";
//		OYDBZECWZTTNBE6820931
//		sql="select GROUP_ID,PERIO,GROUP_VAL from ZNMAT133 where GROUP_TYPE ='G01'";
//		sql="SELECT mandt, perio,'101',tempF.GENERALACNT,T2.GROUP_VAL FROM tempF join ZNMAT133 AS T2 on tempF.GRPID_LOB = T2.GROUP_ID WHERE  T2.GROUP_TYPE ='G01' AND	tempF.PERIO = '6820931' GROUP BY tempF.PERIO,tempF.GENERALACNT, T2.GROUP_VAL";
//		sql="insert into ZNMAT021(MANDT,LOB_PERIO,LOB_WD_ID,LOB_COKEY,LOB_WD_VAL)SELECT mandt,perio,'101',tempF.GENERALACNT,T2.GROUP_VAL FROM tempF join ZNMAT133 AS T2 on tempF.GRPID_LOB = T2.GROUP_ID WHERE T2.GROUP_TYPE ='G01' AND	tempF.PERIO = '6820931' GROUP BY tempF.PERIO,tempF.GENERALACNT, T2.GROUP_VAL PROC";
//		sql="insert into ZNMAT021(MANDT,LOB_PERIO,LOB_WD_ID,LOB_COKEY,LOB_WD_VAL)SELECT mandt,perio,'102',GENERALACNT,LOBID_MAPRD FROM ZNMAT004 WHERE LOBID_MAPRD <>'' AND PERIO = '6820931' GROUP BY PERIO,GENERALACNT,LOBID_MAPRD proc";
//		sql="insert into ZNMAT021(MANDT,LOB_PERIO,LOB_WD_ID,LOB_COKEY,LOB_WD_VAL)SELECT mandt,perio,'103',GENERALACNT,LOBID_MACUS FROM ZNMAT004 WHERE LOBID_MACUS <>'' AND	PERIO = '6820931' GROUP BY PERIO,GENERALACNT,LOBID_MACUS proc";
//	    sql="select * from ZNMAT021 where LOB_PERIO = '6820931'";
		
		
		
		
	//存储过程第二个
//		sql="select distinct mandt,cust_no, perio, '' FROM ZNMAT142  WHERE PERIO = '6820931' and GRPID_CUSCAT <>'' AND IS_UNPACKED = 'X'";
//		sql="insert into ZNMAT004NOPKLIST select distinct mandt, cust_no, perio, '' FROM ZNMAT142  WHERE PERIO = '6820931' and GRPID_CUSCAT <>'' AND IS_UNPACKED = 'X'";
//	    sql="create table C(STAFFNO VARCHAR(50))";
//	    sql="select * from C";
//		sql="insert into C(STAFFNO) select DISTINCT STAFFNO from ZNMAT134 WHERE PERIO = '6820931'";
//		sql="create table E(PRDLEAF VARCHAR(50))";
//		sql="insert into E(PRDLEAF) select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'G01%' AND PERIO = '6820931'";
//		sql="create table tempA(PREFIX VARCHAR(10),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),INTERESTIN DOUBLE(25),CSTCAPITAL DOUBLE(25),VALCAPITAL DOUBLE(25),INTERESTEX DOUBLE(25),FEECOMIN DOUBLE(25),FEECOMEX DOUBLE(25),REINVES DOUBLE(25),VALUEGAINS DOUBLE(25),EXCHANGE DOUBLE(25),REBZNSO DOUBLE(25),PFABLITY DOUBLE(25),JZZB_VAL DOUBLE(22),INC_TAX DOUBLE(22),OPTAX DOUBLE(22),BSGAP DOUBLE(22),OTHER_COST DOUBLE(22),INCOME_OPO DOUBLE(22),EXPENSE_OPO DOUBLE(22),BAL_AVG_M DOUBLE(22),MOBGNBA DOUBLE(25),MOENDBA DOUBLE(25),IOATCRBTTA DOUBLE(25),RISKWEASS DOUBLE(25),CAP_SUM DOUBLE(25),BAL_BW DOUBLE(22),VOL_AVG_D DOUBLE(22),EXPENSE_ZCJZSS DOUBLE(22),VAL_JZSS DOUBLE(22),CAPITAL_JG DOUBLE(22),CAPITAL_CRED DOUBLE(22),RWA_CR DOUBLE(22),AVG_D_JZSS DOUBLE(22),BAL_JRZC DOUBLE(22),AVG_D_JRZC DOUBLE(22),BAL_BBW DOUBLE(22),AVG_D_BBW DOUBLE(22),TICKETDELS DOUBLE(22),TICKETRATIO DOUBLE(22),WKLODEQ DOUBLE(22),CREDIT DOUBLE(22),ACNTNUM DOUBLE(22),CUSTNO DOUBLE(25),MOVEAC DOUBLE(22),ACNTTIME DOUBLE(22),LENDERS DOUBLE(22),VOLB DOUBLE(22),TRANSNUM DOUBLE(22),APPROVAL DOUBLE(22),TRANS_COUNT_SCF_S DOUBLE(22),DIFFICULTY DOUBLE(22),TRANS_COUNT_MJ_S DOUBLE(22),INVEBAPR DOUBLE(22),BAL_SXZC_LY DOUBLE(19),RMB_TOTAL_AMT DOUBLE(27),FOR_TOTAL_AMT DOUBLE(27),IS_NEW INTEGER(1),ZGUEST_GROUP VARCHAR(20))";
//		sql=" SELECT 'PC' as PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_CUSCAT,GRPID_CUSCAT,LOBID_MACUS,CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,IFNULL(C.STAFFNO,'9999999999') AS STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP FROM ZNMAT004TEMP AS A LEFT JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <= '6820931' LEFT JOIN  C ON  A.STAFFNO = C.STAFFNO LEFT JOIN  E ON A.COBASEDPRO = E.PRDLEAF WHERE  B.CUSTMNO IS NULL AND A.PERIO= '6820931'  AND E.PRDLEAF IS NULL";
//		sql="insert into tempA(PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_CUSCAT,GRPID_CUSCAT,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP)SELECT 'PC' as PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_CUSCAT,GRPID_CUSCAT,LOBID_MACUS,CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,IFNULL(C.STAFFNO,'9999999999') AS STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP FROM ZNMAT004TEMP AS A LEFT JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <= '6820931' LEFT JOIN  C ON  A.STAFFNO = C.STAFFNO LEFT JOIN  E ON A.COBASEDPRO = E.PRDLEAF WHERE  B.CUSTMNO IS NULL AND A.PERIO= '6820931' AND E.PRDLEAF IS NULL proc ";
//		sql="select * from tempA";
//		sql="create table F(PRDLEAF VARCHAR(50))";
//		sql="SELECT DISTINCT PRDLEAF FROM  ZNMAT023 WHERE (PRDNO LIKE 'G01%' OR PRDNO LIKE 'G02%') AND PERIO = '6820931'";
//		sql="insert into F(PRDLEAF)SELECT DISTINCT PRDLEAF FROM  ZNMAT023 WHERE (PRDNO LIKE 'G01%' OR PRDNO LIKE 'G02%') AND PERIO = '6820931'";
//		sql="	create table tempB(PREFIX VARCHAR(10),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),INTERESTIN DOUBLE(25),CSTCAPITAL DOUBLE(25),VALCAPITAL DOUBLE(25),INTERESTEX DOUBLE(25),FEECOMIN DOUBLE(25),FEECOMEX DOUBLE(25),REINVES DOUBLE(25),VALUEGAINS DOUBLE(25),EXCHANGE DOUBLE(25),REBZNSO DOUBLE(25),PFABLITY DOUBLE(25),JZZB_VAL DOUBLE(22),INC_TAX DOUBLE(22),OPTAX DOUBLE(22),BSGAP DOUBLE(22),OTHER_COST DOUBLE(22),INCOME_OPO DOUBLE(22),EXPENSE_OPO DOUBLE(22),BAL_AVG_M DOUBLE(22),MOBGNBA DOUBLE(25),MOENDBA DOUBLE(25),IOATCRBTTA DOUBLE(25),RISKWEASS DOUBLE(25),CAP_SUM DOUBLE(25),BAL_BW DOUBLE(22),VOL_AVG_D DOUBLE(22),EXPENSE_ZCJZSS DOUBLE(22),VAL_JZSS DOUBLE(22),CAPITAL_JG DOUBLE(22),CAPITAL_CRED DOUBLE(22),RWA_CR DOUBLE(22),AVG_D_JZSS DOUBLE(22),BAL_JRZC DOUBLE(22),AVG_D_JRZC DOUBLE(22),BAL_BBW DOUBLE(22),AVG_D_BBW DOUBLE(22),TICKETDELS DOUBLE(22),TICKETRATIO DOUBLE(22),WKLODEQ DOUBLE(22),CREDIT DOUBLE(22),ACNTNUM DOUBLE(22),CUSTNO DOUBLE(25),MOVEAC DOUBLE(22),ACNTTIME DOUBLE(22),LENDERS DOUBLE(22),VOLB DOUBLE(22),TRANSNUM DOUBLE(22),APPROVAL DOUBLE(22),TRANS_COUNT_SCF_S DOUBLE(22),DIFFICULTY DOUBLE(22),TRANS_COUNT_MJ_S DOUBLE(22),INVEBAPR DOUBLE(22),BAL_SXZC_LY DOUBLE(19),RMB_TOTAL_AMT DOUBLE(27),FOR_TOTAL_AMT DOUBLE(27),IS_NEW INTEGER(1),ZGUEST_GROUP VARCHAR(20))";
//		sql="SELECT 'PP' as PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,A.CUSTMNO,case A.STAFFNO when '' then '9999999999' else A.STAFFNO end AS STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP FROM ZNMAT004TEMP AS A left JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <='6820931' left JOIN F ON A.COBASEDPRO = F.PRDLEAF WHERE B.CUSTMNO IS not NULL  AND F.PRDLEAF IS NULL AND  A.PERIO = '6820931'";
//		sql="insert into tempA(PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_CUSCAT,GRPID_CUSCAT,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP)SELECT 'PP' as PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,A.CUSTMNO,case A.STAFFNO when '' then '9999999999' else A.STAFFNO end AS STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP FROM ZNMAT004TEMP AS A left JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <='6820931' left JOIN F ON A.COBASEDPRO = F.PRDLEAF WHERE B.CUSTMNO IS not NULL  AND F.PRDLEAF IS NULL AND  A.PERIO = '6820931' proc";
//		sql="select * from tempA";
//		
//		
//		
		
		
		
		
		
			
		
		
		
		//存储过程第四个
//        sql = "create table E(PRDLEAF VARCHAR(50))";
//        sql="select * from E";
//		sql = "insert into E(PRDLEAF) select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'G01%' AND PERIO = '6820931'";
//		sql = "SELECT perio,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,A.CUSTMNO,case A.STAFFNO when '' then '9999999999' else A.STAFFNO end AS STAFFNO,BEASID,SELIID,ZGUEST_GROUP FROM ZNMAT004TEMP AS A 	left JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <= '6820931'	left JOIN E ON A.COBASEDPRO = E.PRDLEAF	WHERE B.CUSTMNO IS not NULL 	AND E.PRDLEAF IS NULL	AND  A.PERIO = '6820931'";
//		sql = "create table T3(PERIO VARCHAR(7),KEYVALUE VARCHAR(60),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),ZGUEST_GROUP VARCHAR(20))";
//		sql = "insert into T3(PERIO,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,ZGUEST_GROUP) SELECT perio,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,A.CUSTMNO,case A.STAFFNO when '' then '9999999999' else A.STAFFNO end AS STAFFNO,BEASID,SELIID,ZGUEST_GROUP FROM ZNMAT004TEMP AS A 	left JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <= '6820931'	left JOIN E ON A.COBASEDPRO = E.PRDLEAF	WHERE B.CUSTMNO IS not NULL 	AND E.PRDLEAF IS NULL	AND  A.PERIO = '6820931' proc";
//       sql="select KEYVALUE from ZNMAT004";
//		sql = "select PERIO,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,ZGUEST_GROUP from ZNMAT004 WHERE  PERIO='6820931'";
////        //682093166666699317629681071JX618918063ZECWZTTNBEKX6NSA80XAGEGILJKDT098QS7796976068MFSD94950
//		      6820931PCH 0099317629681071JX618918063ZECWZTTNBEKX6NSA80XAGEGILJKDT098QS7796976068MFSD94950
//		      6820931PPH00299317629681071JX618918063ZECWZTTNBEKX6NSA80XAGEGILJKDT098QS7796976068MFSD94950
		//        //               sql="select STAFFNO from T3";
 //              sql="SELECT  mandt, perio, T3.KEYVALUE, T2.KEYVALUE FROM ZNMAT004 AS T2 left join T3 on  T2.ACNTAGE = T3.ACNTAGE  		AND T2.OPTNAGE =	T3.OPTNAGE	AND T2.BMD_CODE =	T3.BMD_CODE	AND T2.COBASEDPRO =	T3.COBASEDPRO	AND T2.GRPID_LOB =	T3.GRPID_LOB	AND T2.GRPID_CUSCAT =	T3.GRPID_CUSCAT	AND T2.GRPID_PRDSA =	T3.GRPID_PRDSA	AND T2.LOBID_MAPRD =	T3.LOBID_MAPRD	AND T2.LOBID_MACUS =	T3.LOBID_MACUS	AND T2.CUSCAT_MAIN =	T3.CUSCAT_MAIN	AND T2.CUSTMNO     =	T3.CUSTMNO	AND T2.STAFFNO	   =	T3.STAFFNO	AND T2.BEASID   =	T3.BEASID	AND T2.SELIID  =	T3.SELIID	AND T2.ZGUEST_GROUP = T3.ZGUEST_GROUP  AND T2.PERIO =  '6820931'	AND T2.DATYPE ='B0' where T2.KEYVALUE like 'PC%' ORDER BY T2.KEYVALUE ASC, T3.KEYVALUE ASC";
//        sql = "SELECT  mandt, perio, T3.KEYVALUE, T2.KEYVALUE FROM ZNMAT004 AS T2 left join T3 on  T2.ACNTAGE = T3.ACNTAGE  	AND T2.OPTNAGE =	T3.OPTNAGE	AND T2.BMD_CODE =	T3.BMD_CODE	AND T2.COBASEDPRO =	T3.COBASEDPRO	AND T2.GRPID_LOB =	T3.GRPID_LOB	AND T2.GRPID_CUSCAT =	T3.GRPID_CUSCAT	AND T2.GRPID_PRDSA =	T3.GRPID_PRDSA	AND T2.LOBID_MAPRD =	T3.LOBID_MAPRD	AND T2.LOBID_MACUS =	T3.LOBID_MACUS	AND T2.CUSCAT_MAIN =	T3.CUSCAT_MAIN	AND T2.CUSTMNO   =	T3.CUSTMNO	AND T2.STAFFNO  =	T3.STAFFNO	AND T2.BEASID   =	T3.BEASID	AND T2.SELIID  =	T3.SELIID	AND T2.ZGUEST_GROUP = T3.ZGUEST_GROUP  AND T2.PERIO =  '6820931'	AND T2.DATYPE ='B0'	where T2.KEYVALUE like 'PP%' ORDER BY T2.KEYVALUE ASC, T3.KEYVALUE ASC";
////		sql = "INSERT INTO ZNMAT004KEY(mandt,perio,COKEY_OLD,COKEY_NEW)SELECT  mandt, perio, T3.KEYVALUE, T2.KEYVALUE FROM ZNMAT004 AS T2 left join T3 on  T2.ACNTAGE = T3.ACNTAGE  	AND T2.PERIO =  '6820931'	AND T2.DATYPE ='B0'	AND T2.OPTNAGE =	T3.OPTNAGE	AND T2.BMD_CODE =	T3.BMD_CODE	AND T2.COBASEDPRO =	T3.COBASEDPRO	AND T2.GRPID_LOB =	T3.GRPID_LOB	AND T2.GRPID_CUSCAT =	T3.GRPID_CUSCAT	AND T2.GRPID_PRDSA =	T3.GRPID_PRDSA	AND T2.LOBID_MAPRD =	T3.LOBID_MAPRD	AND T2.LOBID_MACUS =	T3.LOBID_MACUS	AND T2.CUSCAT_MAIN =	T3.CUSCAT_MAIN	AND T2.CUSTMNO     =	T3.CUSTMNO	AND T2.STAFFNO	   =	T3.STAFFNO	AND T2.BEASID   =	T3.BEASID	AND T2.SELIID  =	T3.SELIID	AND T2.ZGUEST_GROUP = T3.ZGUEST_GROUP  where T2.KEYVALUE like 'PP%' ORDER BY T2.KEYVALUE ASC, T3.KEYVALUE ASC proc";
////		sql = "select * from ZNMAT004KEY where perio='6820931'";	
////		sql = "select * from T3 where perio='6820931'";
//		
		
		
		
//        sql="create table teacher(name VARCHAR(10),age VARCHAR(10),class VARCHAR(10))";
//		sql="insert into teacher(name,age,class) values('aa','18','10')";
//        sql="create table student(name VARCHAR(10),age VARCHAR(10),number VARCHAR(10))";
//        sql="insert into student(name,age,number) values('aFADca','18','10')";
//        sql="select teacher.name,student.name,student.number,teacher.class from student left join teacher on student.age=teacher.age and student.number=teacher.class";

		
		
		
		
		
		
		
		//存储过程第三个
//		sql="create table C(STAFFNO VARCHAR(50))";
//      sql="insert into C(STAFFNO)select DISTINCT STAFFNO from ZNMAT134 WHERE PERIO = '6820931'";
//      sql="select * from 	E";
//      sql="create table E(PRDLEAF VARCHAR(50))";
//		sql="insert into E(PRDLEAF) select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'G01%' AND PERIO = '6820931'";
//		sql="create table T1(PERIO VARCHAR(7),KEYVALUE VARCHAR(60),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35)," +
// 			      "GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50), STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),ZGUEST_GROUP VARCHAR(20) )";
//		sql="SELECT PERIO FROM ZNMAT004TEMP AS A left JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <= '6820931' left JOIN C ON A.STAFFNO = C.STAFFNO left JOIN E ON A.COBASEDPRO = E.PRDLEAF WHERE B.CUSTMNO IS NULL AND A.PERIO= '6820931' AND E.PRDLEAF IS NULL";
//		sql="Insert Into T1(PERIO,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,ZGUEST_GROUP)SELECT PERIO,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,GRPID_CUSCAT,IFNULL(C.STAFFNO,'9999999999'),BEASID,SELIID,ZGUEST_GROUP FROM ZNMAT004TEMP AS A left JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <= '6820931' left JOIN C ON A.STAFFNO = C.STAFFNO left JOIN E ON A.COBASEDPRO = E.PRDLEAF WHERE B.CUSTMNO IS NULL AND A.PERIO= '6820931' AND E.PRDLEAF IS NULL proc";	 
//		sql="insert into ZNMAT004KEY(mandt,perio,COKEY_OLD,COKEY_NEW)SELECT mandt,perio,T1.KEYVALUE,T2.KEYVALUE FROM ZNMAT004 AS T2 left join T1 on T2.PERIO = '6820931'  AND T2.DATYPE ='B0' AND T2.ACNTAGE = T1.ACNTAGE AND T2.OPTNAGE =T1.OPTNAGE AND T2.BMD_CODE =T1.BMD_CODE AND T2.COBASEDPRO =	T1.COBASEDPRO AND T2.GRPID_LOB =T1.GRPID_LOB AND T2.GRPID_CUSCAT =	T1.GRPID_CUSCAT AND T2.GRPID_PRDSA =T1.GRPID_PRDSA AND T2.LOBID_MAPRD =	T1.LOBID_MAPRD AND T2.LOBID_MACUS =	T1.LOBID_MACUS AND T2.CUSCAT_MAIN =	T1.CUSCAT_MAIN AND T2.CUSTMNO =	T1.CUSTMNO AND T2.STAFFNO =	T1.STAFFNO AND T2.BEASID  =	T1.BEASID AND T2.SELIID  =	T1.SELIID AND T2.ZGUEST_GROUP = T1.ZGUEST_GROUP  WHERE  T2.KEYVALUE like 'PC%'  ORDER BY T2.KEYVALUE ASC,T1.KEYVALUE ASC proc";
//		sql="SELECT * FROM T1";
		//682093166666699317629681071JX618918063ZECWZTTNBEKX6NSA80XAGEGILJKDT098QSKX6NSA80XAMFSD94950
		//6820931PCH000000014288943992796916X618918063DQRZ63RU9TAK6MUQNOBATD2JM459TAK6MUQMFJH41967
//		sql="select PERIO,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,CUSTMNO,STAFFNO,BEASID,SELIID,ZGUEST_GROUP from ZNMAT004 WHERE PERIO='6820931'";
//		sql="SELECT mandt,perio,T1.KEYVALUE,T2.KEYVALUE FROM ZNMAT004 AS T2 left join T1 on T2.ACNTAGE = T1.ACNTAGE AND T2.OPTNAGE =T1.OPTNAGE AND T2.BMD_CODE =T1.BMD_CODE AND T2.COBASEDPRO =	T1.COBASEDPRO AND T2.GRPID_LOB =T1.GRPID_LOB AND T2.GRPID_CUSCAT =	T1.GRPID_CUSCAT AND T2.GRPID_PRDSA =T1.GRPID_PRDSA   AND T2.PERIO = '6820931'  AND T2.DATYPE ='B0' WHERE  T2.KEYVALUE like 'PC%'  ORDER BY T2.KEYVALUE ASC,T1.KEYVALUE ASC";
//		sql="select * from ZNMAT004KEY WHERE perio = '6820931'";

		
		//		sql="SELECT mandt,perio,T1.KEYVALUE,T2.KEYVALUE FROM ZNMAT004 AS T2 left join T1 on T2.PERIO = '6820931'  AND T2.DATYPE ='B0' AND T2.ACNTAGE = T1.ACNTAGE AND T2.OPTNAGE =T1.OPTNAGE AND T2.BMD_CODE =T1.BMD_CODE AND T2.COBASEDPRO =	T1.COBASEDPRO AND T2.GRPID_LOB =T1.GRPID_LOB AND T2.GRPID_CUSCAT =	T1.GRPID_CUSCAT AND T2.GRPID_PRDSA =T1.GRPID_PRDSA AND T2.LOBID_MAPRD =	T1.LOBID_MAPRD AND T2.LOBID_MACUS =	T1.LOBID_MACUS AND T2.CUSCAT_MAIN =	T1.CUSCAT_MAIN AND T2.CUSTMNO =	T1.CUSTMNO AND T2.STAFFNO =	T1.STAFFNO AND T2.BEASID  =	T1.BEASID AND T2.SELIID  =	T1.SELIID AND T2.ZGUEST_GROUP = T1.ZGUEST_GROUP  WHERE  T2.KEYVALUE like 'PC%'  ORDER BY T2.KEYVALUE ASC,T1.KEYVALUE ASC proc";
//       sql="SELECT PERIO,KEYVALUE,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,GRPID_CUSCAT,IFNULL(C.STAFFNO,'9999999999'),BEASID,SELIID,ZGUEST_GROUP FROM ZNMAT004TEMP AS A left JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <= '6820931' left JOIN C ON A.STAFFNO = C.STAFFNO left JOIN E ON A.COBASEDPRO = E.PRDLEAF WHERE B.CUSTMNO IS NULL AND A.PERIO= '6820931' AND E.PRDLEAF IS NULL proc";
//        sql="selecft * from T1";
       //		sql="SELECT mandt,perio,T1.KEYVALUE,T2.KEYVALUE FROM ZNMAT004 AS T2 left join T1 on T2.PERIO = '6820931'  AND T2.DATYPE ='B0' AND T2.KEYVALUE like 'PC%' AND T2.ACNTAGE = T1.ACNTAGE AND T2.OPTNAGE =T1.OPTNAGE AND T2.BMD_CODE =T1.BMD_CODE AND T2.COBASEDPRO =	T1.COBASEDPRO AND T2.GRPID_LOB =T1.GRPID_LOB AND T2.GRPID_CUSCAT =	T1.GRPID_CUSCAT AND T2.GRPID_PRDSA =T1.GRPID_PRDSA AND T2.LOBID_MAPRD =	T1.LOBID_MAPRD AND T2.LOBID_MACUS =	T1.LOBID_MACUS AND T2.CUSCAT_MAIN =	T1.CUSCAT_MAIN AND T2.CUSTMNO =	T1.CUSTMNO AND T2.STAFFNO =	T1.STAFFNO AND T2.BEASID  =	T1.BEASID AND T2.SELIID  =	T1.SELIID AND T2.ZGUEST_GROUP = T1.ZGUEST_GROUP  ORDER BY T2.KEYVALUE ASC,T1.KEYVALUE ASC proc";
		//	    sql="select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'G01%' AND PERIO = '6820931'";
//		sql="SELECT mandt,perio,T1.KEYVALUE,T2.KEYVALUE FROM ZNMAT004 AS T2 left join T1 on T2.ACNTAGE = T1.ACNTAGE AND T2.OPTNAGE =T1.OPTNAGE AND T2.BMD_CODE =T1.BMD_CODE AND T2.COBASEDPRO =	T1.COBASEDPRO AND T2.GRPID_LOB =T1.GRPID_LOB AND T2.GRPID_CUSCAT =	T1.GRPID_CUSCAT AND T2.GRPID_PRDSA =T1.GRPID_PRDSA AND T2.LOBID_MAPRD =	T1.LOBID_MAPRD AND T2.LOBID_MACUS =	T1.LOBID_MACUS AND T2.CUSCAT_MAIN =	T1.CUSCAT_MAIN AND T2.CUSTMNO =	T1.CUSTMNO AND T2.STAFFNO =	T1.STAFFNO AND T2.BEASID  =	T1.BEASID AND T2.SELIID  =	T1.SELIID AND T2.ZGUEST_GROUP = T1.ZGUEST_GROUP  WHERE T2.PERIO = '6820931'  AND T2.DATYPE ='B0' AND T2.KEYVALUE like 'PC%'  ORDER BY T2.KEYVALUE ASC,T1.KEYVALUE ASC";
//		sql="create table tempC(mandt VARCHAR(3),perio VARCHAR(7),COKEY_OLD VARCHAR(60),COKEY_NEW VARCHAR(60))";
//	    sql="SELECT mandt,perio FROM ZNMAT004 AS T2 left join T1 on T2.BMD_CODE =T1.BMD_CODE AND T2.COBASEDPRO =	T1.COBASEDPRO AND T2.GRPID_LOB =T1.GRPID_LOB ";
//        sql="select * from C";
	    //	    sql="insert into ZNMAT004KEYMAP(mandt,perio,COKEY_OLD,COKEY_NEW)select mandt,perio,COKEY_OLD,COKEY_NEW  from tempc";
//	    sql = "select mandt,perio,COKEY_OLD,COKEY_NEW  from tempc";
//	    sql = "select mandt from ZNMAT004KEYMAP where COKEY_NEW = 'PCH00000001'";
//	    sql="select count(*) from ZNMAT004KEY";
//		
//		sql="select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'G01%' AND PERIO = '6820931'";
//     	sql="select ZNMAT023.PERIO FROM  ZNMAT023 join ZNMAT134 on ZNMAT023.PERIO=ZNMAT134.PERIO join ZNMAT004TEMP on ZNMAT023.PERIO=ZNMAT004TEMP.PERIO join ZNMAT004 on ZNMAT023.PERIO=ZNMAT004.PERIO WHERE PRDNO LIKE 'G01%'";

		//sql="select PERIO FROM ZNMAT004TEMP AS A JOIN ZNMAT004NOPKLIST AS B ON A.PERIO = B.PERIO and B.PERIO<='6820931'";    
//		sql="select PERIO from ZNMAT004NOPKLIST where PERIO<='6820931'";
		//sql="select * from ZNMAT134 WHERE PERIO = '7777777'";
//		sql="insert into ZNMAT134 values('666','7777777','5LXQ9MMTCN','3121','7')";
// 		sql="select * FROM ZNMAT023 where PERIO = '6820931'";
// 		sql="insert into ZNMAT023 values('666','7777777','111','G01','H24476334')";
//		//sql="select PERIO from ZNMAT023";
 		
 	
     	
     	
     	
     	
     	
     	
     	
     	
     	
     	
     	//		//		sql="create table Ta1(PERIO VARCHAR(7),KEYVALUE VARCHAR(60),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),ZGUEST_GROUP VARCHAR(20)";
//		sql="insert into tempa12(age ,orgno_op,orgno_ac,bal_eom,emp_no,sum1)select age, orgno_op,orgno_ac,emp_no,bal_eom,sum(bal_eom) from ACCOUNT where bal_eom<2550 group by age,orgno_op,orgno_ac,emp_no,bal_eom proc";
		//sql = "select age,orgno_op,orgno_ac,emp_no,bal_eom,sum(sum1) from tempa12 ";
		//sql = "select sum1 from tempa where age = 53243893";
		//sql = "select age, orgno_op,orgno_ac,emp_no,sum(bal_eom) from ACCOUNT where bal_eom<550 group by age,orgno_ac,orgno_ac,emp_no";
		//sql="create table tempb(age int(8),orgno_op varchar(11),sum1 double,sum2 double,percent double)";
	//	sql="insert into tempb(age,orgno_op,sum1,sum2,percent)select age, orgno_op,sum1,sum(sum1),sum1 from tempa1 proc";
		//sql="create table tempc(age int(8),orgno_op varchar(11),sum1 double,sum2 double,percent double)";
		//sql="insert into tempc(age,orgno_op,sum1,sum2,percent)select age, orgno_op,sum1,sum2,sum1/sum2 from tempb proc";
		/*//sql="select age from tempa";
		//sql="select a.age,a.sum1,c.percent from tempa a left join tempc c on a.age=c.age";*/		
		//sql="create table tempd(age int(8),sum1 double,percent double)";
		//sql="insert into tempd(age,sum1,percent)select a.age,a.sum1,c.percent from tempa a left join tempc c on a.age=c.age proc";
		//sql="create table tempe(resu1 double,percent double)";
		//sql="insert into tempe(resu1,percent)select bal_eom/sum1,percent from tempd proc";
		//sql="create table tempf(resu2 double)";
		//sql="insert into tempf(resu2)select resu1*percent from tempe proc";
		//sql="select resu2*20000000 from tempf";
		//sql = "select sum1,sum2,percent from tempb";
		
//		sql = "select case when i_manufact_id = 11 then substr(cast(I_WHOLESALE_COST as string),2,3)  when i_manufact_id = 12 then '女'  end from item where i_manufact_id = 11";
//		sql = "select concat(substr(I_ITEM_ID,1,3),'111') from item where i_manufact_id = 11";
//		//sql = "select substr(I_ITEM_ID,2,3) from item where i_manufact_id = 11";
		//sql = "select I_ITEM_ID from item where i_manufact_id = 11";
		

//		sql = "select  dd.d_year,i.i_brand_id,i.i_brand,sum(ss.ss_net_profit) as sum_agg from  store_sales ss join date_dim dd  on dd.d_date_sk = ss.ss_sold_date_sk join item i on ss.ss_item_sk = i.i_item_sk where i.i_manufact_id = 914 and dd.d_moy=11 group by dd.d_year,i.i_brand,i.i_brand_id order by dd.d_year,sum_agg desc,brand_id limit 100";
//		sql = "with tmp_7_111 as (select * from promotion where p_channel_email = 'N' or p_channel_event = 'N') select i.i_item_id,avg(ss.ss_quantity) as agg1,avg(ss.ss_list_price) as agg2,avg(ss.ss_coupon_amt) as agg3,avg(ss.ss_sales_price) as agg4 from store_sales ss join customer_demographics cd on ss.ss_cdemo_sk = cd.cd_demo_sk join date_dim dd on ss.ss_sold_date_sk = dd.d_date_sk join item i on  ss.ss_item_sk = i.i_item_sk join tmp_7_111 p on  ss.ss_promo_sk = p.p_promo_sk where cd.cd_gender = 'M' and cd.cd_marital_status = 'M' and cd.cd_education_status = '4 yr Degree' and dd.d_year = 2001 group by i_item_id order by i_item_id limit 100";
//		sql = "select (ss_quantity + ss_list_price) as a  from store_sales";
//		sql = "select case when ss_quantity < 0 then ss_quantity/ss_list_price else 0 end from store_sales （不支持）";
//		sql = "select ss_quantity/sum(ss_quantity) from store_sales（不支持）";
//		sql = "select ca_address_sk from customer_address where exist (select cd_demo_sk  from customer_demographics)（不支持） ";
//		sql = "select avg(cast(cs_quantity as decimal(12,2))) from catalog_sales(不支持)";
//		sql = "select d_date_sk from date_dim where d_date between cast('2000' as int) and (cast('2100' as int)) group by substr(d_date_sk,1,4) having sum(d_date_sk) >4";
//		sql = "select count(distinct ss_list_price) B1_CNTD from store_sales (支持)";
//		sql = "select hd_demo_sk from household_demographics where case when hd_vehicle_count < 0 then hd_vehicle_count + hd_dep_count else 0  end(不支持)";
//		sql = "select hd_demo_sk,hd_income_band_sk from household_demographics order by case when hd_income_band_sk = 2 then hd_demo_sk  end desc(支持)";
//		sql = "select hd_demo_sk,hd_income_band_sk from household_demographics order by (hd_income_band_sk - hd_demo_sk) desc(支持)";
//		sql = "select hd_demo_sk,hd_income_band_sk from household_demographics order by sum(hd_income_band_sk) desc(支持)";
//		sql = "select s_state as s_state, rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking from  store_sales ss join store s on  s.s_store_sk  = ss.ss_store_sk group by s.s_state(不支持)";
//		sql = "select COALESCE(ss_list_price,0.0) from store_sales (不支持)";
//		
//		sql = "select ABS(cc_call_center_sk + cc_closed_date_sk - cc_open_date_sk) as a from call_center ";
//		sql = "select 'abc' as a from call_center ";
//		sql = "select * from call_center a left join (select * from call_center) b on a.cc_call_center_sk = b.cc_call_center_sk";
//		sql = "select cc_open_date_sk*100/10*(cc_call_center_sk/10) from call_center";
//		sql = "select sum(cc_open_date_sk*cc_division*cc_call_center_sk) from call_center";
//		//sql = "select 100*cc_tax_percentage from call_center";
//		sql = "select a.cc_open_date_sk from call_center a union all select b.cc_open_date_sk from call_center b";
//		sql = "select dd.d_year from  store_sales ss join date_dim dd  on dd.d_date_sk = ss.ss_sold_date_sk ";
//		sql = "select dd.d_year from date_dim as dd join store_sales as ss on dd.d_date_sk = ss.ss_sold_date_sk";
//		//sql = "select dd.d_year,i.i_brand_id,i.i_brand,sum(ss.ss_net_profit) as sum_agg from  store_sales ss join date_dim dd  on dd.d_date_sk = ss.ss_sold_date_sk join item i on ss.ss_item_sk = i.i_item_sk where i.i_manufact_id = 11 and dd.d_moy=11 group by dd.d_year,i.i_brand,i.i_brand_id order by dd.d_year,sum_agg desc,brand_id limit 100";
		
//		
//		sql = "select PERIO,ACNTAGE,KM,VERSION,MANDT,IFDONE,DATYPE from ZNMAT011 ";
//		sql = "select MANDT,BS,DATYPE from ZNMAT088A  WHERE BS = 'C'";
//		
		//民生银行测试
		//sql = "with temp123 AS (SELECT DATYPE FROM ZNMAT088A WHERE BS = 'A') select * from temp123";
//		
//		sql = "create table temp5(DATYPE int(8));";
//		sql = "insert into temp5(DATYPE)SELECT DATYPE FROM ZNMAT088A  proc";
//		sql = "select DATYPE from temp5 ";
//		
		//String[] km = {"FGXNQPHKAN","VTWOZPWMEQ","EFWGDFOFJS","ZWMPABTBGS","IQOZKFFLTS","OMTLMWOKWX","VEDJZTAOCD","WIILCTQBVF","XFCHULVGRX","ZLWVQBHYJX","HANHKQNPEI","LZLWAOUFSY","HFULJGPQLL","OPRPFNZXTA","VOVIFHPHGM","EFPAGSYEIT","IWXPRIHTSA","VEDJZTAOCD","BQOCVMKNTZ","XFCHULVGRX","VOVIFHPHGM","LZLWAOUFSY","VTWOZPWMEQ","ZLWVQBHYJX","YXAVSMSISY","WIILCTQBVF","VEDJZTAOCD","ZLWVQBHYJX","OPRPFNZXTA","HANHKQNPEI","EFWGDFOFJS","OMTLMWOKWX","IWXPRIHTSA"};
		//sql = "SELECT KM,CUSTMCATYP, CUSTMCACOD, BJGTLINES,SEQNR, SEQNR_ROT, RULEID , CRNSCOD, ABJGTLINES, ACNTAGE, BMD_CODE, BUZNSNTURE, CATE_CODE, CBFTCODE, CHANNEL, COBASEDPRO, CUSTMNO, KM, MAKTPRO, OPTNAGE, SECTOR, STAFFNO, ZIZHU_CODE , SUM(OPEXPENSES) AS OPEXPENSES FROM ZNMAT011 AS ZTAB join ZNMAT088A on ZTAB.DATYPE = ZNMAT088A.DATYPE  where ZTAB.PERIO = 'HUKEBGS' AND ZTAB.ACNTAGE = 'GVTQCLIPUOURGWUDWKECQKWXROMJHJPRZRGZYEMNLAPYIXHXYU' AND ZTAB.KM = 'FGXNQPHKAN' AND ZTAB.VERSION = 'KJX' AND ZTAB.MANDT = 'OFH'  AND ZTAB.IFDONE = 'A' GROUP BY CUSTMCATYP, CUSTMCACOD, BJGTLINES, SEQNR , SEQNR_ROT , RULEID, CRNSCOD, ABJGTLINES, ACNTAGE, BMD_CODE, BUZNSNTURE, CATE_CODE, CBFTCODE, CHANNEL, COBASEDPRO, CUSTMNO, KM, MAKTPRO, OPTNAGE, SECTOR, STAFFNO, ZIZHU_CODE";
		
	//	sql = "SELECT KM,CUSTMCATYP, CUSTMCACOD, BJGTLINES,SEQNR, SEQNR_ROT, RULEID , CRNSCOD, ABJGTLINES, ACNTAGE, BMD_CODE, BUZNSNTURE, CATE_CODE, CBFTCODE, CHANNEL, COBASEDPRO, CUSTMNO, KM, MAKTPRO, OPTNAGE, SECTOR, STAFFNO, ZIZHU_CODE , SUM(OPEXPENSES) AS OPEXPENSES FROM ZNMAT011 AS ZTAB join ZNMAT088A on ZTAB.DATYPE = ZNMAT088A.DATYPE  where ZTAB.KM = 'WOPNVVXOWJ' or ZTAB.KM = 'ZKQEPDTAVX' or ZTAB.KM = 'BPUUYMTTDX' or ZTAB.KM = 'XFIOSLJQCX' or ZTAB.KM = 'TYTAFFOVSP' or ZTAB.KM = 'NHOLNMMWAO' or ZTAB.KM = 'SFGNORGWXL' or ZTAB.KM = 'FXNVRIWZAE' or ZTAB.KM = 'KZQARAJEHJ' or ZTAB.KM = 'HQMGRKKSLB' or ZTAB.KM = 'QCIHXHKXZS' or ZTAB.KM = 'XTIGBFWUQG' or ZTAB.KM = 'QIJUZARHXR' or ZTAB.KM = 'YATPYJUVAT' or ZTAB.KM = 'NKTIAQZEXD' or ZTAB.KM = 'YCEHARVSRI' or ZTAB.KM = 'GARZHSQKOA' or ZTAB.KM = 'OXEKSUXHMZ' or ZTAB.KM = 'FJRXBOUOFB' or ZTAB.KM = 'UDFBMPVZIA' or ZTAB.KM = 'HKKAWGNDJX' or ZTAB.KM = 'ISPZHLAOWY' or ZTAB.KM = 'FDBSUMGYBR' or ZTAB.KM = 'SGSCWIOXAF' or ZTAB.KM = 'QCNZNYWLYW' or ZTAB.KM = 'YPHKWUUFZI' or ZTAB.KM = 'ODEPOXLDUI' or ZTAB.KM = 'EDQSZMLVMN' or ZTAB.KM = 'PDJUQBIPAX' or ZTAB.KM = 'IVEOYFVYDK' or ZTAB.KM = 'QYFCWAEUKW' or ZTAB.KM = 'DELYYGZJBX' or ZTAB.KM = 'BZPWNBZPNT' or ZTAB.KM = 'SAGYFQPVXZ' or ZTAB.KM = 'LZCZDWOACX' or ZTAB.KM = 'APDJKMPFUL' or ZTAB.KM = 'YRNDXEQRBY' or ZTAB.KM = 'JJECHXONTF' or ZTAB.KM = 'BXOPCMJSNJ' or ZTAB.KM = 'ZRKEAJAVZQ' or ZTAB.KM = 'TOCWXESJFE' or ZTAB.KM = 'BAWAKECWVW' or ZTAB.KM = 'KGVBOWOPKM' or ZTAB.KM = 'JDVBMMDCMU' or ZTAB.KM = 'OFPJPCDETS' or ZTAB.KM = 'QQBHRVGCDK' or ZTAB.KM = 'YHIZSVCIDV' or ZTAB.KM = 'SHJOBSVFUA' or ZTAB.KM = 'CAPCNRIFJE' or ZTAB.KM = 'UCCDWGCTMQ' or ZTAB.KM = 'XALTQJNPWC' or ZTAB.KM = 'SYKHDZVZJL' or ZTAB.KM = 'CGQQLPZFAJ' or ZTAB.KM = 'RVTQWWKVUD' or ZTAB.KM = 'WNGYRTLBVW' or ZTAB.KM = 'AFGTCTUXNR' or ZTAB.KM = 'MVWCKBAGUT' or ZTAB.KM = 'PLIRXIRBXR' or ZTAB.KM = 'GVDQYEEFWB' or ZTAB.KM = 'HTLOZUZXDU' or ZTAB.KM = 'WFBHMMEOER' or ZTAB.KM = 'PTBIFWWIML' or ZTAB.KM = 'MAKCUPZMMI' or ZTAB.KM = 'BAPYTJXSKJ' or ZTAB.KM = 'MIYMULGWGU' or ZTAB.KM = 'EERNLSGIQQ' or ZTAB.KM = 'DERBLLWFEZ' or ZTAB.KM = 'TGCVXUJYRP' or ZTAB.KM = 'XYYFZAMFBN' or ZTAB.KM = 'RSMPPLNZSC' or ZTAB.KM = 'XEHZTFBCRB' or ZTAB.KM = 'RCLQKGSIJD' or ZTAB.KM = 'PMWPJMLFCX' or ZTAB.KM = 'ZZAVTWBUYQ' or ZTAB.KM = 'GUGRFOTVLY' or ZTAB.KM = 'SNHWSNVJCV' or ZTAB.KM = 'DCJEDAVHME' or ZTAB.KM = 'UXMSZRTGQM' or ZTAB.KM = 'IXVQIPVVHI' or ZTAB.KM = 'ONRABTXPHQ' or ZTAB.KM = 'FWFIZKWFXX' or ZTAB.KM = 'ZGOOEQHLWU' or ZTAB.KM = 'XLAQXVUZVU' or ZTAB.KM = 'OIYUKOMWDT' or ZTAB.KM = 'VANFPLSFKB' or ZTAB.KM = 'FFSGKVNIXY' or ZTAB.KM = 'KFQNGVAXEO' or ZTAB.KM = 'JNRGKXEEII' or ZTAB.KM = 'NQYGMNCWKF' or ZTAB.KM = 'YCQOFFDOEU' or ZTAB.KM = 'CHOQHUIMHW' or ZTAB.KM = 'EEOKACMRUG' or ZTAB.KM = 'LDAVFNICSH' or ZTAB.KM = 'SOVYUGPQCP' or ZTAB.KM = 'IBGNDPIBQC' or ZTAB.KM = 'IRDSTNBTJE' or ZTAB.KM = 'QNJPSXDHOF' or ZTAB.KM = 'TFXMTUBEPJ' or ZTAB.KM = 'SQYYUFYSNY' or ZTAB.KM = 'DMOBRHHYLR' or ZTAB.KM = 'UPVICBVZCG' or ZTAB.KM = 'BVJMAEWWIK' or ZTAB.KM = 'PMCPZTAZFY' or ZTAB.KM = 'MQXRKKYNFQ' or ZTAB.KM = 'WCKZITZWWP' or ZTAB.KM = 'WCJATIHVDQ' or ZTAB.KM = 'EZSOQOGVEV' or ZTAB.KM = 'JJJHARZAMR' ";

		//sql = "SELECT CUSTMCATYP, CUSTMCACOD FROM ZNMAT011 AS ZTAB join temp5 on ZTAB.DATYPE = temp5.DATYPE ";

		//sql = "SELECT DATYPE,KM,PERIO,ACNTAGE,KM,VERSION,MANDT,IFDONE, CUSTMCATYP, CUSTMCACOD, BJGTLINES,SEQNR, SEQNR_ROT, RULEID , CRNSCOD, ABJGTLINES, ACNTAGE, BMD_CODE, BUZNSNTURE, CATE_CODE, CBFTCODE, CHANNEL, COBASEDPRO, CUSTMNO, KM, MAKTPRO, OPTNAGE, SECTOR, STAFFNO, ZIZHU_CODE  FROM ZNMAT011 AS ZTAB where DATYPE < 200";
		//join temp5 AS temp5 on ZTAB.DATYPE = temp5.DATYPE AND
		//sql = "select PERIO,ACNTAGE,VERSION,MANDT,IFDONE from ZNMAT011";
		
		//sql= "select BS from ZNMAT088A WHERE  DATYPE in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60)";
		//sql= "select BS from ZNMAT088A WHERE  DATYPE = 1 or DATYPE = 2 or DATYPE = 3 or DATYPE = 4 or DATYPE = 5 or DATYPE = 6 or DATYPE = 7 or DATYPE = 8 or DATYPE = 9 or DATYPE = 10 or DATYPE = 11 or DATYPE = 12 or DATYPE = 13 or DATYPE = 14 or DATYPE = 15 or DATYPE = 16 or DATYPE = 17 or DATYPE = 18 or DATYPE = 19 or DATYPE = 20 or DATYPE = 21 or DATYPE = 22 or DATYPE = 23 or DATYPE = 24 or DATYPE = 25 or DATYPE = 26 or DATYPE = 27 or DATYPE = 28 or DATYPE = 29 or DATYPE = 30 or DATYPE = 31 or DATYPE = 32 or DATYPE = 33 or DATYPE = 34 or DATYPE = 35 or DATYPE = 36 or DATYPE = 37 or DATYPE = 38 or DATYPE = 39 or DATYPE = 40 or DATYPE = 41 or DATYPE = 42 or DATYPE = 43 or DATYPE = 44 or DATYPE = 45 or DATYPE = 46 or DATYPE = 47 or DATYPE = 48 or DATYPE = 49 or DATYPE = 50 or DATYPE = 51 or DATYPE = 52 or DATYPE = 53 or DATYPE = 54 or DATYPE = 55 or DATYPE = 56 or DATYPE = 57 or DATYPE = 58 or DATYPE = 59 or DATYPE = 60 or DATYPE = 61 or DATYPE = 62 or DATYPE = 63 or DATYPE = 64 or DATYPE = 65 or DATYPE = 66 or DATYPE = 67 or DATYPE = 68 or DATYPE = 69 or DATYPE = 70 or DATYPE = 71 or DATYPE = 72 or DATYPE = 73 or DATYPE = 74 or DATYPE = 75 or DATYPE = 76 or DATYPE = 77 or DATYPE = 78 or DATYPE = 79 or DATYPE = 70 or DATYPE = 71 or DATYPE = 72 or DATYPE = 73 or DATYPE = 74 or DATYPE = 75 or DATYPE = 76 or DATYPE = 77 or DATYPE = 78 or DATYPE = 79 or DATYPE = 80 or DATYPE = 81 or DATYPE = 82 or DATYPE = 83 or DATYPE = 84 or DATYPE = 85 or DATYPE = 86 or DATYPE = 87 or DATYPE = 88 or DATYPE = 89 or DATYPE = 90 or DATYPE = 91 or DATYPE = 92 or DATYPE = 93 or DATYPE = 94 or DATYPE = 95 or DATYPE = 96 or DATYPE = 97 or DATYPE = 98 or DATYPE = 99 or DATYPE = 100 or DATYPE = 101 or DATYPE = 102 or DATYPE = 103 or DATYPE = 104 or DATYPE = 105 or DATYPE = 106 or DATYPE = 107 or DATYPE = 108 or DATYPE = 109 or DATYPE = 110 or DATYPE = 111 or DATYPE = 112 or DATYPE = 113 or DATYPE = 114 or DATYPE = 115 or DATYPE = 116 or DATYPE = 117 or DATYPE = 118 or DATYPE = 119 or DATYPE = 120 or DATYPE = 121 or DATYPE = 122 or DATYPE = 123 or DATYPE = 124 or DATYPE = 125 or DATYPE = 126 or DATYPE = 127 or DATYPE = 128 or DATYPE = 129 or DATYPE = 130 or DATYPE = 131 or DATYPE = 132 or DATYPE = 133 or DATYPE = 134 or DATYPE = 135 or DATYPE = 136 or DATYPE = 137 or DATYPE = 138 or DATYPE = 139 or DATYPE = 140 or DATYPE = 141 or DATYPE = 142 or DATYPE = 143 or DATYPE = 144 or DATYPE = 145 or DATYPE = 146 or DATYPE = 147 or DATYPE = 148 or DATYPE = 149 or DATYPE = 150 or DATYPE = 151 or DATYPE = 152 or DATYPE = 153 or DATYPE = 154 or DATYPE = 155 or DATYPE = 156 or DATYPE = 157 or DATYPE = 158 or DATYPE = 159 or DATYPE = 160 or DATYPE = 161 or DATYPE = 162 or DATYPE = 163 or DATYPE = 164 or DATYPE = 165 or DATYPE = 166 or DATYPE = 167 or DATYPE = 168 or DATYPE = 169 or DATYPE = 170 or DATYPE = 171 or DATYPE = 172 or DATYPE = 173 or DATYPE = 174 or DATYPE = 175 or DATYPE = 176 or DATYPE = 177 or DATYPE = 178 or DATYPE = 179 or DATYPE = 180 or DATYPE = 181 or DATYPE = 182 or DATYPE = 183 or DATYPE = 184 or DATYPE = 185 or DATYPE = 186 or DATYPE = 187 or DATYPE = 188 or DATYPE = 189 or DATYPE = 190 or DATYPE = 191 or DATYPE = 192 or DATYPE = 193 or DATYPE = 194 or DATYPE = 195 or DATYPE = 196 or DATYPE = 197 or DATYPE = 198 or DATYPE = 199 or DATYPE = 200 ";
		//sql= "select BS from ZNMAT088A WHERE  DATYPE = 1 or DATYPE = 2";
//		
//		sql = "SELECT KM,CUSTMCATYP, CUSTMCACOD, BJGTLINES,SEQNR, SEQNR_ROT, RULEID , CRNSCOD, ABJGTLINES, ACNTAGE, BMD_CODE, BUZNSNTURE, CATE_CODE, CBFTCODE, CHANNEL, COBASEDPRO, CUSTMNO, KM, MAKTPRO, OPTNAGE, SECTOR, STAFFNO, ZIZHU_CODE , SUM(OPEXPENSES) AS OPEXPENSES FROM ZNMAT011 AS ZTAB join ZNMAT088A on ZTAB.DATYPE = ZNMAT088A.DATYPE  where ZTAB.KM = 'WOPNVVXOWJ' or ZTAB.KM = 'ZKQEPDTAVX' or ZTAB.KM = 'BPUUYMTTDX' or ZTAB.KM = 'XFIOSLJQCX' or ZTAB.KM = 'TYTAFFOVSP' or ZTAB.KM = 'NHOLNMMWAO' or ZTAB.KM = 'SFGNORGWXL' or ZTAB.KM = 'FXNVRIWZAE' or ZTAB.KM = 'KZQARAJEHJ' or ZTAB.KM = 'HQMGRKKSLB' or ZTAB.KM = 'QCIHXHKXZS' or ZTAB.KM = 'XTIGBFWUQG' or ZTAB.KM = 'QIJUZARHXR' or ZTAB.KM = 'YATPYJUVAT' or ZTAB.KM = 'NKTIAQZEXD' or ZTAB.KM = 'YCEHARVSRI' or ZTAB.KM = 'GARZHSQKOA' or ZTAB.KM = 'OXEKSUXHMZ' or ZTAB.KM = 'FJRXBOUOFB' or ZTAB.KM = 'UDFBMPVZIA' or ZTAB.KM = 'HKKAWGNDJX' or ZTAB.KM = 'ISPZHLAOWY' or ZTAB.KM = 'FDBSUMGYBR' or ZTAB.KM = 'SGSCWIOXAF' or ZTAB.KM = 'QCNZNYWLYW' or ZTAB.KM = 'YPHKWUUFZI' or ZTAB.KM = 'ODEPOXLDUI' or ZTAB.KM = 'EDQSZMLVMN' or ZTAB.KM = 'PDJUQBIPAX' or ZTAB.KM = 'IVEOYFVYDK' or ZTAB.KM = 'QYFCWAEUKW' or ZTAB.KM = 'DELYYGZJBX' or ZTAB.KM = 'BZPWNBZPNT' or ZTAB.KM = 'SAGYFQPVXZ' or ZTAB.KM = 'LZCZDWOACX' or ZTAB.KM = 'APDJKMPFUL' or ZTAB.KM = 'YRNDXEQRBY' or ZTAB.KM = 'JJECHXONTF' or ZTAB.KM = 'BXOPCMJSNJ' or ZTAB.KM = 'ZRKEAJAVZQ' or ZTAB.KM = 'TOCWXESJFE' or ZTAB.KM = 'BAWAKECWVW' or ZTAB.KM = 'KGVBOWOPKM' or ZTAB.KM = 'JDVBMMDCMU' or ZTAB.KM = 'OFPJPCDETS' or ZTAB.KM = 'QQBHRVGCDK' or ZTAB.KM = 'YHIZSVCIDV' or ZTAB.KM = 'SHJOBSVFUA' or ZTAB.KM = 'CAPCNRIFJE' or ZTAB.KM = 'UCCDWGCTMQ' or ZTAB.KM = 'XALTQJNPWC' or ZTAB.KM = 'SYKHDZVZJL' or ZTAB.KM = 'CGQQLPZFAJ' or ZTAB.KM = 'RVTQWWKVUD' or ZTAB.KM = 'WNGYRTLBVW' or ZTAB.KM = 'AFGTCTUXNR' or ZTAB.KM = 'MVWCKBAGUT' or ZTAB.KM = 'PLIRXIRBXR' or ZTAB.KM = 'GVDQYEEFWB' or ZTAB.KM = 'HTLOZUZXDU' or ZTAB.KM = 'WFBHMMEOER' or ZTAB.KM = 'PTBIFWWIML' or ZTAB.KM = 'MAKCUPZMMI' or ZTAB.KM = 'BAPYTJXSKJ' or ZTAB.KM = 'MIYMULGWGU' or ZTAB.KM = 'EERNLSGIQQ' or ZTAB.KM = 'DERBLLWFEZ' or ZTAB.KM = 'TGCVXUJYRP' or ZTAB.KM = 'XYYFZAMFBN' or ZTAB.KM = 'RSMPPLNZSC' or ZTAB.KM = 'XEHZTFBCRB' or ZTAB.KM = 'RCLQKGSIJD' or ZTAB.KM = 'PMWPJMLFCX' or ZTAB.KM = 'ZZAVTWBUYQ' or ZTAB.KM = 'GUGRFOTVLY' or ZTAB.KM = 'SNHWSNVJCV' or ZTAB.KM = 'DCJEDAVHME' or ZTAB.KM = 'UXMSZRTGQM' or ZTAB.KM = 'IXVQIPVVHI' or ZTAB.KM = 'ONRABTXPHQ' or ZTAB.KM = 'FWFIZKWFXX' or ZTAB.KM = 'ZGOOEQHLWU' or ZTAB.KM = 'XLAQXVUZVU' or ZTAB.KM = 'OIYUKOMWDT' or ZTAB.KM = 'VANFPLSFKB' or ZTAB.KM = 'FFSGKVNIXY' or ZTAB.KM = 'KFQNGVAXEO' or ZTAB.KM = 'JNRGKXEEII' or ZTAB.KM = 'NQYGMNCWKF' or ZTAB.KM = 'YCQOFFDOEU' or ZTAB.KM = 'CHOQHUIMHW' or ZTAB.KM = 'EEOKACMRUG' or ZTAB.KM = 'LDAVFNICSH' or ZTAB.KM = 'SOVYUGPQCP' or ZTAB.KM = 'IBGNDPIBQC' or ZTAB.KM = 'IRDSTNBTJE' or ZTAB.KM = 'QNJPSXDHOF' or ZTAB.KM = 'TFXMTUBEPJ' or ZTAB.KM = 'SQYYUFYSNY' or ZTAB.KM = 'DMOBRHHYLR' or ZTAB.KM = 'UPVICBVZCG' or ZTAB.KM = 'BVJMAEWWIK' or ZTAB.KM = 'PMCPZTAZFY' or ZTAB.KM = 'MQXRKKYNFQ' or ZTAB.KM = 'WCKZITZWWP' or ZTAB.KM = 'WCJATIHVDQ' or ZTAB.KM = 'EZSOQOGVEV' or ZTAB.KM = 'JJJHARZAMR' ";
//		
//		sql = "select datype,mandt,abs(datype-100) from znmat088a where bs='J'";
//		sql = "select bs,datype,mandt,ifnull(mandt,bs) from znmat088a where bs='B'";
//		
		//测试DB_FYDB 费用打包
//		sql = "create table temp1(MANDT VARCHAR(3),SEQNR VARCHAR(50),RULEID_SND VARCHAR(50),PERIO VARCHAR(7),SECTOR VARCHAR(50),CBFTCODE VARCHAR(50),ACNTAGE VARCHAR(50),KM VARCHAR(10),BUZNSNTURE VARCHAR(50),OPEXPENSES DOUBLE(25),GENERALACNT VARCHAR(50),BMD_CODE VARCHAR(20),OPTNAGE VARCHAR(50),CRNSCOD VARCHAR(5),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),DATYPE VARCHAR(2),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),BJGTLINES VARCHAR(50))";
//		sql = "insert into temp1(MANDT,SEQNR,RULEID_SND,PERIO,SECTOR,CBFTCODE,ACNTAGE,KM,BUZNSNTURE,OPEXPENSES,GENERALACNT,BMD_CODE,OPTNAGE,CRNSCOD,COBASEDPRO,CUSTMNO,DATYPE ,SEQNR_SPR ,SEQNR_ROT,BJGTLINES)select MANDT,SEQNR,RULEID_SND,PERIO,SECTOR,CBFTCODE,ACNTAGE,KM,BUZNSNTURE,OPEXPENSES,GENERALACNT,BMD_CODE,OPTNAGE,CRNSCOD,COBASEDPRO,CUSTMNO,DATYPE ,SEQNR_SPR ,SEQNR_ROT,BJGTLINES from ZNMAT011 WHERE PERIO <> '1458788' AND IFDONE <> '' AND RULEID_SND <> 'IY' AND DATYPE <> 'AB' proc";
//		
//		sql = "create table temp2(OPEXPENSES double(25),SEQNR_SPR VARCHAR(50));";
//		sql = "insert into temp2(OPEXPENSES,SEQNR_SPR)select sum(OPEXPENSES),SEQNR_SPR from ZNMAT103 WHERE PERIO = '0700773' GROUP BY SEQNR_SPR proc;";
//		
//		sql = "create table temp3(MANDT VARCHAR(3),SEQNR VARCHAR(101),RULEID VARCHAR(50),PERIO VARCHAR(7),SECTOR VARCHAR(50),CBFTCODE VARCHAR(50),ACNTAGE VARCHAR(50),KM VARCHAR(10),BUZNSNTURE VARCHAR(50),OPEXPENSES DOUBLE(25),GENERALACNT VARCHAR(101),BMD_CODE VARCHAR(20),OPTNAGE VARCHAR(50),CRNSCOD VARCHAR(5),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),DATYPE VARCHAR(2),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),BJGTLINES VARCHAR(50));";
//		sql = "INSERT INTO temp3( MANDT, SEQNR, RULEID, PERIO, SECTOR, CBFTCODE, ACNTAGE, KM, BUZNSNTURE, OPEXPENSES, GENERALACNT, BMD_CODE, OPTNAGE, CRNSCOD, COBASEDPRO,CUSTMNO, DATYPE, SEQNR_SPR, SEQNR_ROT, BJGTLINES )SELECT MANDT, concat('GC',temp1.SECTOR,temp1.CBFTCODE) as SEQNR, temp1.RULEID_SND AS RULEID,temp1.PERIO , temp1.SECTOR , temp1.CBFTCODE , temp1.ACNTAGE , temp1.KM , temp1.BUZNSNTURE ,SUM(temp1.OPEXPENSES-IFNULL(temp2.OPEXPENSES, 0)) AS OPEXPENSES, concat('XN',temp1.SEQNR) as GENERALACNT, temp1.BMD_CODE,temp1.OPTNAGE , temp1.CRNSCOD , temp1.COBASEDPRO , temp1.CUSTMNO, temp1.DATYPE,temp1.SEQNR AS SEQNR_SPR, temp1.SEQNR_ROT AS SEQNR_ROT , temp1.BJGTLINES  FROM temp1 join temp2 on temp1.SEQNR = temp2.SEQNR_SPR GROUP BY MANDT,concat('GC',temp1.SECTOR,temp1.CBFTCODE),temp1.RULEID_SND,temp1.PERIO,temp1.SECTOR,temp1.CBFTCODE,temp1.ACNTAGE,temp1.KM,temp1.BUZNSNTURE,temp1.BMD_CODE,temp1.OPTNAGE,temp1.CRNSCOD,temp1.SEQNR,temp1.SEQNR_ROT,temp1.BJGTLINES proc";
//		sql = "update temp3 set COBASEDPRO = 'P11020201' , CUSTMNO = 'DO00000001' ,DATYPE = 'X3'";
//		sql = "insert into ZNMAT103(MANDT, SEQNR, RULEID, PERIO, SECTOR, CBFTCODE, ACNTAGE, KM, BUZNSNTURE, OPEXPENSES, GENERALACNT, BMD_CODE, OPTNAGE, CRNSCOD, COBASEDPRO,CUSTMNO, DATYPE, SEQNR_SPR, SEQNR_ROT, BJGTLINES)select MANDT, SEQNR, RULEID, PERIO, SECTOR, CBFTCODE, ACNTAGE, KM, BUZNSNTURE, OPEXPENSES, GENERALACNT, BMD_CODE, OPTNAGE, CRNSCOD, COBASEDPRO,CUSTMNO, DATYPE, SEQNR_SPR, SEQNR_ROT, BJGTLINES from temp3 where OPEXPENSES <> 0 proc";
//		
//		sql = "insert into ZNMAT103(MANDT, SEQNR, RULEID, PERIO)select MANDT, SEQNR, RULEID, PERIO from temp3 where OPEXPENSES <> 0 proc";
		
//		sql = "select * from ZNMAT103";
//		sql = "SELECT MANDT, concat('GC',temp1.SECTOR,temp1.CBFTCODE) as SEQNR, temp1.RULEID_SND AS RULEID,temp1.PERIO , temp1.SECTOR , temp1.CBFTCODE , temp1.ACNTAGE , temp1.KM , temp1.BUZNSNTURE ,SUM(temp1.OPEXPENSES-IFNULL(temp2.OPEXPENSES, 0)) AS OPEXPENSES, concat('XN',temp1.SEQNR) as GENERALACNT, temp1.BMD_CODE,temp1.OPTNAGE , temp1.CRNSCOD , temp1.COBASEDPRO , temp1.CUSTMNO, temp1.DATYPE,temp1.SEQNR AS SEQNR_SPR, temp1.SEQNR_ROT AS SEQNR_ROT , temp1.BJGTLINES  FROM temp1 join temp2 on temp1.SEQNR = temp2.SEQNR_SPR GROUP BY MANDT,concat('GC',temp1.SECTOR,temp1.CBFTCODE),temp1.RULEID_SND,temp1.PERIO,temp1.SECTOR,temp1.CBFTCODE,temp1.ACNTAGE,temp1.KM,temp1.BUZNSNTURE,temp1.BMD_CODE,temp1.OPTNAGE,temp1.CRNSCOD,temp1.SEQNR,temp1.SEQNR_ROT,temp1.BJGTLINES";
//		sql = "select MANDT, SEQNR, RULEID, PERIO from temp3";
		
		//HQ_CC2PC_CK_BZ
//		sql = "create table Y1(DATYPE VARCHAR(2));";
//		sql = "insert into Y1(DATYPE)select DATYPE from ZNMAT088 proc";
//		sql = "create table Y2(DATYPE VARCHAR(2),SEQNR VARCHAR(50),OPEXPENSES double(25));";
//		sql = "insert into Y2(DATYPE,SEQNR,OPEXPENSES)select DATYPE,SEQNR,OPEXPENSES from ZNMAT011 WHERE IFDONE = 'N' AND RULEID_SND = 'GW' AND MANDT = '285' proc;";
//		sql = "create table Y(SEQNR VARCHAR(50),OPEXPENSES double(25));";
//		sql = "insert into Y(SEQNR,OPEXPENSES)select SEQNR,OPEXPENSES from Y2 join Y1 on Y2.DATYPE = Y1.DATYPE proc;";
//		sql = "create table F(SEQNR_SPR VARCHAR(50),OPEXPENSES DOUBLE(25));";
//		sql = "insert into F(SEQNR_SPR,OPEXPENSES)SELECT SEQNR_SPR,SUM(OPEXPENSES) FROM ZNMAT011 WHERE PERIO = '1458788' AND RULEID = 'BB' AND DATYPE = 'PI'  GROUP BY SEQNR_SPR proc;";
//		sql = "create table FG1(OPEXPENSES DOUBLE(25),SEQNR VARCHAR(50),SEQNR_SPR VARCHAR(50));";
//		sql = "create table FG4(OPEXPENSES DOUBLE(25),SEQNR VARCHAR(50),SEQNR_SPR VARCHAR(50));";
//		sql = "insert into FG4(OPEXPENSES,SEQNR,SEQNR_SPR)SELECT ABS(OPEXPENSES),SEQNR,SEQNR_SPR FROM ZNMAT011  WHERE PERIO = '1458788' AND RULEID = 'BB' AND DATYPE = 'PI' proc";
//		sql = "insert into FG1(OPEXPENSES,SEQNR,SEQNR_SPR)SELECT OPEXPENSES,MIN(SEQNR),SEQNR_SPR FROM FG4  GROUP BY SEQNR_SPR, OPEXPENSES proc";
//		
//		sql = "create table FG3(OPEXPENSES DOUBLE(25),SEQNR_SPR VARCHAR(50));";
//		sql = "insert into FG3(OPEXPENSES,SEQNR_SPR)select ABS(OPEXPENSES),SEQNR_SPR FROM ZNMAT011  WHERE PERIO = '1458788' AND RULEID = 'BB' AND DATYPE = 'PI' proc;";
//		sql = "create table FG2(OPEXPENSES DOUBLE(25),SEQNR_SPR VARCHAR(50));";
//		sql = "insert into FG2(OPEXPENSES,SEQNR_SPR)select MAX(OPEXPENSES),SEQNR_SPR FROM FG3 group by SEQNR_SPR";
//		sql = "create table FG(SEQNR_SPR VARCHAR(50),OPEXPENSES DOUBLE(25),SEQNR VARCHAR(50));";
//		sql = "insert into FG(SEQNR_SPR,OPEXPENSES,SEQNR)select DISTINCT FG1.SEQNR_SPR, FG1.OPEXPENSES, FG1.SEQNR FROM FG1 join FG2 on FG1.SEQNR_SPR = FG2.SEQNR_SPR AND FG1.OPEXPENSES = FG2.OPEXPENSES proc;";
//		sql = "create table B(SEQNR VARCHAR(50),OPEXPENSES DOUBLE(25),FGOPEXPENSES DOUBLE(25));";
//		sql = "INSERT into B(SEQNR,OPEXPENSES,FGOPEXPENSES) SELECT SEQNR,OPEXPENSES,FGOPEXPENSES from Y join F on F.SEQNR_SPR = Y.SEQNR  join FG FG on FG.SEQNR_SPR = Y.SEQNR proc;";
//		sql = "update ZNMAT011 AS A from B SET OPEXPENSES = B.OPEXPENSES  WHERE A.OPEXPENSES = B.FGOPEXPENSES  AND B.SEQNR = A.SEQNR  AND RULEID = 'BB'  AND A.PERIO = '1458788'";
		
//		
//		sql = "select FG1.SEQNR_SPR, FG1.OPEXPENSES, FG1.SEQNR FROM FG1 join FG2 on FG1.SEQNR_SPR = FG2.SEQNR_SPR and FG1.OPEXPENSES = FG2.OPEXPENSES group by FG1.SEQNR_SPR, FG1.OPEXPENSES, FG1.SEQNR";
//		sql = "select * FROM FG1";
//		
		//存储过程procedure_ZSP_NMA_PACK_ACCOUNT_DATA：
//		sql = "insert into ZNMAT004NOPKLIST select distinct mandt, cust_no, perio, '' FROM ZNMAT142  WHERE PERIO = perio and GRPID_CUSCAT !='' AND IS_UNPACKED = 'X';";
//		sql = "select distinct mandt, cust_no, perio, '' FROM ZNMAT142";
		
		
		
//		sql = "create table C(STAFFNO VARCHAR(50));";
//		sql = "insert into C(STAFFNO)select DISTINCT STAFFNO from ZNMAT134 WHERE PERIO = '6317552';";
//		sql = "create table E(PRDLEAF VARCHAR(50));";
//		sql = "insert into E(PRDLEAF)select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'I%' AND PERIO = '5184418';";
//		sql = "create table tempA(PREFIX VARCHAR(10),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),INTERESTIN DOUBLE(25),CSTCAPITAL DOUBLE(25),VALCAPITAL DOUBLE(25),INTERESTEX DOUBLE(25),FEECOMIN DOUBLE(25),FEECOMEX DOUBLE(25),REINVES DOUBLE(25),VALUEGAINS DOUBLE(25),EXCHANGE DOUBLE(25),REBZNSO DOUBLE(25),PFABLITY DOUBLE(25),JZZB_VAL DOUBLE(22),INC_TAX DOUBLE(22),OPTAX DOUBLE(22),BSGAP DOUBLE(22),OTHER_COST DOUBLE(22),INCOME_OPO DOUBLE(22),EXPENSE_OPO DOUBLE(22),BAL_AVG_M DOUBLE(22),MOBGNBA DOUBLE(25),MOENDBA DOUBLE(25),IOATCRBTTA DOUBLE(25),RISKWEASS DOUBLE(25),CAP_SUM DOUBLE(25),BAL_BW DOUBLE(22),VOL_AVG_D DOUBLE(22),EXPENSE_ZCJZSS DOUBLE(22),VAL_JZSS DOUBLE(22),CAPITAL_JG DOUBLE(22),CAPITAL_CRED DOUBLE(22),RWA_CR DOUBLE(22),AVG_D_JZSS DOUBLE(22),BAL_JRZC DOUBLE(22),AVG_D_JRZC DOUBLE(22),BAL_BBW DOUBLE(22),AVG_D_BBW DOUBLE(22),TICKETDELS DOUBLE(22),TICKETRATIO DOUBLE(22),WKLODEQ DOUBLE(22),CREDIT DOUBLE(22),ACNTNUM DOUBLE(22),CUSTNO DOUBLE(25),MOVEAC DOUBLE(22),ACNTTIME DOUBLE(22),LENDERS DOUBLE(22),VOLB DOUBLE(22),TRANSNUM DOUBLE(22),APPROVAL DOUBLE(22),TRANS_COUNT_SCF_S DOUBLE(22),DIFFICULTY DOUBLE(22),TRANS_COUNT_MJ_S DOUBLE(22),INVEBAPR DOUBLE(22),BAL_SXZC_LY DOUBLE(19),RMB_TOTAL_AMT DOUBLE(27),FOR_TOTAL_AMT DOUBLE(27),IS_NEW INTEGER(1),ZGUEST_GROUP VARCHAR(20));";
//		
//		sql = "insert into tempA SELECT 'PC' as PREFIX,"+
// 				"ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_CUSCAT,GRPID_CUSCAT,LOBID_MACUS,CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,IFNULL(C.STAFFNO,'9999999999') AS STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP"+
//			"FROM ZNMAT004TEMP AS A JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO and B.PERIO <= perio "+
//			"JOIN  C ON  A.STAFFNO = C.STAFFNO" +
//			"JOIN  E ON A.COBASEDPRO = E.PRDLEAF WHERE  B.CUSTMNO IS NULL AND A.PERIO= perio 	AND E.PRDLEAF IS NULL";
//		
//		sql = "create table tempB(PREFIX VARCHAR(10),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),BMD_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),GRPID_LOB VARCHAR(35),GRPID_CUSCAT VARCHAR(35),GRPID_PRDSA VARCHAR(35),LOBID_MAPRD VARCHAR(18),LOBID_MACUS VARCHAR(18),CUSCAT_MAIN VARCHAR(18),CUSTMNO VARCHAR(50),STAFFNO VARCHAR(50),BEASID VARCHAR(50),SELIID VARCHAR(50),INTERESTIN DOUBLE(25),CSTCAPITAL DOUBLE(25),VALCAPITAL DOUBLE(25),INTERESTEX DOUBLE(25),FEECOMIN DOUBLE(25),FEECOMEX DOUBLE(25),REINVES DOUBLE(25),VALUEGAINS DOUBLE(25),EXCHANGE DOUBLE(25),REBZNSO DOUBLE(25),PFABLITY DOUBLE(25),JZZB_VAL DOUBLE(22),INC_TAX DOUBLE(22),OPTAX DOUBLE(22),BSGAP DOUBLE(22),OTHER_COST DOUBLE(22),INCOME_OPO DOUBLE(22),EXPENSE_OPO DOUBLE(22),BAL_AVG_M DOUBLE(22),MOBGNBA DOUBLE(25),MOENDBA DOUBLE(25),IOATCRBTTA DOUBLE(25),RISKWEASS DOUBLE(25),CAP_SUM DOUBLE(25),BAL_BW DOUBLE(22),VOL_AVG_D DOUBLE(22),EXPENSE_ZCJZSS DOUBLE(22),VAL_JZSS DOUBLE(22),CAPITAL_JG DOUBLE(22),CAPITAL_CRED DOUBLE(22),RWA_CR DOUBLE(22),AVG_D_JZSS DOUBLE(22),BAL_JRZC DOUBLE(22),AVG_D_JRZC DOUBLE(22),BAL_BBW DOUBLE(22),AVG_D_BBW DOUBLE(22),TICKETDELS DOUBLE(22),TICKETRATIO DOUBLE(22),WKLODEQ DOUBLE(22),CREDIT DOUBLE(22),ACNTNUM DOUBLE(22),CUSTNO DOUBLE(25),MOVEAC DOUBLE(22),ACNTTIME DOUBLE(22),LENDERS DOUBLE(22),VOLB DOUBLE(22),TRANSNUM DOUBLE(22),APPROVAL DOUBLE(22),TRANS_COUNT_SCF_S DOUBLE(22),DIFFICULTY DOUBLE(22),TRANS_COUNT_MJ_S DOUBLE(22),INVEBAPR DOUBLE(22),BAL_SXZC_LY DOUBLE(19),RMB_TOTAL_AMT DOUBLE(27),FOR_TOTAL_AMT DOUBLE(27),IS_NEW INTEGER(1),ZGUEST_GROUP VARCHAR(20));";
//		sql = "create table D(STAFFNO VARCHAR(50));";
//		sql = "insert into D(STAFFNO)select DISTINCT STAFFNO from ZNMAT134 WHERE PERIO = perio;";
//		sql = "create table F(PRDLEAF VARCHAR(50));";
//		sql = "insert into F SELECT DISTINCT PRDLEAF FROM  ZNMAT023 WHERE (PRDNO LIKE 'G01%' OR PRDNO LIKE 'G02%') AND PERIO = perio;";
//		
//		sql = "insert into tempB SELECT "+
//		 		"'PP' as PREFIX,ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_PRDSA,LOBID_MAPRD,LOBID_MACUS,CUSCAT_MAIN,A.CUSTMNO,case A.STAFFNO when '' then '9999999999' else A.STAFFNO end AS STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,"+
//              "BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP FROM ZNMAT004TEMP AS A "+
//				"JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO  and B.PERIO <= perio"+
//				"JOIN F ON A.COBASEDPRO = F.PRDLEAF	WHERE B.CUSTMNO IS not NULL AND F.PRDLEAF IS NULL	AND  A.PERIO = perio;";
//		
//		sql = "insert into tempA select * from tempB;";
		
//		sql = "select COBASEDPRO,STAFFNO from ZNMAT004TEMP A join ZNMAT004NOPKLIST B on A.CUSTMNO = B.CUSTMNO;";
//		sql = "select STAFFNO from E;";
//		sql = "select DISTINCT STAFFNO from ZNMAT134 WHERE PERIO = '6317552';";
//		sql = "select DISTINCT PRDLEAF FROM  ZNMAT023 WHERE PRDNO LIKE 'I%' AND PERIO = '5184418';";
//		sql = "SELECT 'PC' as PREFIX,"+
// 				"ACNTAGE,OPTNAGE,BMD_CODE,COBASEDPRO,GRPID_LOB,A.GRPID_CUSCAT,GRPID_CUSCAT,GRPID_CUSCAT,LOBID_MACUS,CUSCAT_MAIN,A.GRPID_CUSCAT AS CUSTMNO,IFNULL(C.STAFFNO,'9999999999') AS STAFFNO,BEASID,SELIID,INTERESTIN,CSTCAPITAL,VALCAPITAL,INTERESTEX,FEECOMIN,FEECOMEX,REINVES,VALUEGAINS,EXCHANGE,REBZNSO,PFABLITY,JZZB_VAL,INC_TAX,OPTAX,BSGAP,OTHER_COST,INCOME_OPO,EXPENSE_OPO,BAL_AVG_M,MOBGNBA,MOENDBA,IOATCRBTTA,RISKWEASS,CAP_SUM,BAL_BW,VOL_AVG_D,EXPENSE_ZCJZSS,VAL_JZSS,CAPITAL_JG,CAPITAL_CRED,RWA_CR,AVG_D_JZSS,BAL_JRZC,AVG_D_JRZC,BAL_BBW,AVG_D_BBW,TICKETDELS,TICKETRATIO,WKLODEQ,CREDIT,ACNTNUM,CUSTNO,MOVEAC,ACNTTIME,LENDERS,VOLB,TRANSNUM,APPROVAL,TRANS_COUNT_SCF_S,DIFFICULTY,TRANS_COUNT_MJ_S,INVEBAPR,BAL_SXZC_LY,RMB_TOTAL_AMT,FOR_TOTAL_AMT,IS_NEW,ZGUEST_GROUP"+
//			"FROM ZNMAT004TEMP AS A JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO and B.PERIO <= perio "+
//			"JOIN  C ON  A.STAFFNO = C.STAFFNO" +
//			"JOIN  E ON A.COBASEDPRO = E.PRDLEAF WHERE  B.CUSTMNO IS NULL AND A.PERIO= perio 	AND E.PRDLEAF IS NULL";
//		sql = "select STAFFNO from ZNMAT134;";
//		sql = "select PRDLEAF from E ";
		
//		sql = "select CUSTMNO,PERIO,STAFFNO FROM ZNMAT004TEMP AS A JOIN ZNMAT004NOPKLIST AS B ON A.CUSTMNO = B.CUSTMNO and PERIO <= '2154501' JOIN  C ON  A.STAFFNO = C.STAFFNO";
//		sql = "select STAFFNO from ZNMAT004TEMP AS A JOIN  C ON  A.STAFFNO = C.STAFFNO";
//		sql = "select DISTINCT STAFFNO from ZNMAT134 WHERE STAFFNO = 'PW';";
//		sql = "SELECT PRDLEAF FROM  ZNMAT023";
//		sql = "create table tea(a varchar(2))";
		
		/*Long alltime=0L;
		String[] km = {"OWDMMERHJJ","HJZUCXGIZH","HBNFYKMISI","EWXOPXHRMW","KYCRLJHILH","TQEYUHKRCM","UHIDRRISUA","SBDAEBSXKA","HMXYFIPPRC","FLUCVKFDZA","ANYFWQPOHV","LUDTPCNIDG","HBZIDVWWDQ","TJXVLPFPXB","NZRUUUXHYW","KKQTQLPCYP","FDSATNPXCQ","BUPFSAKRGY","AGGMQJMCKT","HDORFKCKYO","KBKNADGCVB","LPXZPCBDPI","RADMMKWHRA","KZDCTFIKFU","DHSHVAMIPO","FMAZNROFWF","OUCYTEOAMZ","FFIEEYZLJR","LOIMYHWBXH","JCXKYTRMVU","OXWGAREVPK","DRYUUMCIYM","VJINLZJEWA","AGNMBYKRDW","DKIFFQHATB","JXMZRCVDAU"};
		//String[] km = {"A","B"};
		for(int j = 0 ; j<km.length ; j++){
			sql = "with SEND1 as  (SELECT ZTAB.CUSTMCATYP AS CUSTMCATYP, ZTAB.CUSTMCACOD AS CUSTMCACOD, ZTAB.BJGTLINES  AS BJGTLINES, ZTAB.SEQNR AS SEQNR_SPR , ZTAB.SEQNR_ROT, ZTAB.RULEID AS RULEID_SPR , CRNSCOD, ABJGTLINES, ACNTAGE, BMD_CODE, BUZNSNTURE, CATE_CODE, CBFTCODE, CHANNEL, COBASEDPRO, CUSTMNO, KM, MAKTPRO, OPTNAGE, SECTOR, STAFFNO, ZIZHU_CODE , SUM(OPEXPENSES) AS OPEXPENSES FROM ZNMAT011 AS ZTAB join temp3 AS temp3 on ZTAB.DATYPE = temp3.DATYPE AND ZTAB.PERIO = '2018001' AND ZTAB.ACNTAGE = '0001' AND ZTAB.KM = '"
				+ km[j] + 
				  "'AND ZTAB.VERSION = '' AND ZTAB.MANDT = '801'  AND ZTAB.IFDONE = ''                 GROUP BY ZTAB.CUSTMCATYP, ZTAB.CUSTMCACOD, ZTAB.BJGTLINES, SEQNR , SEQNR_ROT , RULEID, CRNSCOD, ABJGTLINES, ACNTAGE, BMD_CODE, BUZNSNTURE, CATE_CODE, CBFTCODE, CHANNEL, COBASEDPRO, CUSTMNO, KM, MAKTPRO, OPTNAGE, SECTOR, STAFFNO, ZIZHU_CODE) select * from SEND1;";
			
			//sql = "with temp35 AS (SELECT DATYPE FROM ZNMAT088A WHERE BS = '"+ km[j] +"') select * from temp35";
			Long usetime=api.search(sql, 1, 10).getUsetime();
			alltime=usetime+alltime;
			
		}
		System.out.println("   usetime:"+alltime);*/
//          sql="select count(*) from T where a='9' and b = '9' and c='9' ";
        
        
        
        
        
        
        
        
        
        
        
//        sql="drop table F5;";
//        sql="CREATE TABLE F1 (A1 int,B1 VARCHAR(10),C1 INT,D1 int);";
//        sql="CREATE TABLE F2 (A2 int,B2 VARCHAR(10),C2 INT,D2 int);";
//        sql="CREATE TABLE F3 (A3 int,B3 VARCHAR(10),C3 INT,D3 int);";
//        sql="create table F4 (A4 int,B4 VARCHAR(10),C4 INT,D4 int);";
//        sql="create table F5 (A5 int,B5 VARCHAR(10),C5 INT,D5 int);";
//        sql="insert into F5 select F1.A1,F2.B2,F3.C3,F4.D4  from F1 left join F4 on F1.D1=F4.D4 left join F2 on F1.b1=F2.b2 left join F3 on F1.c1=F3.c3;";
//        sql="select count(*) from F5 where B5 is null and C5 is null ";//49878
//        sql="select count(*) from F2 ;";
//        sql="select current_timestamp() from F2 LIMIT 1 OFFSET 1;";
//        sql="select  year(current_timestamp()) from F2 LIMIT 1 OFFSET 1;";
        sql="select A1,c1,d1,row_number() over(partition  by A1 order by c1 desc)  from F1;";
//        sql="select distinct A1 from F1; ";
//        sql="select A1 FROM F1 where A1=1;";

//        sql="select F1.A1,F2.B2,F3.C3  from F1 left join F2 on F1.b1=F2.b2 left join F3 on F1.c1=F3.c3;";
        sql="create table t1(aa double,bb int);";
        sql="insert into t1(aa) values(5.3);";
        sql="select * from t1;";
//        sql="select aa,row_number() over(partition  by aa order by aa)  from t1;";

//        sql="select * from t1;";
//        sql="drop table t1;";
        sql="select MANDT,SEQNR,RULEID_SND,PERIO,SECTOR,CBFTCODE,ACNTAGE,KM,BUZNSNTURE,OPEXPENSES,GENERALACNT,BMD_CODE,OPTNAGE,CRNSCOD,COBASEDPRO,CUSTMNO,DATYPE ,SEQNR_SPR ,SEQNR_ROT,BJGTLINES from ZNMAT011 WHERE PERIO = '2019002' AND RULEID_SND = '' AND DATYPE <> 'A0' ;";
        sql="create table temp2(OPEXPENSES double,SEQNR_SPR VARCHAR(50));";
        sql="insert into temp2(OPEXPENSES,SEQNR_SPR) values(1.80,'7960');";
//        sql="select sum(OPEXPENSES),SEQNR_SPR from ZNMAT103 WHERE PERIO = '2019002' GROUP BY SEQNR_SPR ;";
//        sql="drop table temp2;";
//        sql="select OPEXPENSES,SEQNR from znmat011 limit 1;";
//        sql="select count(*) from temp3;";//497740
        sql="select count(*) from temp1;";//456125
        sql="select count(*) from temp1;";
//        sql="select *  from temp1;";
//        sql="SELECT count(*) FROM temp1 left join temp2 on temp1.SEQNR = temp2.SEQNR_SPR";
//        sql="select * from temp1;";
        sql="select count(*) from temp1;";
//        sql="SELECT count(*) FROM ZNMAT011 ZTAB join temp1 on ZTAB.DATYPE = temp1.DATYPE where ZTAB.PERIO = '2019002' AND ZTAB.ACNTAGE = ''  AND ZTAB.SECTOR = ''  AND ZTAB.CUSTMCATYP = '' AND ZTAB.CUSTMCACOD = '' AND ZTAB.MAKTPRO = '' AND ZTAB.ABJGTLINES = '5262' AND ZTAB.BJGTLINES = ''  AND ZTAB.MANDT = '801'   AND ZTAB.PERIO = '2019002'   ;";
//       sql="SELECT DISTINCT FIELDCOD FROM ZNMAT065 WHERE FIELDGRP = '8'  AND VERSION = '108' AND MANDT = '801' AND PERIO = '2019002';";
//        sql="SELECT DISTINCT ZNMAT046.ORGANLEAF FROM ZNMAT046 join temp2 on ZNMAT046.ORGANCOD = temp2.FIELDCOD ;";
//        sql="select TEMP1.*,SEND1.* from send1 cross join temp1 on send1.SEQNR_SPR=temp1.DATYPE group by temp1.DATYPE,send1.SEQNR_SPR,send1.SEQNR_ROT,send1.RULEID_SPR,send1.CRNSCOD,send1.ABJGTLINES,send1.CATE_CODE,send1.ZIZHU_CODE,send1.COBASEDPRO,send1.CUSTMNO,send1.KM,send1.MAKTPRO,send1.SECTOR,send1.BMD_CODE,send1.BUZNSNTURE,send1.CBFTCODE,send1.CHANNEL,send1.ACNTAGE,send1.OPTNAGE,send1.STAFFNO,send1.OPEXPENSES;";
//		 sql="select count(*) from znmat011 where PERIO = '2019002';";
//        sql="SELECT count(*) FROM ZNMAT011 ZTAB join temp1 on ZTAB.DATYPE = temp1.DATYPE ;";
//       sql="create table SEND2(SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),CRNSCOD VARCHAR(5),ABJGTLINES VARCHAR(120),CATE_CODE VARCHAR(20),ZIZHU_CODE VARCHAR(20),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),SECTOR VARCHAR(50),BMD_CODE VARCHAR(20),BUZNSNTURE VARCHAR(50),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),ACNTAGE VARCHAR(50),OPTNAGE VARCHAR(50),STAFFNO VARCHAR(50),OPEXPENSES DOUBLE,DATYPE VARCHAR(2));";
//       sql="create table send3(STAFFNO varchar(50))";
       sql="insert into send2 select * from send1 cross join temp1 on send1.SEQNR_SPR=temp1.DATYPE group by temp1.DATYPE,send1.SEQNR_SPR,send1.SEQNR_ROT,send1.RULEID_SPR,send1.CRNSCOD,send1.ABJGTLINES,send1.CATE_CODE,send1.ZIZHU_CODE,send1.COBASEDPRO,send1.CUSTMNO,send1.KM,send1.MAKTPRO,send1.SECTOR,send1.BMD_CODE,send1.BUZNSNTURE,send1.CBFTCODE,send1.CHANNEL,send1.ACNTAGE,send1.OPTNAGE,send1.STAFFNO,send1.OPEXPENSES;";
//        sql="select STAFFNO from send2;";
//        sql="drop table send3;";
//        sql="select * from send2 limit 10;";
      sql="select * from send1 cross join temp1 on send1.SEQNR_SPR=temp1.DATYPE group by send1.SEQNR_SPR,send1.SEQNR_ROT,send1.RULEID_SPR,send1.CRNSCOD,send1.ABJGTLINES,send1.CATE_CODE,send1.ZIZHU_CODE,send1.COBASEDPRO,send1.CUSTMNO,send1.KM,send1.MAKTPRO,send1.SECTOR,send1.BMD_CODE,send1.BUZNSNTURE,send1.CBFTCODE,send1.CHANNEL,send1.ACNTAGE,send1.OPTNAGE,send1.STAFFNO,send1.OPEXPENSES,temp1.DATYPE;";
//       sql="drop table send2;";
       
//       sql="select count(*) from send2;";
      sql="Delete from ZNMAT004 WHERE SEQNR LIKE 'FH%'";
      sql="Insert into znmat004 (select * from znmat004);";
      sql="select count(*) from ZNMAT004;";
//      sql="select * from znmat004 limit 1 offset 1;";
      sql="UPDATE ZNMAT011 SET IFDONE='' ; ";
      sql="select count(*) from ZNMAT011 where  RULEID_SND = 'HQ_CC2PC_CK_BZ';";
      sql="select CASE when perio IN('2019001') then perio else '2019001' end from ZNMAT011;";

      sql="CREATE  TABLE ZNMAT088 (MANDT VARCHAR(3) ,DATYPE VARCHAR(2) ) ;";
      sql="select * from ZNMAT088;";
      sql="select count(*) from  ZNMAT011 WHERE IFDONE ='Q';";
//       sql="update ZNMAT011 set IFDONE ='Q' WHERE PERIO='2019001';"; 
      sql="select * from send2;";
      sql="select count(*) from send1;";//18059
//      sql="select count(*) from temp2;";//25419
      sql="select PERIO,ROUND(SUM ( OPEXPENSES * 100 / 100 * ( SECTORNUM / 47948.00000 ) ),5) from send1 cross join temp2 on temp2.MANDT = SEND1.CUSTMCATYP GROUP BY PERIO;";
//      sql="select ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE,SUM(ZTAB.OPEXPENSES) FROM ZNMAT011 ZTAB join temp3 on ZTAB.DATYPE = temp3.DATYPE left join kmtemp on  ZTAB.KM = kmtemp.k  where ZTAB.PERIO = '2019002' AND ZTAB.VERSION = '' AND ZTAB.MANDT = '801' AND ZTAB.IFDONE = '' and( ZTAB.STAFFNO='4214' or ZTAB.STAFFNO='8883') ;";
//      sql="select CUSTMNO,sum(acntnum) from ZNMAT004TEMP group by CUSTMNO;";
//sql="delete from ZNMAT011 where perio='2019001';";
sql="select ZNMAT004.PERIO,count(ZNMAT004.perio) from ZNMAT004 LEFT JOIN ZNMAT011 ON ZNMAT004.PERIO=ZNMAT011.PERIO GROUP BY ZNMAT011.PERIO;";
//sql="select DATYPE from znmat088 where DATYPE='B0';";       
    sql="select count(*) from temp2;";    
    sql="select temp2.MANDT,SEND1.CUSTMCATYP,SEND1.CUSTMCACOD,temp2.BJGTLINES,temp2.PERIO,TEMP2.SEQNR,SEND1.SEQNR_SPR,SEND1.SEQNR_ROT,SEND1.RULEID_SPR,temp2.RULEID,temp2.RULEID_FQ,temp2.DATYPE,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES,temp2.GENERALACNT from temp2 cross join SEND1 on temp2.MANDT = SEND1.CUSTMCATYP GROUP BY temp2.MANDT,SEND1.CUSTMCATYP,SEND1.CUSTMCACOD,temp2.BJGTLINES,temp2.PERIO,TEMP2.SEQNR,SEND1.SEQNR_SPR,SEND1.SEQNR_ROT,SEND1.RULEID_SPR,temp2.RULEID,temp2.RULEID_FQ,temp2.DATYPE,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES,temp2.GENERALACNT ;";
    sql="select ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR,ZTAB.SEQNR_ROT,ZTAB.RULEID AS RULEID_SPR ,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO,ZTAB.CUSTMNO,ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE,SUM(ZTAB.OPEXPENSES) FROM ZNMAT011 ZTAB join temp3 on ZTAB.DATYPE = temp3.DATYPE left join kmtemp on  ZTAB.KM = kmtemp.k  where ZTAB.PERIO = '2019002' AND ZTAB.VERSION = '' AND ZTAB.MANDT = '801' AND ZTAB.IFDONE = '' AND ZTAB.SEQNR < '0100' AND ZTAB.SEQNR != '0000' GROUP BY ZTAB.CUSTMCATYP,ZTAB.CUSTMCACOD,ZTAB.BJGTLINES,ZTAB.SEQNR ,ZTAB.SEQNR_ROT ,ZTAB.RULEID,ZTAB.CRNSCOD,ZTAB.ABJGTLINES,ZTAB.ACNTAGE,ZTAB.BMD_CODE,ZTAB.BUZNSNTURE,ZTAB.CATE_CODE,ZTAB.CBFTCODE,ZTAB.CHANNEL,ZTAB.COBASEDPRO, ZTAB.CUSTMNO, ZTAB.KM,ZTAB.MAKTPRO,ZTAB.OPTNAGE,ZTAB.SECTOR,ZTAB.STAFFNO,ZTAB.ZIZHU_CODE ;";  
     sql="select count(*) from temp2;";   //183*19815 3626145
     sql="select count(*) from temp4 where SEQNR_SPR='0002' ;";//3484
//     sql="select * from send1 where SEQNR_SPR='0002';";
        sql="create table temp5(MANDT VARCHAR(3),CUSTMCATYP VARCHAR(50),CUSTMCACOD VARCHAR(50),BJGTLINES VARCHAR(50),PERIO VARCHAR(7),SEQNR VARCHAR(50),SEQNR_SPR VARCHAR(50),SEQNR_ROT VARCHAR(50),RULEID_SPR VARCHAR(50),RULEID VARCHAR(50),RULEID_FQ VARCHAR(50),DATYPE VARCHAR(2),CRNSCOD VARCHAR(5),ACNTAGE VARCHAR(50),BMD_CODE VARCHAR(20),BUZNSNTURE VARCHAR(50),CATE_CODE VARCHAR(20),CBFTCODE VARCHAR(50),CHANNEL VARCHAR(50),COBASEDPRO VARCHAR(50),CUSTMNO VARCHAR(50),KM VARCHAR(10),MAKTPRO VARCHAR(50),OPTNAGE VARCHAR(50),SECTOR VARCHAR(50),STAFFNO VARCHAR(50),ZIZHU_CODE VARCHAR(20),ABJGTLINES VARCHAR(120),GENERALACNT VARCHAR(50),OPEXPENSES DOUBLE,OPEXPENSES2 DOUBLE);";
       sql="insert into temp5 select temp2.MANDT,SEND1.CUSTMCATYP,SEND1.CUSTMCACOD,temp2.BJGTLINES,temp2.PERIO,cast(NEXTVAL(temp_seq) as varchar(50)),SEND1.SEQNR_SPR,SEND1.SEQNR_ROT,SEND1.RULEID_SPR,temp2.RULEID,temp2.RULEID_FQ,temp2.DATYPE,SEND1.CRNSCOD,SEND1.ACNTAGE,SEND1.BMD_CODE,SEND1.BUZNSNTURE,SEND1.CATE_CODE,SEND1.CBFTCODE,SEND1.CHANNEL,SEND1.COBASEDPRO,SEND1.CUSTMNO,SEND1.KM,SEND1.MAKTPRO,SEND1.OPTNAGE,SEND1.SECTOR,SEND1.STAFFNO,SEND1.ZIZHU_CODE ,SEND1.ABJGTLINES,temp2.GENERALACNT,ROUND ( SEND1.OPEXPENSES * 100 / 100 * ( temp2.SECTORNUM / 47948.00000  ),5),ABS(ROUND ( SEND1.OPEXPENSES * 100 / 100 * ( temp2.SECTORNUM / 47948.00000),5)),temp2.SEQNR from temp2 cross join SEND1 on temp2.MANDT = SEND1.CUSTMCATYP ;"; 
//        sql="drop table temp4;";
       sql="select count(*) from temp4 where SEQNR_SPR='0002' ;";//39630

       sql="select diff_max(code , dtime , price) from  DIFFPRICE;";
       sql="select cc_call_center_sk,count(*) as a from call_center having a >1 ;";
       sql="CREATE TABLE ZNMAT004 (MANDT VARCHAR(8),         PRD_PERIO VARCHAR(8),   PRD_WD_ID INT,          PRD_COKEY VARCHAR(8),   PRD_WD_VAL VARCHAR(8));";
        sql="select count(*) from ZNMAT004;";
       sql="select ZNMAT003.PRD_WD_ID from znmat003  join znmat004 on znmat003.PRD_WD_ID=znmat004.PRD_WD_ID group by znmat003.PRD_WD_ID;";
//        sql="drop table znmat004;";
//       sql="Select znmat003.PRD_WD_ID,znmat004.PRD_WD_ID from ZNMAT003  left join ZNMAT004  on znmat003.MANDT=znmat004.MANDT group by  znmat003.PRD_WD_ID,znmat004.PRD_WD_ID;";
//        sql="select MANDT from ZNMAT003 GROUP BY MANDT;";
//       sql="CREATE  TABLE ZNMAT088 (MANDT VARCHAR(3) ,DATYPE VARCHAR(2) )";
//       sql="select * from ZNMAT088;";
//       sql="select count(*) from znmat004;";
//       sql="select substr(PRD_PERIO,1,2) from znmat004 where mandt like 'a%';";
//       sql="insert into znmat004(PRD_WD_ID,mandt) values(20,'a  d b');";
//       sql="select coalesce(PRD_WD_ID,PRD_PERIO,replace(substr(mandt,1,4),'a','c')) from znmat004  where mandt like 'a%';";
//       sql="select ifnull(sum(PRD_WD_ID),5) from znmat004 where mandt like 'c%';";
//       sql="select substring(replace(replace(replace(replace(replace(mandt,'    ',''),' ',''),',',''),'',''),'',''),1,1) from znmat004  where mandt like 'a%';";
//       sql="select mandt,ROW_NUMBER() over(PARTITION BY mandt ORDER BY mandt DESC ) from znmat004 where mandt like 'a%';";
//       sql="select count(case when PRD_PERIO is null then replace(substr(replace(replace(replace(replace(replace(mandt,'    ',''),' ',''),' ',''),' ',''),' ',''),1,1),' ','') else null end) from znmat004 where mandt like 'a%';";
//       sql="select mandt,left(mandt,2) from znmat004 where mandt like 'a%';";
//       sql="select mandt,to_date('2015-07-26 17:38:31.383'),add_months(replace(replace(substr('2015-07-26 17:38:31.383',1,10),'7','8'),'5','9'),2) from znmat004 where add_months(replace(replace(substr('2015-07-26 17:38:31.383',1,10),'7','8'),'5','9'),2) > '2019-08-26' and mandt like 'a%';";
//       sql="select ifnull(sum(PRD_WD_ID),5) from znmat004 where mandt like 'c%';";
//       sql="select instr(mandt,'b','1','1') from znmat004 where mandt like 'a%';";
//       sql="select case when mandt then '1' else '2' end) from znmat004 where mandt like 'a%';";
       sql="create table tempa(id int,date1 varchar(50));";
//       sql="create table tempb(id int,date2 varchar(50));";
       sql="insert into tempa(id,date1) values(3,'2019-11-27');";
//       sql="drop table tempa;";
//       sql="select add_months(tempa.date1,2),tempb.date2 from tempa inner join tempb on tempa.id=tempb.id where tempa.date1<tempb.date2;";
//       sql="select * from tempa;";
//       sql="select instr(date1,'b','1','1') from tempa;";
//       sql="select max(case when PRD_WD_ID+1>=1 then case when PRD_WD_ID=20 then 1 else 2 end else 3 end) from znmat004 where mandt like 'a%' ;";
//       sql="select  * from tempa;";
//       sql="select substring(date1,'2*') from tempa;";
//       sql="select regexp_replace(date1,'2*','a') from tempa;";
//       sql="select length(date1) from tempa;";
//       sql="select regexp_replace(date1,'2+',regexp_substr(date1,'0+')) from tempa;";
//       sql="select repelce(date1,regexp_instr(date1,'7'),) from tempa;";
//       sql="";
//       sql="select count(*) from tempa where add_months(tempa.date1,2)<date1;";
       sql="select to_char(id,99) from tempa;";
       sql="select to_date('2011')";
       sql="select date '2020-02-29' + interval '6 years';";
//       sql="select count(*) from (select case when id=3 then id else null end from tempa)  t;";
//       sql="select case when date1 like'3%' then 2 else 1 end from tempa;";
//       sql="select * from (select case when id=3 then id else null end from tempa)  t;";
//       sql="select count(*) from (select case when id=3 then 3  else 1 end from tempa)  t;";
//       sql="select count(*) from (select * from tempa)  t;";
//       sql="select * from(select  tempa.id,tempa.date1,tempb.id,tempb.date2,ifnull(sum(tempa.id),99),count(1)  from tempa left join tempb  on tempa.id = tempb.id where add_months(replace(replace(substr('2015-07-26 17:38:31.383',1,10),'7','8'),'5','9'),2) > '2019-08-26' and date1 not like '2019-08%' group by tempa.id) a;";
//       sql="select t.row_id     ,           t.global_type ,          t.global_id ,          t.customer_name ,           replace(t.sharecreditlimitamount,'/N',0) as sharecreditlimitamount ,          replace(t.usedcreditlimitamount,'/N',0) as usedcreditlimitamount    ,          replace(t.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount ,           replace(t.usedhighestamount,'/N',0) as usedhighestamount ,          replace(t.scheduledpaymentamount,'/N',0) as scheduledpaymentamount ,           t.scheduledpaymentdate ,           replace(t.actualpaymentamount,'/N',0) as actualpaymentamount ,          t.recentpaydate ,            replace(t.curroverduecyc,'/N',0) as curroverduecyc ,                 replace(t.curroverdueamount,'/N',0) as curroverdueamount ,           replace(t.last_24state,'/N',0) as last_24state ,                     replace(t.cue,'/N',0) as cue    ,            replace(replace(replace(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'年',''),'月',''),'日','') as cue_out_time ,         replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”','') as cue_org ,         replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”','') as cue_cust_type ,          replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”','') as cue_no ,         replace(replace(replace(replace(replace(substr(cue,instr(cue,'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。','') as cue_db_way ,         replace(replace(replace(cue,'    ',''),'折合人民币',''),',','') as cue_sx_amount ,           replace(replace(replace(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'年',''),'月',''),'日','')  as cue_end_time,          t.state ,               replace(t.loan_card_id,'/N',0) as loan_card_id ,            time_dt AS etl_dt ,           t.data_dt         from (SELECT A.pri_oa_date AS row_id       ,                   A.CERT_TYPE AS global_type  ,                   A.CERT_NO   AS global_id    ,                   A.NAME   AS customer_name   ,                   B.sharecreditlimitamount    ,                   B.usedcreditlimitamount     ,                   B.latest6monthusedavgamount ,                   B.usedhighestamount         ,                   B.scheduledpaymentamount    ,                   B.scheduledpaymentdate      ,                   B.actualpaymentamount       ,                   B.recentpaydate             ,                   B.curroverduecyc            ,                   B.curroverdueamount         ,                   B.last_24state              ,                   B.cue                       ,                   B.state                     ,                   B.loan_card_id              ,                   A.QUERY_TIME AS data_dt                    FROM (SELECT TT1.*                      FROM (SELECT TT.*,                                  ROW_NUMBER() over(PARTITION BY TT.pri_oa_date ORDER BY TT.pri_oa_date DESC ) sq                               FROM HDS.TBL_PER_CRE_PB_RF_INFO  TT )  TT1                       WHERE TT1.sq=1 ) A             LEFT JOIN HDS.TBL_PER_LOAN_CARD_INFO  B                ON A.REPORT_SN = B.REPORT_ID             )  T  ;";
//       sql="select t.row_id ,              t.global_type ,            t.global_id   ,            t.customer_name ,           replace(t.class5state,'/N','') as class5state    ,           replace(t.balance,'/N','0') as balance    ,            replace(t.remainpaymentcyc,'/N','0') as remainpaymentcyc    ,            replace(t.scheduledpaymentamount,'/N','0') as scheduledpaymentamount    ,            replace(t.scheduledpaymentdate,'/N','')  as scheduledpaymentdate    ,             replace(t.actualpaymentamount,'/N','')   as actualpaymentamount    ,             replace(t.recentpaydate ,'/N','')  as recentpaydate     ,            replace(t.curroverduecyc ,'/N','')  as curroverduecyc    ,            replace(t.curroverdueamount ,'/N','0') as curroverdueamount    ,           replace(t.overdue31to60amount ,'/N','0') as overdue31to60amount    ,             replace(t.overdue61to90amount,'/N','0') as overdue61to90amount    ,             replace(t.overdue91to180amount,'/N','0')  as overdue91to180amount    ,           replace(t.overdueover180amount,'/N','0')  as overdueover180amount    ,           replace(t.latest24state,'/N','')  as latest24state    ,            t.cue ,           replace(replace(replace(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'年',''),'月',''),'日','') as cue_out_time ,           coalesce(          replace(replace(replace(substr(t.cue,1,instr(t.cue,'，')),'    ',''),' ',''),',',''),          replace(replace(replace(substr(t.cue,1,instr(t.cue,'，')),'    ',''),' ',''),',',''),          replace(replace(replace(substr(t.cue,1,instr(t.cue,'，')),'    ',''),' ',''),',',''),          replace(replace(replace(substr(t.cue,1,instr(t.cue,'，')),'    ',''),' ',''),',',''),          replace(replace(replace(substr(t.cue,1,instr(t.cue,'，')),'    ',''),' ',''),',','')           ) as cue_org ,           replace(replace(replace(t.cue,'    ',''),' ',''),',','') as cue_amt,           replace(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'）','') as cue_bz,           replace(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'，','')  as cue_amt_zl,           replace(replace(replace(cue,'    ',''),' ',''),'，','') as cue_no,           replace(replace(replace(substr(t.cue,instr(t.cue,'，',1,2)+1),'    ',''),' ',''),'，','')  as cue_db_way ,           replace(replace(replace(substr(t.cue,instr(t.cue,'，',1,3)+1),'    ',''),' ',''),'，','') as cue_qs ,           replace(replace(replace(substr(t.cue,instr(t.cue,'，',1,3)+1),'    ',''),' ',''),'截至','') as cue_gh_way ,           replace(replace(replace(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'年',''),'月',''),'日','')  as cue_end_time,           t.state ,           replace(t.loan_id,'/N',0) as loan_id ,            time_dt AS etl_dt ,             t.data_dt         from (SELECT A.pri_oa_date AS row_id      ,                    A.CERT_TYPE AS global_type ,                    A.CERT_NO   AS global_id   ,                    A.NAME   AS customer_name  ,                    B.class5state            ,                             B.balance                ,                             B.remainpaymentcyc       ,                             B.scheduledpaymentamount ,                             B.scheduledpaymentdate   ,                             B.actualpaymentamount    ,                             B.recentpaydate          ,                             B.curroverduecyc         ,                             B.curroverdueamount      ,                             B.overdue31to60amount    ,                             B.overdue61to90amount    ,                             B.overdue91to180amount   ,                             B.overdueover180amount   ,                             B.LAST24MONTHBEGINMONTH  AS latest24state ,                    B.cue                    ,                                                  B.state                  ,                                                  B.loan_id                ,                    A.QUERY_TIME AS data_dt                 FROM (SELECT TT1.*                       FROM (SELECT TT.*,                                   ROW_NUMBER() over(PARTITION BY TT.pri_oa_date ORDER BY TT.pri_oa_date DESC ) sq                                FROM HDS.TBL_PER_CRE_PB_RF_INFO  TT )  TT1                      WHERE TT1.sq=1 ) A              LEFT JOIN HDS.TBL_PER_LOAN_INFO  B                  ON A.REPORT_SN = B.REPORT_ID              WHERE B.STATE <>'结清' ) T ;";
//       sql="select t1.row_id  ,                t1.global_type ,            t1.global_id ,             t1.customer_name ,           replace(t1.sharecreditlimitamount,'/N',0) as sharecreditlimitamount ,            replace(t1.usedcreditlimitamount,'/N',0) as usedcreditlimitamount ,             replace(t1.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount ,            replace(t1.usedhighestamount,'/N',0) as usedhighestamount ,            replace(t1.scheduledpaymentamount,'/N',0) as scheduledpaymentamount ,            replace(t1.scheduledpaymentdate,'/N','') as scheduledpaymentdate ,            replace(t1.actualpaymentamount,'/N',0) as actualpaymentamount ,            replace(t1.recentpaydate,'/N','') as recentpaydate ,             replace(t1.curroverduecyc,'/N',0) as curroverduecyc ,            replace(t1.curroverdueamount,'/N',0) as curroverdueamount ,             replace(t1.last_24state,'/N',0) as last_24state ,             replace(t1.cue,'/N',0) as cue ,             replace(replace(replace(replace(replace(replace(t1.cue,'    ',''),' ',''),',',''),'年',''),'月',''),'日','') as cue_out_time ,            replace(replace(replace(replace(replace(t1.cue,'    ',''),' ',''),',',''),'“',''),'”','') as cue_org ,		   case when t1.cue is not null then replace(replace(replace(replace(replace(t1.cue,'    ',''),' ',''),',',''),'“',''),'”','') ||'卡' 		        else null end as cue_card_type ,          replace(replace(replace(replace(replace(t1.cue,'    ',''),' ',''),',',''),'“',''),'”','') as cue_cust_type ,          replace(replace(replace(replace(replace(t1.cue,'    ',''),' ',''),',',''),'“',''),'”','') as cue_no  ,           replace(replace(replace(replace(replace(substr(t1.cue,instr(t1.cue,'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。','') as cue_db_way ,            replace(replace(replace(t1.cue,'    ',''),'折合人民币',''),',','') as cue_sx_amount , 		  replace(replace(replace(t1.cue,'    ',''),'折合人民币',''),',','') as cue_sx_share_amount ,             replace(replace(replace(replace(replace(replace(t1.cue,'    ',''),' ',''),',',''),'年',''),'月',''),'日','')  as cue_end_time,              t.query_time ,             t2.querydate ,             t2.queryreason ,           t2.querier ,               t1.state  ,                replace(t1.loan_card_id,'/N',0) as loan_card_id ,             time_dt AS etl_dt ,            t1.data_dt       from (select B.report_sn ,B.global_id,max(replace(replace(substr(B.query_time,1,10),'.',''),'/N','')) as query_time               from (SELECT A.CERT_NO AS global_id ,                           A.pri_oa_date  ,                            A.query_time                        FROM (SELECT TT1.*                               FROM (SELECT TT.*,                                           ROW_NUMBER() over(PARTITION BY TT.pri_oa_date ORDER BY TT.pri_oa_date DESC ) sq                                        FROM HDS.TBL_PER_CRE_PB_RF_INFO  TT )  TT1                               WHERE TT1.sq=1 ) A                     ) B              group by B.report_sn ,B.global_id  )  T      left join (SELECT A1.pri_oa_date AS row_id       ,                        A1.CERT_TYPE AS global_type  ,                        A1.CERT_NO   AS global_id    ,                        A1.pri_oa_date                 ,                        A1.NAME   AS customer_name   ,                        B1.sharecreditlimitamount    ,                        B1.usedcreditlimitamount     ,                        B1.latest6monthusedavgamount ,                        B1.usedhighestamount         ,                        B1.scheduledpaymentamount    ,                        B1.scheduledpaymentdate      ,                        B1.actualpaymentamount       ,                        B1.recentpaydate             ,                        B1.curroverduecyc            ,                        B1.curroverdueamount         ,                        B1.last_24state              ,                        B1.cue                       ,                        B1.state                     ,                        B1.loan_card_id              ,                        A1.QUERY_TIME AS data_dt                     FROM (SELECT TT1.*                            FROM (SELECT TT.*,                                        ROW_NUMBER() over(PARTITION BY TT.pri_oa_date ORDER BY TT.pri_oa_date DESC ) sq                                     FROM HDS.TBL_PER_CRE_PB_RF_INFO  TT )  TT1                           WHERE TT1.sq=1 ) A1                     LEFT JOIN HDS.TBL_PER_LOAN_CARD_INFO  B1                      ON A1.REPORT_SN = B1.REPORT_ID ) T1        on t.report_sn = t1.row_id       left join (SELECT A.CERT_NO AS global_id ,                         B2.report_id ,                         replace(replace(substr(B2.querydate,1,10),'.',''),'/N','') as querydate ,                         replace(B2.queryreason,'/N','') as queryreason  ,                         replace(B2.querier,'/N','') as querier                    FROM (SELECT TT1.*                            FROM (SELECT TT.*,                                        ROW_NUMBER() over(PARTITION BY TT.pri_oa_date ORDER BY TT.pri_oa_date DESC ) sq                                     FROM HDS.TBL_PER_CRE_PB_RF_INFO  TT )  TT1                           WHERE TT1.sq=1 ) A                    LEFT JOIN (SELECT TT1.*                                 FROM (SELECT TT.* ,                                             ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq                                         FROM HDS.TBL_PER_RECORDDETAIL TT ) TT1                               WHERE TT1.sq=1 )  B2                     ON A.REPORT_SN = B2.REPORT_ID                     ) t2         on t.report_sn=t2.report_id      where t.report_sn is not null ; ";
//       sql="select A.row_id,        A.global_id as card_id,       'query_n_1m' as index_name,       IFNULL(sum(A.index_value),0) as index_value,       max(A.query_time) as report_create_time ,       time_dt as etl_date  from (select  t1.row_id               ,t1.global_id               ,max(t1.query_time) as query_time               ,count(1) as index_value           from wbdm.hdm_wbd_zx_qry_tblperrecorddetail_new t1           left join hds.TBL_PER_RECORDDETAIL t                on t.report_id = t1.row_id           and t.cert_no = t1.global_id          where replace(replace(substr(t.querydate,1,10),'.',''),'/N','')               >= add_months(replace(replace(substr(t1.query_time,1,10),'.',''),'/N',''),-1)          group by t1.global_id,t1.row_id ) A  where A.row_id is not null   group by A.row_id ,A.global_id ;";
//       sql="select A.row_id ,       A.global_id as card_id,        'query_n_3m_6m' as index_name,       nvl(sum(A.index_value),0) as index_value,       max(A.query_time) as report_create_time ,       time_dt as etl_date  from (select  t1.row_id               ,t1.global_id               ,max(t1.query_time) as query_time               ,count(1) as index_value           from wbdm.hdm_wbd_zx_qry_tblperrecorddetail_new t1          left join hds.TBL_PER_RECORDDETAIL t                on t.report_id = t1.row_id           and t.cert_no = t1.global_id                   group by t1.global_id,t1.row_id ) A   group by A.row_id, A.global_id ;";
//       sql="select to_char(CURRENT_TIMESTAMP(),'yyyy-MM-dd HH:mm:ss') from TBL_PER_RECORDDETAIL;";
   
//       sql=" select t.row_id,t.global_type, t.global_id,  t.customer_name,  t.report_id,   replace(replace(substr(t.querydate,1,10),'.',''),'/N','') as querydate,            t2.query_time,   replace(t.queryreason,'/N','') as queryreason,replace(t.querier,'/N','') as querier,                  time_dt AS etl_dt, t.data_dt    from (SELECT A.pri_oa_date AS row_id  , A.CERT_TYPE AS global_type  ,  A.CERT_NO   AS global_id    ,   A.NAME   AS customer_name   ,    B.report_id   ,  B.querydate ,                           B.queryreason     ,  B.querier ,  A.pri_oa_date AS data_dt               FROM (SELECT TT1.*       FROM (SELECT TT.*,                                  ROW_NUMBER() over(PARTITION BY TT.pri_oa_date ORDER BY TT.pri_oa_date DESC ) sq                               FROM HDS.TBL_PER_CRE_PB_RF_INFO  TT )  TT1                     WHERE TT1.sq=1 ) A              LEFT JOIN (SELECT TT1.*                               FROM (SELECT TT.* ,                                            ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq                                        FROM HDS.TBL_PER_RECORDDETAIL TT ) TT1                              WHERE TT1.sq=1 )  B                   ON A.REPORT_SN = B.REPORT_ID ) T     left join (SELECT A.CERT_NO AS global_id ,                       A.pri_oa_date ,                       replace(replace(substr(A.pri_oa_date,1,10),'.',''),'/N','') as query_time                   FROM (SELECT T1.*       FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.pri_oa_date ORDER BY TT.pri_oa_date DESC ) sq                                    FROM HDS.TBL_PER_CRE_PB_RF_INFO  TT )  T1                         WHERE T1.sq=1 ) A                 ) t2        on t.row_id = t2.REPORT_SN    ;";
//         sql="CREATE TABLE hdm_wbd_index_factor(row_id         varchar(20),card_id        varchar(20),index_name     varchar(20),index_value    varchar(20),REPORT_CREATE_TIME varchar(10),etl_date varchar(10));"; 
//       sql="select A.row_id, A.global_id as card_id, 'query_n_1m' as index_name, max(A.query_time) as report_create_time , time_dt as etl_date from (select t1.row_id ,t1.global_id ,max(t1.query_time) as query_time ,count(1) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join TBL_PER_RECORDDETAIL t on  t.cert_no = t1.global_id group by t1.global_id,t1.row_id ) A  group by A.row_id ,A.global_id ; ";
//       sql="select count(*) from hdm_wbd_zx_qry_tblperrecorddetail_new;";
//       sql="select t.row_id , t.global_id as card_id, 'query_n_org_1m' as index_name,  t.query_time as report_create_time , t1.etl_date as etl_date from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select report_id,cert_no, max(querydate) as querydate from tbl_per_recorddetail where   querier not like '%江南农村商业银行股份有限公司%' group by report_id,cert_no ) t1 on t1.report_id = t.row_id and t1.cert_no = t.global_id;";
       
//       sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select A.row_id , A.global_id as card_id, 'query_n_3m_6m' as index_name, max(A.query_time) as report_create_time , etl_date as etl_date from (select t1.row_id ,t1.global_id ,max(t1.query_time) as query_time ,count(1) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join TBL_PER_RECORDDETAIL t on t.report_id = t1.row_id and t.cert_no = t1.global_id group by t1.global_id,t1.row_id ) A where A.row_id is not null group by A.row_id, A.global_id ; ";
//       sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_ALL (   ROW_ID                     VARCHAR(20),         GLOBAL_TYPE                VARCHAR(10),         GLOBAL_ID                  VARCHAR(20),         CUSTOMER_NAME              VARCHAR(10),         SHARECREDITLIMITAMOUNT     VARCHAR(10),         USEDCREDITLIMITAMOUNT      VARCHAR(10),         LATEST6MONTHUSEDAVGAMOUNT  VARCHAR(10),         USEDHIGHESTAMOUNT       VARCHAR(10),         SCHEDULEDPAYMENTAMOUNT  VARCHAR(10),         SCHEDULEDPAYMENTDATE    VARCHAR(10),         ACTUALPAYMENTAMOUNT     VARCHAR(10),         RECENTPAYDATE           VARCHAR(10),         CURROVERDUECYC          VARCHAR(10),         CURROVERDUEAMOUNT       VARCHAR(10),         LAST_24STATE            VARCHAR(10),         CUE                     VARCHAR(2000),         CUE_OUT_TIME            VARCHAR(10),         CUE_ORG                 VARCHAR(50),         CUE_CARD_TYPE           VARCHAR(20),        CUE_CUST_TYPE           VARCHAR(20),         CUE_NO                  VARCHAR(10),         CUE_DB_WAY              VARCHAR(50),         CUE_SX_AMOUNT           VARCHAR(10),     CUE_SX_SHARE_AMOUNT     VARCHAR(10),     CUE_END_TIME            VARCHAR(10),     QUERY_TIME              VARCHAR(10),     QUERYDATE               VARCHAR(10),     QUERYREASON             VARCHAR(20),     QUERIER                 VARCHAR(20),     STATE                   VARCHAR(10),          LOAN_CARD_ID            VARCHAR(10),         ETL_DT                  VARCHAR(10),         DATA_DT                 VARCHAR(10)       );";
//       sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t4.row_id , t4.global_id as card_id, 'ratio_card_query_n_new_6m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time  from (select t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(*) as b ,max(t2.query_time) as query_time from (select row_id,global_id,cnt1,querydate ,query_time from (select t.row_id ,t.global_id ,count(*) as cnt1 ,max(query_time) as query_time ,max(replace(replace(substr(t1.querydate,1,10),'.',''),'/N','')) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join TBL_PER_RECORDDETAIL t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='信用卡审批' and t.row_id is not null group by t.row_id,t.global_id )  a  ) t2 left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('未激活','/N') and t3.cue_cust_type='人民币账户' group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0 ;";
//       sql="select t.row_id , t.global_id as card_id, 'query_n_org_1m' as index_name, nvl(t1.index_value,0) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select report_id,cert_no, max(querydate) as querydate from TBL_PER_RECORDDETAIL where report_id is not null and querier not like '%江南农村商业银行股份有限公司%' group by report_id,cert_no ) t1 on t1.report_id = t.row_id and t1.cert_no = t.global_id ;";
//      sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select A.row_id , A.global_id as card_id, 'query_n_3m' as index_name, max(A.query_time) as report_create_time  from (select t1.row_id ,t1.global_id ,max(t1.query_time) as query_time ,count(1) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join TBL_PER_RECORDDETAIL t on t.report_id = t1.row_id and t.cert_no = t1.global_id group by t1.global_id,t1.row_id ) A  group by A.row_id ,A.global_id ; ";
//         sql="select t.row_id , t.global_id as card_id, 'query_n_org_1m' as index_name, nvl(t1.index_value,0) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select report_id,cert_no, max(querydate) as querydate from TBL_PER_RECORDDETAIL where report_id is not null and querier not like '%江南农村商业银行股份有限公司%' group by report_id,cert_no ) t1 on t1.report_id = t.row_id and t1.cert_no = t.global_id ;";
//       sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select a.row_id , a.card_id , 'n_card_low_money_total' as index_name, nvl(a.index_value,-1) as index_value, a.report_create_time from (select t.row_id , t.global_id as card_id, sum(case when t1.cue_sx_amount < 5000 then 1 when t1.cue_sx_amount > 5000 then 0 else null end) as index_value, max(t.query_time) as report_create_time from hdm_wbd_zx_qry_tblperrecorddetail_new t left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 on t.row_id = t1.row_id and t.global_id = t1.global_id group by t.row_id ,t.global_id ) a;";
//       sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_ALL (   ROW_ID                     VARCHAR(200),         GLOBAL_TYPE                VARCHAR(100),         GLOBAL_ID                  VARCHAR(200),         CUSTOMER_NAME              VARCHAR(100),         SHARECREDITLIMITAMOUNT     VARCHAR(100),         USEDCREDITLIMITAMOUNT      VARCHAR(100),         LATEST6MONTHUSEDAVGAMOUNT  VARCHAR(100),         USEDHIGHESTAMOUNT       VARCHAR(100),         SCHEDULEDPAYMENTAMOUNT  VARCHAR(100),         SCHEDULEDPAYMENTDATE    VARCHAR(100),         ACTUALPAYMENTAMOUNT     VARCHAR(100),         RECENTPAYDATE           VARCHAR(100),         CURROVERDUECYC          VARCHAR(100),         CURROVERDUEAMOUNT       VARCHAR(100),         LAST_24STATE            VARCHAR(100),         CUE                     VARCHAR(2000),         CUE_OUT_TIME            VARCHAR(100),         CUE_ORG                 VARCHAR(500),         CUE_CARD_TYPE           VARCHAR(200),        CUE_CUST_TYPE           VARCHAR(200),         CUE_NO                  VARCHAR(100),         CUE_DB_WAY              VARCHAR(500),         CUE_SX_AMOUNT           VARCHAR(100),     CUE_SX_SHARE_AMOUNT     VARCHAR(100),     CUE_END_TIME            VARCHAR(100),     QUERY_TIME              VARCHAR(100),     QUERYDATE               VARCHAR(100),     QUERYREASON             VARCHAR(200),     QUERIER                 VARCHAR(500),     STATE                   VARCHAR(100),          LOAN_CARD_ID            VARCHAR(100),         ETL_DT                  VARCHAR(100),         DATA_DT                 VARCHAR(100)       );";
//       sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id , global_type , global_id , customer_name , sharecreditlimitamount , usedcreditlimitamount , latest6monthusedavgamount , usedhighestamount , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , last_24state , cue , cue_out_time , cue_org, cue_cust_type , cue_no , cue_db_way , cue_sx_amount , cue_end_time , state , loan_card_id , etl_dt , data_dt ) select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.sharecreditlimitamount,'/N',0) as sharecreditlimitamount , replace(t.usedcreditlimitamount,'/N',0) as usedcreditlimitamount , replace(t.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount , replace(t.usedhighestamount,'/N',0) as usedhighestamount , replace(t.scheduledpaymentamount,'/N',0) as scheduledpaymentamount , t.scheduledpaymentdate , replace(t.actualpaymentamount,'/N',0) as actualpaymentamount , t.recentpaydate , replace(t.curroverduecyc,'/N',0) as curroverduecyc , replace(t.curroverdueamount,'/N',0) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state , replace(t.cue,'/N',0) as cue , t.state , replace(t.loan_card_id,'/N',0) as loan_card_id , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.sharecreditlimitamount , B.usedcreditlimitamount , B.latest6monthusedavgamount , B.usedhighestamount , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.last_24state , B.cue , B.state , B.loan_card_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO B ON A.REPORT_SN = B.REPORT_ID ) T ; ";
//       sql="CREATE TABLE TBL_PER_RESULT_INFO ( id int, bar_code varchar(64), report_sn varchar(48), query_time varchar(38), report_create_time varchar(38), name varchar(60), cert_type varchar(80), cert_no varchar(60), query_reason varchar(400), qyery_format varchar(40), query_org varchar(160), user_code varchar(128), query_result_cue varchar(40), etl_date  varchar(30));";
//     sql="select count(*) from HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_ALL;";
//       sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_CUE   (  ROW_ID                  VARCHAR(20),         GLOBAL_TYPE             VARCHAR(10),         GLOBAL_ID               VARCHAR(20),         CUSTOMER_NAME           VARCHAR(10),         SHARECREDITLIMITAMOUNT  VARCHAR(10),         USEDCREDITLIMITAMOUNT   VARCHAR(10),         LATEST6MONTHUSEDAVGAMOUNT  VARCHAR(10),         USEDHIGHESTAMOUNT          VARCHAR(10),         SCHEDULEDPAYMENTAMOUNT  VARCHAR(10),         SCHEDULEDPAYMENTDATE    VARCHAR(10),         ACTUALPAYMENTAMOUNT     VARCHAR(10),         RECENTPAYDATE           VARCHAR(10),         CURROVERDUECYC          VARCHAR(10),         CURROVERDUEAMOUNT       VARCHAR(10),         LAST_24STATE            VARCHAR(10),         CUE                     VARCHAR(2000),         CUE_OUT_TIME            VARCHAR(10),         CUE_ORG                 VARCHAR(50),         CUE_CUST_TYPE           VARCHAR(20),         CUE_NO                  VARCHAR(10),         CUE_DB_WAY              VARCHAR(50),         CUE_SX_AMOUNT           VARCHAR(10),         CUE_END_TIME            VARCHAR(10),         STATE                   VARCHAR(10),    	     LOAN_CARD_ID            VARCHAR(10),         ETL_DT                  VARCHAR(20),         DATA_DT                 VARCHAR(10)        );";
//       sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t4.row_id , t4.global_id as card_id, 'ratio_card_query_n_new_3m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time from (select t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(*) as b,max(t2.query_time) as query_time from (select row_id,global_id,cnt1,querydate,query_time from ( select t.row_id ,t.global_id,count(*) as cnt1 ,max(t.query_time) as query_time ,max(replace(replace(substr(t1.querydate,1,10),'.',''),'/N','')) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join tbl_per_recorddetail t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='信用卡审批' and t.row_id is not null group by t.row_id,t.global_id ) a) t2 left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('未激活','/N') and t3.cue_cust_type='人民币账户' group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0.";
//       sql="insert into hdm_wbd_zx_qry_tblperrecorddetail_new( row_id, global_type, global_id, customer_name, report_id, querydate, query_time, queryreason, querier, etl_dt, data_dt ) select t.row_id, t.global_type, t.global_id, t.customer_name, t.report_id, replace(replace(substr(t.querydate,1,10),'.',''),'/N','') as querydate, t2.query_time, replace(t.queryreason,'/N','') as queryreason, replace(t.querier,'/N','') as querier, t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.report_id , B.querydate , B.queryreason , B.querier , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B ON A.REPORT_SN = B.REPORT_ID ) T left join (SELECT A.CERT_NO AS global_id , A.REPORT_SN , replace(replace(substr(A.query_time,1,10),'.',''),'/N','') as query_time FROM (SELECT T1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) T1 WHERE T1.sq=1 ) A ) t2 on t.row_id = t2.REPORT_SN ;";
//       sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select a.row_id , a.card_id , 'n_card_low_money_total' as index_name, nvl(a.index_value,-1) as index_value, a.report_create_time from (select t.row_id , t.global_id as card_id, sum(case when t1.cue_sx_amount < 5000 then 1 when t1.cue_sx_amount > 5000 then 0 else null end) as index_value, max(t.query_time) as report_create_time from hdm_wbd_zx_qry_tblperrecorddetail_new t left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 on t.row_id = t1.row_id and t.global_id = t1.global_id group by t.row_id ,t.global_id ) a;";
//       sql="select count(*) from TBL_PER_RESULT_INFO;";
//       sql="select count(*) from hdm_wbd_zx_qry_tblpbocloaninfo_all;";
//       sql="select count(*) from hdm_wbd_zx_qry_tblpbocloancardinfo_cue;";
//       sql="select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.sharecreditlimitamount,'/N',0) as sharecreditlimitamount , replace(t.usedcreditlimitamount,'/N',0) as usedcreditlimitamount , replace(t.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount , replace(t.usedhighestamount,'/N',0) as usedhighestamount , replace(t.scheduledpaymentamount,'/N',0) as scheduledpaymentamount , t.scheduledpaymentdate , replace(t.actualpaymentamount,'/N',0) as actualpaymentamount , t.recentpaydate , replace(t.curroverduecyc,'/N',0) as curroverduecyc , replace(t.curroverdueamount,'/N',0) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state , replace(t.cue,'/N',0) as cue , t.state , replace(t.loan_card_id,'/N',0) as loan_card_id , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.sharecreditlimitamount , B.usedcreditlimitamount , B.latest6monthusedavgamount , B.usedhighestamount , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.last_24state , B.cue , B.state , B.loan_card_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO B ON A.REPORT_SN = B.REPORT_ID ) T ; ";
//       sql="select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.sharecreditlimitamount,'/N',0) as sharecreditlimitamount , replace(t.usedcreditlimitamount,'/N',0) as usedcreditlimitamount , replace(t.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount , replace(t.usedhighestamount,'/N',0) as usedhighestamount , replace(t.scheduledpaymentamount,'/N',0) as scheduledpaymentamount , t.scheduledpaymentdate , replace(t.actualpaymentamount,'/N',0) as actualpaymentamount , t.recentpaydate , replace(t.curroverduecyc,'/N',0) as curroverduecyc , replace(t.curroverdueamount,'/N',0) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state , replace(t.cue,'/N',0) as cue , t.state , replace(t.loan_card_id,'/N',0) as loan_card_id , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.sharecreditlimitamount , B.usedcreditlimitamount , B.latest6monthusedavgamount , B.usedhighestamount , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.last_24state , B.cue , B.state , B.loan_card_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO B ON A.REPORT_SN = B.REPORT_ID ) T ; ";
//       sql="select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.sharecreditlimitamount,'/N',0) as sharecreditlimitamount , replace(t.usedcreditlimitamount,'/N',0) as usedcreditlimitamount , replace(t.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount , replace(t.usedhighestamount,'/N',0) as usedhighestamount , replace(t.scheduledpaymentamount,'/N',0) as scheduledpaymentamount , t.scheduledpaymentdate , replace(t.actualpaymentamount,'/N',0) as actualpaymentamount , t.recentpaydate , replace(t.curroverduecyc,'/N',0) as curroverduecyc , replace(t.curroverdueamount,'/N',0) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state , replace(t.cue,'/N',0) as cue , t.state , replace(t.loan_card_id,'/N',0) as loan_card_id , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.sharecreditlimitamount , B.usedcreditlimitamount , B.latest6monthusedavgamount , B.usedhighestamount , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.last_24state , B.cue , B.state , B.loan_card_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO B ON A.REPORT_SN = B.REPORT_ID ) T ; ";
//       sql="select A.row_id , A.global_id as card_id, 'query_n_6m' as index_name, max(A.query_time) as report_create_time  from (select t1.row_id ,t1.global_id ,max(t1.query_time) as query_time ,count(1) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new t1  group by t1.global_id,t1.row_id ) A  group by A.row_id,A.global_id ; ";
//       sql="select t1.row_id ,t1.global_id ,max(t1.query_time) as query_time ,count(1) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new t1  group by t1.global_id,t1.row_id ;";
//       sql="select A.row_id,A.global_id from (select row_id,global_id from hdm_wbd_zx_qry_tblperrecorddetail_new ) a group by A.row_id,A.global_id;";
//       sql="SELECT  TT1.*  FROM ( SELECT TT.* FROM TBL_PER_RESULT_INFO TT ) TT1  ;";
//       sql="select count(*) from TBL_PER_RESULT_INFO;";
//       sql="drop table hdm_wbd_index_factor;";
//       sql="";
//     sql="CREATE TABLE hdm_wbd_index_factor(row_id         varchar(20),card_id        varchar(20),index_name     varchar(50),index_value    varchar(20),REPORT_CREATE_TIME varchar(10),etl_date varchar(10));"; 
//       sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id as card_id, 'card_first_creditlimit' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id , t1.global_id , t1.cue_sx_amount as index_value from (select row_id ,global_id ,cue_sx_amount , row_number() over(partition by row_id ,global_id order by cue_out_time ) as rn from hdm_wbd_zx_qry_tblpbocloancardinfo_all where global_id is not null and row_id is not null ) t1 where t1.rn = 1 )t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ;";
       
//       sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id , global_type , global_id , customer_name , sharecreditlimitamount , usedcreditlimitamount , latest6monthusedavgamount , usedhighestamount , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , last_24state , cue , cue_out_time , cue_org, cue_cust_type , cue_no , cue_db_way , cue_sx_amount , cue_end_time , state , loan_card_id , etl_dt , data_dt ) select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.sharecreditlimitamount,'/N',0) as sharecreditlimitamount , replace(t.usedcreditlimitamount,'/N',0) as usedcreditlimitamount , replace(t.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount , replace(t.usedhighestamount,'/N',0) as usedhighestamount , replace(t.scheduledpaymentamount,'/N',0) as scheduledpaymentamount , t.scheduledpaymentdate , replace(t.actualpaymentamount,'/N',0) as actualpaymentamount , t.recentpaydate , replace(t.curroverduecyc,'/N',0) as curroverduecyc , replace(t.curroverdueamount,'/N',0) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state , replace(t.cue,'/N',0) as cue , t.state , replace(t.loan_card_id,'/N',0) as loan_card_id , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.sharecreditlimitamount , B.usedcreditlimitamount , B.latest6monthusedavgamount , B.usedhighestamount , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.last_24state , B.cue , B.state , B.loan_card_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO B ON A.REPORT_SN = B.REPORT_ID ) T ; ";
//
//       sql="insert into hdm_wbd_zx_qry_tblpbocloaninfo_cue( row_id , global_type , global_id , customer_name , class5state , balance , remainpaymentcyc , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , overdue31to60amount , overdue61to90amount , overdue91to180amount , overdueover180amount , latest24state , cue , cue_out_time , cue_org , cue_amt , cue_bz , cue_amt_zl , cue_no , cue_db_way , cue_qs , cue_gh_way , cue_end_time , state , loan_id , etl_dt , data_dt ) select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.class5state,'/N','') as class5state , replace(t.balance,'/N','0') as balance , replace(t.remainpaymentcyc,'/N','0') as remainpaymentcyc , replace(t.scheduledpaymentamount,'/N','0') as scheduledpaymentamount , replace(t.scheduledpaymentdate,'/N','') as scheduledpaymentdate , replace(t.actualpaymentamount,'/N','') as actualpaymentamount , replace(t.recentpaydate ,'/N','') as recentpaydate , replace(t.curroverduecyc ,'/N','') as curroverduecyc , replace(t.curroverdueamount ,'/N','0') as curroverdueamount , replace(t.overdue31to60amount ,'/N','0') as overdue31to60amount , replace(t.overdue61to90amount,'/N','0') as overdue61to90amount , replace(t.overdue91to180amount,'/N','0') as overdue91to180amount , replace(t.overdueover180amount,'/N','0') as overdueover180amount , replace(t.latest24state,'/N','') as latest24state , t.cue , t.state , replace(t.loan_id,'/N',0) as loan_id , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.class5state , B.balance , B.remainpaymentcyc , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.overdue31to60amount , B.overdue61to90amount , B.overdue91to180amount , B.overdueover180amount , B.LAST24MONTHBEGINMONTH AS latest24state , B.cue , B.state , B.loan_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_INFO B ON A.REPORT_SN = B.REPORT_ID WHERE B.STATE <>'结清' ) T ; ";
//              sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_all ( row_id , global_type , global_id , customer_name , sharecreditlimitamount , usedcreditlimitamount , latest6monthusedavgamount , usedhighestamount , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , last_24state , cue, cue_out_time, cue_org, cue_card_type , cue_cust_type, cue_no, cue_db_way, cue_sx_amount, cue_sx_share_amount , cue_end_time, query_time, querydate, queryreason, querier, state , loan_card_id , etl_dt , data_dt ) select t1.row_id , t1.global_type , t1.global_id , t1.customer_name , replace(t1.sharecreditlimitamount,'/N',0) as sharecreditlimitamount , replace(t1.usedcreditlimitamount,'/N',0) as usedcreditlimitamount , replace(t1.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount , replace(t1.usedhighestamount,'/N',0) as usedhighestamount , replace(t1.scheduledpaymentamount,'/N',0) as scheduledpaymentamount , replace(t1.scheduledpaymentdate,'/N','') as scheduledpaymentdate , replace(t1.actualpaymentamount,'/N',0) as actualpaymentamount , replace(t1.recentpaydate,'/N','') as recentpaydate , replace(t1.curroverduecyc,'/N',0) as curroverduecyc , replace(t1.curroverdueamount,'/N',0) as curroverdueamount , replace(t1.last_24state,'/N',0) as last_24state , replace(t1.cue,'/N',0) as cue , t.query_time , t2.querydate , t2.queryreason , t2.querier , t1.state , replace(t1.loan_card_id,'/N',0) as loan_card_id , t1.data_dt from (select B.report_sn ,B.global_id,max(replace(replace(substr(B.query_time,1,10),'.',''),'/N','')) as query_time from (SELECT A.CERT_NO AS global_id , A.report_sn , A.query_time FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A ) B group by B.report_sn ,B.global_id ) T left join (SELECT A1.REPORT_SN AS row_id , A1.CERT_TYPE AS global_type , A1.CERT_NO AS global_id , A1.REPORT_SN , A1.NAME AS customer_name , B1.sharecreditlimitamount , B1.usedcreditlimitamount , B1.latest6monthusedavgamount , B1.usedhighestamount , B1.scheduledpaymentamount , B1.scheduledpaymentdate , B1.actualpaymentamount , B1.recentpaydate , B1.curroverduecyc , B1.curroverdueamount , B1.last_24state , B1.cue , B1.state , B1.loan_card_id , A1.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A1 LEFT JOIN TBL_PER_LOAN_CARD_INFO B1 ON A1.REPORT_SN = B1.REPORT_ID ) T1 on t.report_sn = t1.row_id left join (SELECT A.CERT_NO AS global_id , B2.report_id , replace(replace(substr(B2.querydate,1,10),'.',''),'/N','') as querydate , replace(B2.queryreason,'/N','') as queryreason , replace(B2.querier,'/N','') as querier FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B2 ON A.REPORT_SN = B2.REPORT_ID ) t2 on t.report_sn=t2.report_id ; ";
//       sql="insert into hdm_wbd_zx_qry_tblpbocloaninfo_all ( row_id , global_type , global_id , customer_name , class5state , balance , remainpaymentcyc , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , overdue31to60amount , overdue61to90amount , overdue91to180amount , overdueover180amount , latest24state , cue , cue_out_time , cue_org , cue_amt , cue_bz , cue_amt_zl , cue_no , cue_db_way , cue_qs , cue_gh_way , cue_end_time , query_time, querydate, queryreason, querier, state , loan_id , etl_dt , data_dt ) select t1.row_id , t1.global_type , t1.global_id , t1.customer_name , replace(t1.class5state,'/N','') as class5state , replace(t1.balance,'/N','0') as balance , replace(t1.remainpaymentcyc,'/N','0') as remainpaymentcyc , replace(t1.scheduledpaymentamount,'/N','0') as scheduledpaymentamount , replace(t1.scheduledpaymentdate,'/N','') as scheduledpaymentdate , replace(t1.actualpaymentamount,'/N','') as actualpaymentamount , replace(t1.recentpaydate ,'/N','') as recentpaydate , replace(t1.curroverduecyc ,'/N','') as curroverduecyc , replace(t1.curroverdueamount ,'/N','0') as curroverdueamount , replace(t1.overdue31to60amount ,'/N','0') as overdue31to60amount , replace(t1.overdue61to90amount,'/N','0') as overdue61to90amount , replace(t1.overdue91to180amount,'/N','0') as overdue91to180amount , replace(t1.overdueover180amount,'/N','0') as overdueover180amount , replace(t1.latest24state,'/N','') as latest24state , t1.cue , t.query_time , t2.querydate , t2.queryreason , t2.querier , t1.state , replace(t1.loan_id,'/N',0) as loan_id , t1.data_dt FROM (SELECT B.report_sn ,B.global_id,max(replace(replace(substr(B.query_time,1,10),'.',''),'/N','')) as query_time FROM (SELECT A.CERT_NO AS global_id , A.report_sn , A.query_time FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A ) B GROUP BY B.report_sn ,B.global_id ) t LEFT JOIN (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.REPORT_SN , A.NAME AS customer_name , B.class5state , B.balance , B.remainpaymentcyc , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.overdue31to60amount , B.overdue61to90amount , B.overdue91to180amount , B.overdueover180amount , B.LATEST24STATE AS latest24state , B.cue , B.state , B.loan_id , A.QUERY_TIME AS data_dt FROM (SELECT T1.* FROM (SELECT T.*, ROW_NUMBER() over(PARTITION BY T.REPORT_SN ORDER BY T.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO T ) T1 WHERE T1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_INFO B ON A.REPORT_SN = B.REPORT_ID WHERE B.STATE <>'结清' ) T1 on t.report_sn=t1.row_id left join (SELECT A.CERT_NO AS global_id , A.REPORT_SN , replace(replace(substr(B.querydate,1,10),'.',''),'/N','') as querydate , replace(B.queryreason,'/N','') as queryreason , replace(B.querier,'/N','') as querier FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B ON A.REPORT_SN = B.REPORT_ID ) T2 on t.report_sn=t2.report_sn ; ";
//       sql="insert into hdm_wbd_zx_qry_tblperrecorddetail_new( row_id, global_type, global_id, customer_name, report_id, querydate, query_time, queryreason, querier, etl_dt, data_dt ) select t.row_id, t.global_type, t.global_id, t.customer_name, t.report_id, replace(replace(substr(t.querydate,1,10),'.',''),'/N','') as querydate, t2.query_time, replace(t.queryreason,'/N','') as queryreason, replace(t.querier,'/N','') as querier, t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.report_id , B.querydate , B.queryreason , B.querier , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B ON A.REPORT_SN = B.REPORT_ID ) T left join (SELECT A.CERT_NO AS global_id , A.REPORT_SN , replace(replace(substr(A.query_time,1,10),'.',''),'/N','') as query_time FROM (SELECT T1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) T1 WHERE T1.sq=1 ) A ) t2 on t.row_id = t2.REPORT_SN ;";
//       sql="select t4.row_id , t4.global_id as card_id, 'ratio_card_query_n_new_3m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time from (select t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(*) as b,max(t2.query_time) as query_time from (select row_id,global_id,cnt1,querydate,query_time from ( select t.row_id ,t.global_id,count(*) as cnt1 ,max(t.query_time) as query_time ,max(replace(replace(substr(t1.querydate,1,10),'.',''),'/N','')) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join tbl_per_recorddetail t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='信用卡审批' and t.row_id is not null group by t.row_id,t.global_id ) a) t2 left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('未激活','/N') and t3.cue_cust_type='人民币账户' group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0;";
//       sql="select t.row_id , t.global_id as card_id, 'card_credit_limit_level_total' as index_name, case when max(cast(t1.cue_sx_amount as int)) < 5000 then 1 when max(t1.cue_sx_amount) >=5000 and max(t1.cue_sx_amount) < 10000 then 2 when max(t1.cue_sx_amount) >=10000 and max(t1.cue_sx_amount) < 20000 then 3 when max(cast(t1.cue_sx_amount as int)) >=20000 and max(cast(t1.cue_sx_amount as int)) < 50000 then 4 when max(t1.cue_sx_amount) >=50000 then 5 else 0 end as index_value, max(t.query_time) as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 on t.row_id = t1.row_id and t.global_id = t1.global_id group by t.row_id ,t.global_id ;";
//       sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id as card_id, 'loan_mortgage_n_used' as index_name, nvl(cast(sum(t3.index_value) as integer),-1) as index_value, max(t.query_time) as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , sum(case when (t1.cue_amt_zl like '%房%' or t1.cue_amt_zl like '%车%' or t1.cue_db_way='抵押担保') and t1.state in ('正常','逾期','呆账') then 1 when (t1.cue_amt_zl like '%房%' or t1.cue_amt_zl like '%车%' or t1.cue_db_way='抵押担保') and t1.state='结清' then 0 else null end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id union all select t2.row_id , t2.global_id , sum(case when t2.cue_db_way='抵押担保' and t2.cue_sx_amount>=150000 and t2.state in ('正常','呆账') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t2  group by t2.row_id ,t2.global_id ) t3 on t.row_id=t3.row_id and t.global_id = t3.global_id group by t.row_id , t.global_id ;";
//       sql="select A.row_id , A.global_id, 'loan_mortgage_ol_24m' as index_name, sum(A.index_value) as index_value, max(A.REPORT_CREATE_TIME) as REPORT_CREATE_TIME from (select t.row_id , t.global_id, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.row_id is not null and (cue_amt_zl in ('个人汽车贷款', '个人住房贷款') or cue_db_way = '抵押担保') group by t1.row_id ,t1.global_id) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id union all select t.row_id , t.global_id, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where  cue_sx_amount > 150000 and cue_db_way = '抵押担保' group by t1.row_id ,t1.global_id) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id ) A group by A.row_id , A.global_id ; ";
//       sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t1.row_id , t1.global_id, 'account_n_12m' as index_name, nvl(A.index_value,0) as index_value, t1.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join (select t.row_id,t.global_id,cast(sum(t.a) as int) as index_value from (select row_id, global_id,count( loan_id) as a from hdm_wbd_zx_qry_tblpbocloaninfo_all t left join TBL_PER_RECORDDETAIL t2 on t2.report_id=t.row_id and t.global_id = t2.cert_no group by row_id ,global_id; ";
//       sql="select count(*) from (select case when id=3 then id else null end from tempa)  t;";
//       sql="select regexp_instr(regexp_substr(date1,'7'),'7');";
//     sql="CREATE TABLE hdm_wbd_index_factor(row_id         varchar(20),card_id        varchar(20),index_name     varchar(20),index_value    varchar(20),REPORT_CREATE_TIME varchar(10),etl_date varchar(10));"; 

//     sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select a.row_id , a.global_id as card_id, 'mortgage_n_12m' as index_name, nvl(a.index_value,0) as index_value, a.query_time as report_create_time from (select t.row_id,t.global_id,count(distinct t3.cue) as index_value ,max(t.query_time) as query_time from hdm_wbd_zx_qry_tblperrecorddetail_new t left join tbl_per_recorddetail t2 on t2.report_id=t.row_id and t.global_id = t2.cert_no left join hdm_wbd_zx_qry_tblpbocloaninfo_all t3 on t3.row_id = t.row_id and t.global_id = t3.global_id where t3.cue_db_way = '抵押担保' group by t.row_id,t.global_id ) a;";

//     sql="select count(*) from HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_CUE;";
       
//   sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_CUE   (  ROW_ID                  VARCHAR(20),         GLOBAL_TYPE             VARCHAR(10),         GLOBAL_ID               VARCHAR(20),         CUSTOMER_NAME           VARCHAR(10),         SHARECREDITLIMITAMOUNT  VARCHAR(10),         USEDCREDITLIMITAMOUNT   VARCHAR(10),         LATEST6MONTHUSEDAVGAMOUNT  VARCHAR(10),         USEDHIGHESTAMOUNT          VARCHAR(10),         SCHEDULEDPAYMENTAMOUNT  VARCHAR(10),         SCHEDULEDPAYMENTDATE    VARCHAR(10),         ACTUALPAYMENTAMOUNT     VARCHAR(10),         RECENTPAYDATE           VARCHAR(10),         CURROVERDUECYC          VARCHAR(10),         CURROVERDUEAMOUNT       VARCHAR(10),         LAST_24STATE            VARCHAR(10),         CUE                     VARCHAR(2000),         CUE_OUT_TIME            VARCHAR(10),         CUE_ORG                 VARCHAR(50),         CUE_CUST_TYPE           VARCHAR(20),         CUE_NO                  VARCHAR(10),         CUE_DB_WAY              VARCHAR(50),         CUE_SX_AMOUNT           VARCHAR(10),         CUE_END_TIME            VARCHAR(10),         STATE                   VARCHAR(10),    	     LOAN_CARD_ID            VARCHAR(10),         ETL_DT                  VARCHAR(20),         DATA_DT                 VARCHAR(10)        );";
// sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_ALL (   ROW_ID                     VARCHAR(200),         GLOBAL_TYPE                VARCHAR(100),         GLOBAL_ID                  VARCHAR(200),         CUSTOMER_NAME              VARCHAR(100),         SHARECREDITLIMITAMOUNT     VARCHAR(100),         USEDCREDITLIMITAMOUNT      VARCHAR(100),         LATEST6MONTHUSEDAVGAMOUNT  VARCHAR(100),         USEDHIGHESTAMOUNT       VARCHAR(100),         SCHEDULEDPAYMENTAMOUNT  VARCHAR(100),         SCHEDULEDPAYMENTDATE    VARCHAR(100),         ACTUALPAYMENTAMOUNT     VARCHAR(100),         RECENTPAYDATE           VARCHAR(100),         CURROVERDUECYC          VARCHAR(100),         CURROVERDUEAMOUNT       VARCHAR(100),         LAST_24STATE            VARCHAR(100),         CUE                     VARCHAR(2000),         CUE_OUT_TIME            VARCHAR(100),         CUE_ORG                 VARCHAR(500),         CUE_CARD_TYPE           VARCHAR(200),        CUE_CUST_TYPE           VARCHAR(200),         CUE_NO                  VARCHAR(100),         CUE_DB_WAY              VARCHAR(500),         CUE_SX_AMOUNT           VARCHAR(100),     CUE_SX_SHARE_AMOUNT     VARCHAR(100),     CUE_END_TIME            VARCHAR(100),     QUERY_TIME              VARCHAR(100),     QUERYDATE               VARCHAR(100),     QUERYREASON             VARCHAR(200),     QUERIER                 VARCHAR(500),     STATE                   VARCHAR(100),          LOAN_CARD_ID            VARCHAR(100),         ETL_DT                  VARCHAR(100),         DATA_DT                 VARCHAR(100)       );";
//sql="select count(*) from HDM_WBD_ZX_QRY_TBLPERRECORDDETAIL_NEW;";
// sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id as card_id, 'card_credit_limit_level_total' as index_name, case when max(t1.cue_sx_amount) < 5000 then 1 when max(t1.cue_sx_amount) >=5000 and max(t1.cue_sx_amount) < 10000 then 2 when max(t1.cue_sx_amount) >=10000 and max(t1.cue_sx_amount) < 20000 then 3 when max(t1.cue_sx_amount) >=20000 and max(t1.cue_sx_amount) < 50000 then 4 when max(t1.cue_sx_amount) >=50000 then 5 else 0 end as index_value, max(t.query_time) as report_create_time from hdm_wbd_zx_qry_tblperrecorddetail_new t left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 on t.row_id = t1.row_id and t.global_id = t1.global_id group by t.row_id ,t.global_id;";
//  sql="select t1.row_id , t1.global_type , t1.global_id , t1.customer_name , replace(t1.sharecreditlimitamount,'/N',0) as sharecreditlimitamount , replace(t1.usedcreditlimitamount,'/N',0) as usedcreditlimitamount , replace(t1.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount , replace(t1.usedhighestamount,'/N',0) as usedhighestamount , replace(t1.scheduledpaymentamount,'/N',0) as scheduledpaymentamount , replace(t1.scheduledpaymentdate,'/N','') as scheduledpaymentdate , replace(t1.actualpaymentamount,'/N',0) as actualpaymentamount , replace(t1.recentpaydate,'/N','') as recentpaydate , replace(t1.curroverduecyc,'/N',0) as curroverduecyc , replace(t1.curroverdueamount,'/N',0) as curroverdueamount , replace(t1.last_24state,'/N',0) as last_24state , replace(t1.cue,'/N',0) as cue , t.query_time , t2.querydate , t2.queryreason , t2.querier , t1.state , replace(t1.loan_card_id,'/N',0) as loan_card_id , t1.data_dt from (select B.report_sn ,B.global_id,max(replace(replace(substr(B.query_time,1,10),'.',''),'/N','')) as query_time from (SELECT A.CERT_NO AS global_id , A.report_sn , A.query_time FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A ) B group by B.report_sn ,B.global_id ) T left join (SELECT A1.REPORT_SN AS row_id , A1.CERT_TYPE AS global_type , A1.CERT_NO AS global_id , A1.REPORT_SN , A1.NAME AS customer_name , B1.sharecreditlimitamount , B1.usedcreditlimitamount , B1.latest6monthusedavgamount , B1.usedhighestamount , B1.scheduledpaymentamount , B1.scheduledpaymentdate , B1.actualpaymentamount , B1.recentpaydate , B1.curroverduecyc , B1.curroverdueamount , B1.last_24state , B1.cue , B1.state , B1.loan_card_id , A1.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A1 LEFT JOIN TBL_PER_LOAN_CARD_INFO B1 ON A1.REPORT_SN = B1.REPORT_ID ) T1 on t.report_sn = t1.row_id left join (SELECT A.CERT_NO AS global_id , B2.report_id , replace(replace(substr(B2.querydate,1,10),'.',''),'/N','') as querydate , replace(B2.queryreason,'/N','') as queryreason , replace(B2.querier,'/N','') as querier FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B2 ON A.REPORT_SN = B2.REPORT_ID ) t2 on t.report_sn=t2.report_id ; ";     
//   sql="SELECT TT1.*  FROM ( SELECT TT.*, ROW_NUMBER () over ( PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1  WHERE TT1.sq = 1 ";
//  sql="select row_id, global_id,count( loan_id) as a from hdm_wbd_zx_qry_tblpbocloaninfo_all t left join TBL_PER_RECORDDETAIL t2 on t2.report_id=t.row_id and t.global_id = t2.cert_no where t.cue_out_time >= add_months(t2.querydate,-12) group by t.row_id ,t.global_id;";
//  sql="delect  from temp1;";
//  sql="insert into temp1 select row_id,global_id,count(*) as a from hdm_wbd_zx_qry_tblpbocloaninfo_all where regexp_like(state,'/N') =1 group by row_id,global_id;";
//  sql="select t.row_id , t.global_id, to_char(nvl(t2.index_value, '0'), '99999') as index_value, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , sum(length(substr(t1.latest24state,-3)) - length(regexp_replace(substr(t1.latest24state, -3),'[0-9]+',''))) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.row_id is not null and (cue_amt_zl in ('个人汽车贷款', '个人住房贷款') or cue_db_way = '抵押担保') and t1.state = '正常' group by t1.row_id ,t1.global_id ) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id;";
//  sql="insert into temp2(row_id,global_id,index_value,query_time) select t.row_id , t.global_id, nvl(t2.index_value, '0') as index_value, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , sum(length(substr(t1.latest24state, 12)) - nvl(length(replace(substr(t1.latest24state, 12),'1','')),0)) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id ) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id;";
  sql="insert into wbdm.hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id     ,       global_type    ,   global_id    ,     customer_name ,    sharecreditlimitamount    , usedcreditlimitamount    ,  latest6monthusedavgamount , usedhighestamount    ,      scheduledpaymentamount    , scheduledpaymentdate    ,   actualpaymentamount    ,    recentpaydate    ,   curroverduecyc    ,  curroverdueamount ,  last_24state    ,    cue    ,             cue_out_time    ,    cue_org,cue_cust_type ,      cue_no    ,          cue_db_way    ,      cue_sx_amount ,      cue_end_time    ,    state    ,           loan_card_id    ,    etl_dt    ,          data_dt)select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name , replace(t.sharecreditlimitamount,'/N',0) as sharecreditlimitamount ,   replace(t.usedcreditlimitamount,'/N',0) as usedcreditlimitamount    ,  replace(t.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount ,  replace(t.usedhighestamount,'/N',0) as usedhighestamount ,            replace(t.scheduledpaymentamount,'/N',0) as scheduledpaymentamount ,  t.scheduledpaymentdate ,  replace(t.actualpaymentamount,'/N',0) as actualpaymentamount ,  t.recentpaydate , replace(t.curroverduecyc,'/N',0) as curroverduecyc , replace(t.curroverdueamount,'/N',0) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state ,            replace(t.cue,'/N',0) as cue    ,  replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as cue_org ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as cue_cust_type ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as cue_no ,regexp_substr(replace(replace(replace(replace(replace(substr(cue,instr(cue,'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as cue_db_way ,regexp_substr(replace(replace(replace(cue,'    ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as cue_sx_amount , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','')  as cue_end_time, t.state ,replace(t.loan_card_id,'/N',0) as loan_card_id ,  time_dt AS etl_dt , t.data_dt     from (SELECT A.REPORT_SN AS row_id       ,A.CERT_TYPE AS global_type  ,A.CERT_NO   AS global_id    ,A.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id              , A.QUERY_TIME AS data_dt  FROM (SELECT TT1.* FROM (SELECT TT.*,ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq  FROM HDS.TBL_PER_RESULT_INFO  TT )  TT1  WHERE TT1.sq=1 ) A LEFT JOIN HDS.TBL_PER_LOAN_CARD_INFO  B ON A.REPORT_SN = B.REPORT_ID  )  T  ;";
  sql="SELECT TT1.* FROM (SELECT TT.*,ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq  FROM HDS.TBL_PER_RESULT_INFO  TT )  TT1  WHERE TT1.sq=1;";
   sql="SELECT A.REPORT_SN AS row_id       ,A.CERT_TYPE AS global_type  ,A.CERT_NO   AS global_id    ,A.NAME   AS customer_name   , A.QUERY_TIME AS data_dt  FROM (SELECT TT1.* FROM (SELECT TT.*,ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq  FROM TBL_PER_RESULT_INFO  TT )  TT1  WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO  B ON A.REPORT_SN = B.REPORT_ID  ;";   
//   sql="select count(*) from TBL_PER_LOAN_CARD_INFO;";
   sql="create table aa(REPORT_SN   varchar(48) ,CERT_TYPE varchar(80),CERT_NO varchar(60),NAME varchar(60),QUERY_TIME varchar(38))";
//sql="select B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id               from TBL_PER_LOAN_CARD_INFO  B;";
   sql="insert into aa(REPORT_SN,CERT_TYPE,CERT_NO,NAME,QUERY_TIME)SELECT A.REPORT_SN AS row_id       ,A.CERT_TYPE AS global_type  ,A.CERT_NO   AS global_id    ,A.NAME   AS customer_name   , A.QUERY_TIME AS data_dt  FROM (SELECT TT1.* FROM (SELECT TT.*,ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq  FROM TBL_PER_RESULT_INFO  TT )  TT1  WHERE TT1.sq=1 )a;";    
//      sql="drop table a;"; 
//   sql="SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID  ;";
//   sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id     ,       global_type    ,   global_id    ,     customer_name ,    sharecreditlimitamount    , usedcreditlimitamount    ,  latest6monthusedavgamount , usedhighestamount    ,      scheduledpaymentamount    , scheduledpaymentdate    ,   actualpaymentamount    ,    recentpaydate    ,   curroverduecyc    ,  curroverdueamount ,  last_24state    ,    cue    ,             cue_out_time    ,    cue_org,cue_cust_type ,      cue_no    ,          cue_db_way    ,      cue_sx_amount ,      cue_end_time    ,    state    ,           loan_card_id    ,    etl_dt    ,          data_dt)select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name , replace(t.sharecreditlimitamount,'/N',0) as sharecreditlimitamount ,   replace(t.usedcreditlimitamount,'/N',0) as usedcreditlimitamount    ,  replace(t.latest6monthusedavgamount,'/N',0) as latest6monthusedavgamount ,  replace(t.usedhighestamount,'/N',0) as usedhighestamount ,            replace(t.scheduledpaymentamount,'/N',0) as scheduledpaymentamount ,  t.scheduledpaymentdate ,  replace(t.actualpaymentamount,'/N',0) as actualpaymentamount ,  t.recentpaydate , replace(t.curroverduecyc,'/N',0) as curroverduecyc , replace(t.curroverdueamount,'/N',0) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state ,            replace(t.cue,'/N',0) as cue    ,  replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as cue_org ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as cue_cust_type ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as cue_no ,regexp_substr(replace(replace(replace(replace(replace(substr(cue,instr(cue,'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as cue_db_way ,regexp_substr(replace(replace(replace(cue,'    ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as cue_sx_amount , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','')  as cue_end_time, t.state ,replace(t.loan_card_id,'/N',0) as loan_card_id ,  time_dt AS etl_dt , t.data_dt     from (SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID   )  T  ;";
//   sql="select * from aa;"; 
//   sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id     ,       global_type    ,   global_id    ,     customer_name ,    sharecreditlimitamount    , usedcreditlimitamount    ,  latest6monthusedavgamount , usedhighestamount    ,      scheduledpaymentamount    , scheduledpaymentdate    ,   actualpaymentamount    ,    recentpaydate    ,   curroverduecyc    ,  curroverdueamount ,  last_24state    ,    cue    ,             cue_out_time    ,    cue_org,cue_cust_type ,      cue_no    ,          cue_db_way    ,      cue_sx_amount ,      cue_end_time    ,    state    ,           loan_card_id    ,    etl_dt    ,          data_dt)select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name , cast(replace(cast(t.sharecreditlimitamount as varchar),'/N',0) as double) as sharecreditlimitamount ,cast(replace(cast(t.usedcreditlimitamount as varchar),'/N',0) as double) as usedcreditlimitamount    ,cast(replace(cast(t.latest6monthusedavgamount as varchar),'/N',0) as double) as latest6monthusedavgamount ,cast(replace(cast(t.usedhighestamount as varchar),'/N',0) as double) as usedhighestamount ,cast(replace(cast(t.scheduledpaymentamount as varchar),'/N',0) as double) as scheduledpaymentamount ,  t.scheduledpaymentdate ,cast(replace(cast(t.actualpaymentamount as varchar),'/N',0) as double)as actualpaymentamount ,  t.recentpaydate ,cast(replace(cast(t.curroverduecyc as varchar),'/N',0) as double) as curroverduecyc , cast(replace(cast(t.curroverdueamount as varchar),'/N',0) as double) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state ,            replace(t.cue,'/N',0) as cue    ,  replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as cue_org ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as cue_cust_type ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as cue_no ,regexp_substr(replace(replace(replace(replace(replace(substr(cue,replace_instr(cue,'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as cue_db_way ,regexp_substr(replace(replace(replace(cue,'    ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as cue_sx_amount , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue ,'    ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','')  as cue_end_time, t.state ,replace(t.loan_card_id,'/N',0) as loan_card_id ,  time_dt AS etl_dt , t.data_dt     from (SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID   )  T  ;";
// sql="select replace(cast(100 as varchar),'1',0);";
//    sql="select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name , cast(replace(cast(t.sharecreditlimitamount as varchar(20)),'/N',0) as double) as sharecreditlimitamount ,cast(replace(cast(t.usedcreditlimitamount as varchar(20)),'/N',0) as double) as usedcreditlimitamount    ,cast(replace(cast(t.latest6monthusedavgamount as varchar(20)),'/N',0) as double) as latest6monthusedavgamount ,cast(replace(cast(t.usedhighestamount as varchar(20)),'/N',0) as double) as usedhighestamount ,cast(replace(cast(t.scheduledpaymentamount as varchar(20)),'/N',0) as double) as scheduledpaymentamount ,  t.scheduledpaymentdate ,cast(replace(cast(t.actualpaymentamount as varchar(20)),'/N',0) as double)as actualpaymentamount ,  t.recentpaydate ,cast(replace(cast(t.curroverduecyc as varchar(20)),'/N',0) as double) as curroverduecyc , cast(replace(cast(t.curroverdueamount as varchar(20)),'/N',0) as double) as curroverdueamount , replace(t.last_24state,'/N',0) as last_24state ,            replace(t.cue,'/N',0) as cue    ,  replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,'    ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as cue_org ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as cue_cust_type ,regexp_substr(replace(replace(replace(replace(replace(cue,'    ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as cue_no ,regexp_substr(replace(replace(replace(replace(replace(substr(cue,replace_instr(cue,'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as cue_db_way ,regexp_substr(replace(replace(replace(cue,'    ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as cue_sx_amount , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue ,'    ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','')  as cue_end_time, t.state ,replace(t.loan_card_id,'/N',0) as loan_card_id ,  time_dt AS etl_dt , t.data_dt     from (SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID   )  T  ;";

//   sql="select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name , cast(replace(cast(t.sharecreditlimitamount as varchar),'/N',0) as double) as sharecreditlimitamount ,cast(replace(cast(t.usedcreditlimitamount as varchar),'/N',0) as double) as usedcreditlimitamount    ,cast(replace(cast(t.latest6monthusedavgamount as varchar),'/N',0) as double) as latest6monthusedavgamount ,cast(replace(cast(t.usedhighestamount as varchar),'/N',0) as double) as usedhighestamount ,cast(replace(cast(t.scheduledpaymentamount as varchar),'/N',0) as double) as scheduledpaymentamount ,  t.scheduledpaymentdate ,cast(replace(cast(t.actualpaymentamount as varchar),'/N',0) as double)as actualpaymentamount ,  t.recentpaydate ,cast(replace(cast(t.curroverduecyc as varchar),'/N',0) as double) as curroverduecyc , cast(replace(cast(t.curroverdueamount as varchar),'/N',0) as double) as curroverdueamount , replace(cast(t.last_24state as varchar),'/N',0) as last_24state ,            replace(cast(t.cue as varchar),'/N',0) as cue    ,  replace(replace(replace(regexp_substr(replace(replace(replace(cast(t.cue as varchar),'    ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time ,regexp_substr(replace(replace(replace(replace(replace(cast(cue as varchar),'    ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as cue_org ,regexp_substr(replace(replace(replace(replace(replace(cast(cue as varchar),'    ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as cue_cust_type ,regexp_substr(replace(replace(replace(replace(replace(cast(cue as varchar),'    ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as cue_no ,regexp_substr(replace(replace(replace(replace(replace(substr(cast(cue as varchar),replace_instr(cast(cue as varchar),'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as cue_db_way ,regexp_substr(replace(replace(replace(cast(cue as varchar),'    ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as cue_sx_amount , replace(replace(replace(regexp_substr(replace(replace(replace(cast(t.cue as varchar) ,'    ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','')  as cue_end_time, t.state ,replace(cast(t.loan_card_id as varchar),'/N',0) as loan_card_id ,  time_dt AS etl_dt , t.data_dt     from (SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID   )  T  ;";
//   sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id     ,       global_type    ,   global_id    ,     customer_name ,    sharecreditlimitamount    , usedcreditlimitamount    ,  latest6monthusedavgamount , usedhighestamount    ,      scheduledpaymentamount    , scheduledpaymentdate    ,   actualpaymentamount    ,    recentpaydate    ,   curroverduecyc    ,  curroverdueamount ,  last_24state    ,    cue    ,             cue_out_time    ,    cue_org,cue_cust_type ,      cue_no    ,          cue_db_way    ,      cue_sx_amount ,      cue_end_time    ,    state    ,           loan_card_id    ,    etl_dt    ,          data_dt)select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name ,replace(cast(t.sharecreditlimitamount as varchar(10)),'/N',0)  as sharecreditlimitamount ,replace(cast(t.usedcreditlimitamount as varchar(10)),'/N',0) as usedcreditlimitamount    ,replace(cast(t.latest6monthusedavgamount as varchar(10)),'/N',0)  as latest6monthusedavgamount ,replace(cast(t.usedhighestamount as varchar(10)),'/N',0) as usedhighestamount ,replace(cast(t.scheduledpaymentamount as varchar(10)),'/N',0) as scheduledpaymentamount ,  t.scheduledpaymentdate ,replace(cast(t.actualpaymentamount as varchar(10)),'/N',0) as actualpaymentamount ,  t.recentpaydate ,replace(cast(t.curroverduecyc as varchar(10)),'/N',0)  as curroverduecyc ,replace(cast(t.curroverdueamount as varchar(10)),'/N',0) as curroverdueamount , replace(cast(t.last_24state as varchar(10)),'/N',0) as last_24state ,            replace(cast(t.cue as varchar(2000)),'/N',0) as cue    , cast(replace(replace(replace(regexp_substr(replace(replace(replace(cast(t.cue as varchar(2000)),'    ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as varchar(10)) as cue_out_time ,cast(regexp_substr(replace(replace(replace(replace(replace(cast(cue as varchar(2000)),'    ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as varchar(50)) as cue_org ,cast(regexp_substr(replace(replace(replace(replace(replace(cast(cue as varchar(2000)),'    ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as varchar(20)) as cue_cust_type ,cast(regexp_substr(replace(replace(replace(replace(replace(cast(cue as varchar(2000)),'    ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as varchar(10)) as cue_no ,regexp_substr(replace(replace(replace(replace(replace(substr(cast(cue as varchar(2000)),cast(replace_instr(cast(cue as varchar(20)),'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as varchar(50)) as cue_db_way ,cast(regexp_substr(replace(replace(replace(cast(cue as varchar(20)),'    ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as int) as cue_sx_amount ,cast(replace(replace(replace(regexp_substr(replace(replace(replace(cast(t.cue as varchar(20)) ,'    ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','')  as varchar(10) )as cue_end_time, t.state ,cast(replace(cast(t.loan_card_id as varchar(20)),'/N',0) as varchar(10)) as loan_card_id ,  time_dt AS etl_dt , t.data_dt     from (SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID   )  T  ;";
//sql="insert into tempc(da)values(10000000000000000);";
//sql="drop table tempb;";
//sql="create table tempc(da varchar(5));";
//sql="select * from tempc;";
//sql="insert into tempc(da)values(100);";
//   sql="select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name ,replace(cast(t.sharecreditlimitamount as varchar(10)),'/N',0)  as sharecreditlimitamount ,replace(cast(t.usedcreditlimitamount as varchar(10)),'/N',0) as usedcreditlimitamount    ,replace(cast(t.latest6monthusedavgamount as varchar(10)),'/N',0)  as latest6monthusedavgamount ,replace(cast(t.usedhighestamount as varchar(10)),'/N',0) as usedhighestamount ,replace(cast(t.scheduledpaymentamount as varchar(10)),'/N',0) as scheduledpaymentamount ,  t.scheduledpaymentdate ,replace(cast(t.actualpaymentamount as varchar(10)),'/N',0) as actualpaymentamount ,  t.recentpaydate ,replace(cast(t.curroverduecyc as varchar(10)),'/N',0)  as curroverduecyc ,replace(cast(t.curroverdueamount as varchar(10)),'/N',0) as curroverdueamount , replace(cast(t.last_24state as varchar(10)),'/N',0) as last_24state ,            replace(cast(t.cue as varchar(2000)),'/N',0) as cue    , cast(replace(replace(replace(regexp_substr(replace(replace(replace(cast(t.cue as varchar(2000)),'    ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as varchar(10)) as cue_out_time     from (SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID   )  T  ;";
//sql="select * from hdm_wbd_zx_qry_tblpbocloancardinfo_cue;";
//   sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id     ,       global_type    ,   global_id    ,     customer_name ,    sharecreditlimitamount    , usedcreditlimitamount    ,  latest6monthusedavgamount , usedhighestamount )select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name , cast(replace(cast(t.sharecreditlimitamount as varchar),'/N',0) as double) as sharecreditlimitamount ,cast(replace(cast(t.usedcreditlimitamount as varchar),'/N',0) as double) as usedcreditlimitamount       from (SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID   )  T  ;";
 sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id     ,       global_type    ,   global_id    ,     customer_name   ,sharecreditlimitamount , usedcreditlimitamount    ,  latest6monthusedavgamount , usedhighestamount,scheduledpaymentamount)select t.row_id     ,   t.global_type ,  t.global_id ,    t.customer_name ,replace(cast(t.sharecreditlimitamount as varchar(10)),'/N',0)  as sharecreditlimitamount    ,replace(cast(t.usedcreditlimitamount as varchar(10)),'/N',0) as usedcreditlimitamount    ,replace(cast(t.latest6monthusedavgamount as varchar(10)),'/N',0)  as latest6monthusedavgamount ,replace(cast(t.usedhighestamount as varchar(10)),'/N',0) as usedhighestamount,t.scheduledpaymentdate ,replace(cast(t.actualpaymentamount as varchar(10)),'/N',0) as actualpaymentamount ,  t.recentpaydate ,replace(cast(t.curroverduecyc as varchar(10)),'/N',0) as curroverduecyc ,replace(cast(t.curroverdueamount as varchar(10)),'/N',0)  as curroverdueamount , replace(cast(t.last_24state as varchar(10)),'/N',0) as last_24state ,replace(cast(t.cue as varchar(200)),'/N',0) as cue     from (SELECT aa.REPORT_SN AS row_id       ,aa.CERT_TYPE AS global_type  ,aa.CERT_NO   AS global_id    ,aa.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id, aa.QUERY_TIME AS data_dt  FROM aa left join TBL_PER_LOAN_CARD_INFO  B ON aa.REPORT_SN = B.REPORT_ID   )  T  ;";
  sql="select replace(state,'2','1') from TBL_PER_LOAN_CARD_INFO;";
//  sql="select length(scheduledpaymentamount) from TBL_PER_LOAN_CARD_INFO;";
//  sql="select state from TBL_PER_LOAN_CARD_INFO;";
//  sql="select replace(正常,'2','1')";
//sql="insert into tempa(id,date1) values(3,'2');";
//sql="select id+3 from tempa;";
//sql="select * from tempa;";
//sql="drop table HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_CUE;";
//sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_ALL (   ROW_ID                     VARCHAR(200),         GLOBAL_TYPE                VARCHAR(100),         GLOBAL_ID                  VARCHAR(200),         CUSTOMER_NAME              VARCHAR(100),         SHARECREDITLIMITAMOUNT     VARCHAR(100),         USEDCREDITLIMITAMOUNT      VARCHAR(100),         LATEST6MONTHUSEDAVGAMOUNT  VARCHAR(100),         USEDHIGHESTAMOUNT       VARCHAR(100),         SCHEDULEDPAYMENTAMOUNT  VARCHAR(100),         SCHEDULEDPAYMENTDATE    VARCHAR(100),         ACTUALPAYMENTAMOUNT     VARCHAR(100),         RECENTPAYDATE           VARCHAR(100),         CURROVERDUECYC          VARCHAR(100),         CURROVERDUEAMOUNT       VARCHAR(100),         LAST_24STATE            VARCHAR(100),         CUE                     VARCHAR(2000),         CUE_OUT_TIME            VARCHAR(100),         CUE_ORG                 VARCHAR(500),         CUE_CARD_TYPE           VARCHAR(200),        CUE_CUST_TYPE           VARCHAR(200),         CUE_NO                  VARCHAR(100),         CUE_DB_WAY              VARCHAR(500),         CUE_SX_AMOUNT          int,     CUE_SX_SHARE_AMOUNT     VARCHAR(100),     CUE_END_TIME            VARCHAR(100),     QUERY_TIME              VARCHAR(100),     QUERYDATE               VARCHAR(100),     QUERYREASON             VARCHAR(200),     QUERIER                 VARCHAR(500),     STATE                   VARCHAR(100),          LOAN_CARD_ID            VARCHAR(100),         ETL_DT                  VARCHAR(100),         DATA_DT                 VARCHAR(100)       );";
//sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_CUE   (  ROW_ID                  VARCHAR(20),         GLOBAL_TYPE             VARCHAR(10),         GLOBAL_ID               VARCHAR(20),         CUSTOMER_NAME           VARCHAR(10),         SHARECREDITLIMITAMOUNT  VARCHAR(10),         USEDCREDITLIMITAMOUNT   VARCHAR(10),         LATEST6MONTHUSEDAVGAMOUNT  VARCHAR(10),         USEDHIGHESTAMOUNT          VARCHAR(10),         SCHEDULEDPAYMENTAMOUNT  VARCHAR(10),         SCHEDULEDPAYMENTDATE    VARCHAR(10),         ACTUALPAYMENTAMOUNT     VARCHAR(10),         RECENTPAYDATE           VARCHAR(10),         CURROVERDUECYC          VARCHAR(10),         CURROVERDUEAMOUNT       VARCHAR(10),         LAST_24STATE            VARCHAR(10),         CUE                     VARCHAR(2000),         CUE_OUT_TIME            VARCHAR(10),         CUE_ORG                 VARCHAR(50),         CUE_CUST_TYPE           VARCHAR(20),         CUE_NO                  VARCHAR(10),         CUE_DB_WAY              VARCHAR(50),         CUE_SX_AMOUNT           int,         CUE_END_TIME            VARCHAR(10),         STATE                   VARCHAR(10),    	     LOAN_CARD_ID            VARCHAR(10),         ETL_DT                  VARCHAR(20),         DATA_DT                 VARCHAR(10)        );";
//sql="create table tempa(id int,date1 varchar(5));";
//sql="select * from HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_ALL;";

  
  
  //concat、coalsece、floor、ceil、nvl,cast 、substr、left、right、isnull、nullif、inst,to_char
  sql="select length(cue) from TBL_PER_LOAN_CARD_INFO;";
  sql="select replace(cue,'\\N',0)  from TBL_PER_LOAN_CARD_INFO;";
////  sql="select floor(4*(2+2)/3.0);";
//  sql="select concat(concat(state,'a'),'b') from TBL_PER_LOAN_CARD_INFO;";
//  sql="select replace(cue,'2','1') from TBL_PER_LOAN_CARD_INFO;";
//  sql="select NVL(1,REPORT_ID) from TBL_PER_LOAN_CARD_INFO;";
sql="create table tempa(id int,date1 varchar(7));";
//sql="drop table tempa;";
//sql="insert into tempa(id,date1) values(3,'2019');";
//sql="select * from tempa where id>cast(date1 as double);";
//sql="select ceil(cast(date1 as double)/3) from tempa;";
//  sql="select isnull(1,date1) from tempa;";
//  sql="select id from tempa;";
  sql="select nullif('4','4') from tempa;";
//  sql="select to_char(3,'999') from tempa;";
//  sql="select regexp_instr(date1,'9+') from tempa;";
//  sql="select length(date1) from tempa;";
sql="insert into tempa(id,date1) values(3,'299');";
  sql="select regexp_substr(date1,'9') from tempa;";
//  sql="select func_right(date1,1) from tempa;";
//  sql="select * from tempa;";
//  sql="create table voucher_flow(id int,Cust_type char(2),cust_id varchar(10),unit_id char(4),Aera_id char(2),trade_dat varchar(10),trade_time varchar(10),trade_type char(2),trade_type_detail char(4),Currency char(2),trade_amount double,Channel_id char(2),trade_second char(2));";
//  sql="CREATE TABLE SNAPSHOT (IndustryID int,SecurityID varchar(6),Security_DateTime varchar(16),PreClosePx double,OpenPx double,HighPx double,LowPx double,LastPx double,TotalVolumeTrade int,TotalValueTrade double,NumTrades int,TotalBidQty int,TotalOfferQty int) ;";
//  sql="select * from voucher_flow;";
//  sql="select aera_id,count(id),sum(trade_amount) from voucher_flow  group by aera_id limit 6 offset 1;";
//  sql="CREATE TABLE VOUCHER_FLOW_TRADE(ID INT,TRADE_DATE VARCHAR(10),TRADE_AREA VARCHAR(2),TRADE_NUM VARCHAR(10),TRADE_AMOUNT VARCHAR(12));";
//sql="CREATE TABLE TRANS (VAR01   VARCHAR(16),VAR02   VARCHAR(16),VAR03   VARCHAR(16),VAR04   VARCHAR(16),VAR05   DOUBLE,VAR06   DOUBLE,VAR07   DOUBLE,VAR08   DOUBLE,VAR09   VARCHAR(16),VAR10   DOUBLE,VAR11   DOUBLE,VAR12   DOUBLE,VAR13   VARCHAR(16),VAR14   VARCHAR(16),VAR20   VARCHAR(16),VAR21   VARCHAR(16),VAR22   VARCHAR(16),VAR23   VARCHAR(16),VAR24   VARCHAR(16),VAR25   VARCHAR(16),VAR26   VARCHAR(16),VAR27   VARCHAR(16),VAR28   VARCHAR(16),VAR29   VARCHAR(16),VAR30   VARCHAR(16),VAR31   VARCHAR(16),VAR32   VARCHAR(16),VAR33   DOUBLE,VAR34   DOUBLE,VAR35   DOUBLE,VAR36   DOUBLE,VAR37   DOUBLE,VAR38  DOUBLE,VAR39   DOUBLE,VAR40   DOUBLE,VAR41   VARCHAR(16),VAR42   VARCHAR(16),VAR43   VARCHAR(16),VAR44   VARCHAR(16),VAR45   VARCHAR(16),VAR46   VARCHAR(16),VAR47   VARCHAR(16),VAR48   VARCHAR(16),VAR49   VARCHAR(16),time  VARCHAR(32));";
//sql="select * from SNAPSHOT;";
//  sql="select case when to_date(date2) - to_date(date1) < interval '2years' then 1 else 2 end from temp1;";
sql="drop table tempa;";
sql="create table tempa(date1 varchar(24),date2 varchar(24));";
sql="insert into tempa(date1,date2) values('2016-11-27','2019-11-27');";
sql="insert into tempa(date1,date2) values('2017-12-27','2019-11-27');";
sql="insert into tempa(date1,date2) values('2000-11-26','2012-11-26');";
sql="select to_date(date2),to_date(date1),to_date(date2) - to_date(date1),add_months(date1,1),case when to_date(date2) - to_date(date1) < 730 then 1 else 2 end from tempa;";
//sql="select to_date(date2)- from tempa;";
//sql="select count(distinct date2) from tempa;";
//sql="select date2 from tempa;";
//sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t4.row_id , t4.global_id as card_id, 'ratio_card_query_n_new_6m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time  from (select t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(*) as b ,max(t2.query_time) as query_time from (select row_id,global_id,cnt1,querydate ,query_time from (select t.row_id ,t.global_id ,count(*) as cnt1 ,max(query_time) as query_time ,max(replace(replace(substr(t1.querydate,1,10),'.',''),'\\N','')) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join TBL_PER_RECORDDETAIL t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='信用卡审批' and t.row_id is not null group by t.row_id,t.global_id ) aa) t2 left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('未激活','\\N') and t3.cue_cust_type='人民币账户' and t3.cue_out_time >= add_months(t2.querydate,-6) group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0 ;";
sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_cue( row_id , global_type , global_id , customer_name , sharecreditlimitamount , usedcreditlimitamount , latest6monthusedavgamount , usedhighestamount , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , last_24state , cue , cue_out_time , cue_org, cue_cust_type , cue_no , cue_db_way , cue_sx_amount , cue_end_time , state , loan_card_id , etl_dt , data_dt ) select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.sharecreditlimitamount,'\\N',0) as sharecreditlimitamount , replace(t.usedcreditlimitamount,'\\N',0) as usedcreditlimitamount , replace(t.latest6monthusedavgamount,'\\N',0) as latest6monthusedavgamount , replace(t.usedhighestamount,'\\N',0) as usedhighestamount , replace(t.scheduledpaymentamount,'\\N',0) as scheduledpaymentamount , t.scheduledpaymentdate , replace(t.actualpaymentamount,'\\N',0) as actualpaymentamount , t.recentpaydate , replace(t.curroverduecyc,'\\N',0) as curroverduecyc , replace(t.curroverdueamount,'\\N',0) as curroverdueamount , replace(t.last_24state,'\\N',0) as last_24state , replace(t.cue,'\\N',0) as cue , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time , regexp_substr(replace(replace(replace(replace(replace(cue,' ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as cue_org , regexp_substr(replace(replace(replace(replace(replace(cue,' ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as cue_cust_type , regexp_substr(replace(replace(replace(replace(replace(cue,' ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as cue_no , regexp_substr(replace(replace(replace(replace(replace(substr(cue,regexp_instr(cue,'，','1','4')+1),' ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as cue_db_way , regexp_substr(replace(replace(replace(cue,' ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as cue_sx_amount , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','') as cue_end_time, t.state , replace(t.loan_card_id,'\\N',0) as loan_card_id , time_dt AS etl_dt , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.sharecreditlimitamount , B.usedcreditlimitamount , B.latest6monthusedavgamount , B.usedhighestamount , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.last_24state , B.cue , B.state , B.loan_card_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO B ON A.REPORT_SN = B.REPORT_ID ) T ; ";
sql="drop table TBL_PER_LOAN_CARD_INFO;";

sql="CREATE TABLE TBL_PER_LOAN_CARD_INFO (     ID DOUBLE,     REPORT_ID VARCHAR(20),     CARD_TYPE VARCHAR(2),     CUE VARCHAR(2000),     FINANCEORG VARCHAR(10),     STATE VARCHAR(20),     SHARECREDITLIMITAMOUNT varchar(100),     USEDCREDITLIMITAMOUNT varchar(100),     LATEST6MONTHUSEDAVGAMOUNT varchar(100),     USEDHIGHESTAMOUNT varchar(100),     SCHEDULEDPAYMENTDATE VARCHAR(10),     SCHEDULEDPAYMENTAMOUNT varchar(100),     ACTUALPAYMENTAMOUNT varchar(100),     RECENTPAYDATE VARCHAR(10),     CURROVERDUECYC varchar(100),     CURROVERDUEAMOUNT varchar(100),     LOAN_CARD_ID VARCHAR(1),     ACCOUNT VARCHAR(100),     CURRENCY VARCHAR(1),     OPENDATE VARCHAR(10),     CREDITLIMITAMOUNT DOUBLE,     GUARANTEETYPE VARCHAR(1),     STATEENDDATE VARCHAR(10),     STATEENDMONTH VARCHAR(10),     GUANANTEEMONEY DOUBLE,     OVERDUE31TO60AMOUNT DOUBLE,     OVERDUE61TO90AMOUNT DOUBLE,     OVERDUE91TO180AMOUNT DOUBLE,     OVERDUEOVER180AMOUNT DOUBLE,     BEGINMONTH_24MONTH VARCHAR(10),     ENDMONTH_24MONTH VARCHAR(10),     LAST_24STATE VARCHAR(20),     BEGINMONTH_FI VARCHAR(1),     ENDMONTH_FIVEYEAR VARCHAR(1),     CUS_NAME VARCHAR(1),     CERT_TYPE VARCHAR(10),     CERT_NO VARCHAR(20),     ETL_DATE VARCHAR(10) );";
  
  sql="select regexp_substr(replace(replace(replace(replace(replace(substr(cue,regexp_instr(cue,'，','1','4')+1),'    ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') from TBL_PER_LOAN_CARD_INFO;";
  sql="SELECT TT1.*  FROM (SELECT TT.*,ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq   FROM TBL_PER_RESULT_INFO  TT )  TT1  WHERE TT1.sq=1;";
  sql="SELECT A.REPORT_SN AS row_id, A.CERT_TYPE AS global_type  ,A.CERT_NO   AS global_id    ,A.NAME   AS customer_name   ,B.sharecreditlimitamount    ,B.usedcreditlimitamount     ,B.latest6monthusedavgamount ,B.usedhighestamount         ,B.scheduledpaymentamount    ,B.scheduledpaymentdate      ,B.actualpaymentamount       ,B.recentpaydate             ,B.curroverduecyc            ,B.curroverdueamount         ,B.last_24state              ,B.cue                       ,B.state                     ,B.loan_card_id              ,A.QUERY_TIME AS data_dt   FROM (SELECT TT1.*  FROM (SELECT TT.*,ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq  FROM TBL_PER_RESULT_INFO  TT )  TT1  WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO  B ON A.REPORT_SN = B.REPORT_ID;";
  sql="select t.row_id , t.global_id, sum(t2.index_value) as index_value, max(t.query_time) as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , sum(case when t1.cue_card_type = '贷记卡' then length(func_right(t1.last_24state, 3)) - nvl(length(regexp_replace(func_right(t1.last_24state, 3),'[0-9]+','')),0) when t1.cue_card_type = '准贷记卡' then length(func_right(t1.last_24state, 3)) - nvl(length(regexp_replace(func_right(t1.last_24state, 3),'[2-9]','')),0) end ) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id ) t2 on t2.row_id = t.row_id and t.global_id = t2.global_id group by t.row_id , t.global_id;";
 sql="insert into hdm_wbd_index_factor(row_id,card_id ,index_name ,index_value ,report_create_time,etl_date)select A.row_id,A.global_id as card_id,'take_work_dt' as index_name,case when A.index_value < 30 then A.index_value else -1 end as index_value,A.query_time as report_create_time ,time_dt as etl_date  from (select  t1.row_id,t1.global_id,max(t1.query_time) as query_time ,max(case when cast(nvl(replace(t2.START_YEAR,'--',0),0) as int) >0 then cast(substr(current_timestamp(),1,4) as int) - cast(nvl(replace(t2.START_YEAR,'--',0),0) as int)  else 0 end) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new  t1  left join TBL_PER_PROFESSIONAL  t2 on t2.report_id = t1.row_id  and t2.cert_no = t1.global_id group by t1.row_id,t1.global_id) A ;";
  sql="insert into hdm_wbd_index_factor (row_id, card_id, index_name, index_value, REPORT_CREATE_TIME, etl_date ) select t3.row_id , t3.global_id, 'account_custfirst_age' as index_name, case when cast(t3.index_value as int) < -1 or t3.index_value is null or cast(t3.index_value as int) > 150 then '-1' else t3.index_value end as index_value, t3.REPORT_CREATE_TIME as REPORT_CREATE_TIME from (select t.row_id, t.global_id ,to_char(ceil((to_date(t2.cue_out_time) - to_date(replace(replace(t4.birthday, '.', ''),'--',''))) / 365),'99999') as index_value ,t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select W.row_id ,W.global_id ,W.cue_out_time from (select t1.row_id , t1.global_id , t1.cue_out_time , row_number() over(partition by t1.global_id order by t1.cue_out_time ) AS rn from temp3 t1 ) W where W.rn = 1 ) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id left join (select distinct report_id ,cert_no ,birthday from TBL_PER_PERSIONAL_INFO ) t4 on t4.REPORT_ID = t.row_id and t4.cert_no = t.global_id ) t3  ;";
  sql="insert into temp2(row_id,global_id,index_value,REPORT_CREATE_TIME)select t.row_id , t.global_id , to_char(nvl(t2.index_value, '0'), '99999') as index_value, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(ceil((t1.query_time - to_date(t1.cue_out_time)) / 30 / 12)) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id; ";
  sql="select t.row_id , t.global_id , to_char(nvl(t2.index_value, '0'), '99999') as index_value, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(ceil((t1.query_time - to_date(t1.cue_out_time)) / 30 / 12)) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id;";
sql="CREATE TABLE hdm_wbd_index_factor(row_id         varchar(20),card_id        varchar(20),index_name     varchar(20),index_value    varchar(20),REPORT_CREATE_TIME varchar(10),etl_date varchar(10));"; 
//sql="select * from hdm_wbd_zx_qry_tblpbocloancardinfo_all;";
//  sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id as card_id, 'n_q_credit_card_used' as index_name, nvl(t1.index_value,-1) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select A.REPORT_ID ,A.cert_no , max(replace(A.standard_loan_card_count,'\\N','')) as index_value from TBL_PER_INFO_SUMARRY A left join (select row_id from hdm_wbd_zx_qry_tblpbocloancardinfo_all  ) B on A.REPORT_ID = B.row_id group by A.REPORT_ID ,A.cert_no ) t1 on t.row_id=t1.REPORT_ID and t.global_id = t1.cert_no ;";
//  sql="CREATE TABLE TBL_PER_INFO_SUMARRY (     ID DOUBLE,     REPORT_ID VARCHAR(20),     HOUSE_LOAN_COUNT DOUBLE,     BUSI_HOUSE_LOAN_COUNT DOUBLE,     OTHER_LOAN_COUNT DOUBLE,     FIRST_LOAN_OPEN_MONTH VARCHAR(1),     LOAN_CARD_COUNT DOUBLE,     FIRST_LOAN_CARD_OPEN_MONTH VARCHAR(1),     STANDARD_LOAN_CARD_COUNT varchar(10),     F_STANDARD_LOAN_CARD_OPENMONTH VARCHAR(1),     ANNOUNCE_COUNT DOUBLE,     DISSENT_COUNT DOUBLE,     SCORE VARCHAR(1),     SCORE_MONTH VARCHAR(1),     FELL_BACK_COUNT DOUBLE,     FELL_BACK_BALANCE DOUBLE,     ASSET_DISS_COUNT DOUBLE,     ASSET_DISS_BALCNCE DOUBLE,     ASSURE_REPAY_COUNT DOUBLE,     ASSURE_REPAY_BALANCE DOUBLE,     LOAN_OVERDUE_COUNT DOUBLE,     LOAN_OVERDUE_MONTHS DOUBLE,     LOAN_OVERDUE_HIGEST_AMOUNT_P_M DOUBLE,     LOAN_OVERDUE_MAX_DURATION DOUBLE,     LOAN_CARD_OVERDUE_COUNT DOUBLE,     LOAN_CARD_OVERDUE_MONTHS DOUBLE,     LOAN_CARD_OVERDUE_H_AMOUNT_P_M DOUBLE,     LOAN_CARD_OVERDUE_MAX_DURATION DOUBLE,     S_LOAN_CARD_ODUE_COUNT DOUBLE,     S_LOAN_CARD_ODUE_MONTHS DOUBLE,     S_LOAN_CARD_ODUE_H_AMOUNT_P_M DOUBLE,     S_LOAN_CARD_ODUE_MAX_DURATION DOUBLE,     UNPAIDLOAN_FINANCE_CORP_COUNT DOUBLE,     UNPAIDLOAN_FINANCE_ORG_COUNT DOUBLE,     UNPAIDLOAN_ACCOUNT_COUNT DOUBLE,     UNPAIDLOAN_CREDIT_LIMIT DOUBLE,     UNPAIDLOAN_BALANCE DOUBLE,     UNPAIDLOAN_LASTSIX_MONTH_REPAY DOUBLE,     UNDESTYRYLOANCARD_FANC_COUNT DOUBLE,     UNDESTYRYLOANCARD_ORG_COUNT DOUBLE,     UNDESTYRYLOANCARD_ACCOUNTCOUN DOUBLE,     UNDESTYRYLOANCARD_CREDIT_LIMIT DOUBLE,     UNDESTYRYLOANCARD_MAX_CREDIT DOUBLE,     UNDESTYRYLOANCARD_MIN_CREDIT DOUBLE,     UNDESTYRYLOANCARD_USED_CREDIT DOUBLE,     UNDESTYRYLOANCARD_USED_AVG_6 DOUBLE,     UNDESTYRYSLOANCARD_FANC_COUNT DOUBLE,     UNDESTYRYSLOANCARD_ORG_COUNT DOUBLE,     UNDESTYRYSLOANCARD_ACCOUNTCOUN DOUBLE,     UNDESTYRYSLOANCARD_CREDITLIMIT DOUBLE,     UNDESTYRYSLOANCARD_MAX_CREDIT DOUBLE,     UNDESTYRYSLOANCARD_MIN_CREDIT DOUBLE,     UNDESTYRYSLOANCARD_USED_CREDIT DOUBLE,     UNDESTYRYSLOANCARD_USED_AVG_6 DOUBLE,     GUAR_COUNT DOUBLE,     GUAR_AMOUNT DOUBLE,     GUAR_BALANCE DOUBLE,     CUS_NAME VARCHAR(1),     CERT_TYPE VARCHAR(1),     CERT_NO VARCHAR(20),     ETL_DATE VARCHAR(10) );";
//  sql="drop table TBL_PER_INFO_SUMARRY;";
//  sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id, 'card_foreign_n_total' as index_name, (case when t2.index_value=0 or t2.index_value is null then -1 else t2.index_value end ) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , count(distinct t1.cue_org) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where t1.cue_cust_type <> '人民币账户' group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ;";
//  sql="insert into temp2(row_id,global_id,index_value,REPORT_CREATE_TIME)select t.row_id , t.global_id, sum(t2.index_value) as index_value, max(cast(t.query_time as int)) as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , sum(case when t1.cue_card_type = '贷记卡' then length(func_right(t1.last_24state, 3)) - nvl(length(replace(func_right(t1.last_24state, 3),'[0-9]+','')),0) when t1.cue_card_type = '准贷记卡' then length(func_right(t1.last_24state, 3)) - nvl(length(replace(func_right(t1.last_24state, 3),'[2-9]','')),0) end ) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id ) t2 on t2.row_id = t.row_id and t.global_id = t2.global_id group by t.row_id , t.global_id;";
// sql="select query_time from hdm_wbd_zx_qry_tblperrecorddetail_new;";
  
//  sql="select t.row_id , t.global_id, sum(t2.index_value) as index_value, max(cast(t.query_time as double)) as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , sum(case when t1.cue_card_type = '贷记卡' then length(func_right(t1.last_24state, 3)) - nvl(length(replace(func_right(t1.last_24state, 3),'[0-9]+','')),0) when t1.cue_card_type = '准贷记卡' then length(func_right(t1.last_24state, 3)) - nvl(length(replace(func_right(t1.last_24state, 3),'[2-9]','')),0) end ) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id ) t2 on t2.row_id = t.row_id and t.global_id = t2.global_id group by t.row_id , t.global_id;";
//sql="select func_right(last_24state,3) from hdm_wbd_zx_qry_tblpbocloancardinfo_all;";
// sql="select length(last_24state) from hdm_wbd_zx_qry_tblpbocloancardinfo_all;"; 
// sql="select last_24state from hdm_wbd_zx_qry_tblpbocloancardinfo_all;"; 
//sql="create table te(a varchar(10));";
//sql="insert into te values('中文');";
//sql="select func_right(a,3) from te;";
//  sql="insert into temp2(row_id,global_id,index_value,REPORT_CREATE_TIME)select t.row_id , t.global_id, to_char(nvl(t2.index_value, '0'), '99999') as index_value, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(ceil((t1.query_time - to_date(t1.cue_out_time)) / 30 / 12)) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.row_id is not null and (cue_amt_zl in ('个人汽车贷款','个人住房贷款') or cue_db_way = '抵押担保') group by t1.row_id ,t1.global_id) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id;";
//  sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPERRECORDDETAIL_NEW   (  ROW_ID                  VARCHAR(20) ,        GLOBAL_TYPE    VARCHAR(10) ,       GLOBAL_ID      VARCHAR(20) ,       CUSTOMER_NAME  VARCHAR(10) ,       REPORT_ID      VARCHAR(20) ,       QUERYDATE      VARCHAR(10) ,       QUERY_TIME     VARCHAR(10) ,       QUERYREASON    VARCHAR(20) ,  		     QUERIER        VARCHAR(40) ,  		     ETL_DT         VARCHAR(10) ,        DATA_DT        VARCHAR(10) );";
  
  //  sql="insert into temp2(row_id,global_id,index_value,query_time)select t.row_id , t.global_id, sum(t2.index_value) as index_value, max(t.query_time) as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , sum(case when t1.cue_card_type = '贷记卡' then length(substr(t1.last_24state, 3)) - nvl(length(replace(substr(t1.last_24state, 3),'[0-9]+','')),0) when t1.cue_card_type = '准贷记卡' then length(substr(t1.last_24state, 3)) - nvl(length(replace(substr(t1.last_24state, 3),'[2-9]','')),0) end ) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id ) t2 on t2.row_id = t.row_id and t.global_id = t2.global_id group by t.row_id , t.global_id;";
  
//  sql="select * from hdm_wbd_zx_qry_tblperrecorddetail_new;";
//  sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id as card_id, 'card_credit_limit_level_total' as index_name, case when max(t1.cue_sx_amount) < 5000 then 1 when max(t1.cue_sx_amount) >=5000 and max(t1.cue_sx_amount) < 10000 then 2 when max(t1.cue_sx_amount) >=10000 and max(t1.cue_sx_amount) < 20000 then 3 when max(t1.cue_sx_amount) >=20000 and max(t1.cue_sx_amount) < 50000 then 4 when max(t1.cue_sx_amount) >=50000 then 5 else 0 end as index_value, max(t.query_time) as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 on t.row_id = t1.row_id and t.global_id = t1.global_id group by t.row_id ,t.global_id ;";
//  sql="select * from hdm_wbd_zx_qry_tblperrecorddetail_new;";
//  sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id as card_id, 'n_credit_card_total' as index_name, nvl(t1.index_value,-1) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select REPORT_ID ,cert_no , max(replace(cast(loan_card_count as varchar),'\\N',0)) as index_value from TBL_PER_INFO_SUMARRY group by REPORT_ID ,cert_no ) t1 on t.row_id=t1.REPORT_ID and t.global_id = t1.cert_no ;";
//  sql="select t.row_id , t.global_id, 'all_credit_card_max_month_ol' as index_name, to_char(nvl(t2.index_value,0), '99999') as index_value, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when regexp_substr(t1.last_24state , '[0-9]+') like '%9%' then 9  else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where t1.row_id is not null and t1.cue_card_type = '贷记卡' group by t1.row_id ,t1.global_id ) t2 on t2.row_id = t.row_id and t.global_id = t2.global_id ; ";
//sql="drop table tempa;";
//sql="create table tempa(date1 varchar(24),date2 varchar(24));";
//sql="insert into tempa(date1,date2) values('正常','2019-11-27');";
//sql="insert into tempa(date1,date2) values('2017-12-27','2019-11-27');";
//sql="insert into tempa(date1,date2) values('2000-11-26','2012-11-26');";  
//sql="select max(case when regexp_substr(date1, '[0-9]+') like '%9%' then 9  else 3 end) from tempa group by date2; ";
//sql="select max(case when regexp_substr(t1.last_24state, '[0-9]+') like '%9%' then 9  else 3 end) from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 group by t1.row_id ,t1.global_id ; ";
//sql="select last_24state from hdm_wbd_zx_qry_tblpbocloancardinfo_all;";
//sql="select usedhighestamount from hdm_wbd_zx_qry_tblpbocloancardinfo_all;";
//sql="drop table HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_ALL;";

//sql="select * from hdm_wbd_zx_qry_tblperrecorddetail_new;";
//sql="select t.row_id , t.global_id, 'other_loan_guranteetype_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when t1.state is not null and t1.state<>'结清' and t1.cue_db_way in ('混合担保','抵押担保','非抵押担保') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ;";
//sql="select t.row_id , t.global_id, 'n_loan_type_other_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id ,count(1) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') and t1.cue_amt_zl not like '%房%' and t1.cue_amt_zl='个人汽车贷款' and t1.cue_amt_zl is not null group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ;";
//sql="select t.row_id , t.global_id, 'sum_house_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id ,count(1) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') and t1.cue_amt_zl like '%房%' group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ;";
//sql="drop table hdm_wbd_zx_qry_tblpbocloancardinfo_cue;";
//sql="insert into hdm_wbd_index_factor (row_id, card_id, index_name, index_value, REPORT_CREATE_TIME, etl_date ) select t.row_id , t.global_id, 'loan_nonmortgage_max_month_ol_24m' as index_name, to_char(nvl(t2.index_value, '0'), '99999') as index_value, t.query_time as REPORT_CREATE_TIME from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when regexp_substr(t1.latest24state , '[0-9]+') like '%9%' then 9 when regexp_substr(t1.latest24state , '[0-9]+') like '%8%' then 8 when regexp_substr(t1.latest24state , '[0-9]+') like '%7%' then 7 when regexp_substr(t1.latest24state , '[0-9]+') like '%6%' then 6 when regexp_substr(t1.latest24state , '[0-9]+') like '%5%' then 5 when regexp_substr(t1.latest24state , '[0-9]+') like '%4%' then 4 when regexp_substr(t1.latest24state , '[0-9]+') like '%3%' then 3 when regexp_substr(t1.latest24state , '[0-9]+') like '%2%' then 2 when regexp_substr(t1.latest24state , '[0-9]+') like '%1%' then 1 else 0 end) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.cue_amt_zl not in ('个人汽车贷款', '个人住房贷款') and t1.cue_db_way <> '抵押担保' and t1.row_id is not null group by t1.row_id ,t1.global_id ) t2 on t2.row_id = t.row_id and t2.global_id = t.global_id ; ";
//sql="select cue_sx_amount from hdm_wbd_zx_qry_tblpbocloancardinfo_cue where cue_sx_amount>1;";
//sql="drop table hdm_wbd_zx_qry_tblpbocloancardinfo_cue;";
sql="select cue_amt from hdm_wbd_zx_qry_tblpbocloaninfo_cue where cue_amt  < 50000;";
//sql="drop table HDM_WBD_ZX_QRY_TBLPBOCLOANINFO_CUE;";
sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id, 'other_loan_guranteetype_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when t1.state is not null and t1.state<>'结清' and t1.cue_db_way in ('混合担保','抵押担保','非抵押担保') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ; ";
sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date)select t.row_id , t.global_id, 'other_loan_guranteetype_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when t1.state is not null and t1.state<>'结清' and t1.cue_db_way in ('混合担保','抵押担保','非抵押担保') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ; ";
sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id, 'sum_house_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id ,count(1) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') and t1.cue_amt_zl like '%房%' group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ;";
sql="select t1.row_id , t1.global_id, 'account_first_amount' as index_name, nvl(t2.index_value,-1) as index_value, t1.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join (select W.row_id ,W.global_id , W.cue_sx_amount as index_value from (select t.row_id ,t.global_id , t.cue_sx_amount  from hdm_wbd_zx_qry_tblpbocloancardinfo_all t where t.cue_out_time is not null and t.global_id is not null and state <> '\\N' ) W ) t2 on t1.row_id=t2.row_id and t1.global_id = t2.global_id ;";
//sql="select * from hdm_wbd_index_factor;";
sql="select t1.row_id , t1.global_id, 'account_first_amount' as index_name, nvl(t2.index_value,-1) as index_value, t1.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join (select W.row_id ,W.global_id , W.cue_sx_amount as index_value from (select t.row_id ,t.global_id , t.cue_sx_amount  from hdm_wbd_zx_qry_tblpbocloancardinfo_all t where t.cue_out_time is not null and t.global_id is not null and state <> '\\N' ) W where W.rn =1 ) t2 on t1.row_id=t2.row_id and t1.global_id = t2.global_id ;";
sql="select t1.row_id , t1.global_id, 'account_first_amount' as index_name, nvl(t2.cue_sx_amount,-1) as index_value, t1.query_time as report_create_time  from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join (select W.row_id ,W.global_id , W.cue_sx_amount  from (select t.row_id ,t.global_id , t.cue_sx_amount , row_number() over(partition by t.global_id order by t.cue_out_time ) as rn from hdm_wbd_zx_qry_tblpbocloancardinfo_all t where t.cue_out_time is not null and t.global_id is not null and state <> '\\N' ) W where W.rn =1 ) t2 on t1.row_id=t2.row_id and t1.global_id = t2.global_id ;";
sql="insert into hdm_wbd_index_factor(row_id,card_id ,index_name ,index_value ,report_create_time,etl_date)select A.row_id,A.global_id as card_id,'take_work_dt' as index_name,case when A.index_value < 30 then A.index_value else -1 end as index_value,A.query_time as report_create_time ,time_dt as etl_date  from (select  t1.row_id,t1.global_id,max(t1.query_time) as query_time ,max(case when cast(nvl(replace(t2.START_YEAR,'--',0),0) as int) >0 then cast(substr(current_timestamp(),1,4) as int) - cast(nvl(replace(t2.START_YEAR,'--',0),0) as int)  else 0 end) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new  t1  left join TBL_PER_PROFESSIONAL  t2 on t2.report_id = t1.row_id  and t2.cert_no = t1.global_id group by t1.row_id,t1.global_id) A ;";
sql="select A.row_id,A.global_id as card_id,'take_work_dt' as index_name,case when A.index_value < 30 then A.index_value else -1 end as index_value,A.query_time as report_create_time ,'' as etl_date  from (select  t1.row_id,t1.global_id,max(t1.query_time) as query_time ,max(case when cast(nvl(replace(t2.START_YEAR,'--',0),0) as int) >0 then cast(substr(current_timestamp(),1,4) as int) - cast(nvl(replace(t2.START_YEAR,'--',0),0) as int)  else 0 end) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new  t1  left join TBL_PER_PROFESSIONAL  t2 on t2.report_id = t1.row_id  and t2.cert_no = t1.global_id group by t1.row_id,t1.global_id) A ;";
sql="select t1.row_id , t1.global_id, 'loan_first_type' as index_name, nvl(t2.cue_amt_zl,'-1') as index_value, t1.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join (select W.row_id ,W.global_id , W.cue_amt_zl from (select t.row_id ,t.global_id , t.cue_amt_zl , row_number() over(partition by t.global_id order by t.cue_out_time ) as rn from hdm_wbd_zx_qry_tblpbocloaninfo_all t where t.cue_out_time is not null and t.global_id is not null ) W where W.rn =1 ) t2 on t1.row_id=t2.row_id and t1.global_id = t2.global_id ; ";
sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id, 'other_loan_guranteetype_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when t1.state is not null and t1.state<>'结清' and t1.cue_db_way in ('混合担保','抵押担保','非抵押担保') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ; ";
sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id, 'other_loan_guranteetype_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when t1.state is not null and t1.state<>'结清' and t1.cue_db_way in ('混合担保','抵押担保','非抵押担保') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ; ";
sql="select t1.row_id , t1.global_id, 'loan_first_guaranteetype' as index_name, nvl(t2.cue_db_way,'-1') as index_value, t1.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join (select W.row_id ,W.global_id , W.cue_db_way  from (select t.row_id ,t.global_id , t.cue_db_way , row_number() over(partition by t.global_id order by t.cue_out_time ) as rn from hdm_wbd_zx_qry_tblpbocloaninfo_all t where t.cue_out_time is not null and t.global_id is not null ) W where W.rn =1 ) t2 on t1.row_id=t2.row_id and t1.global_id = t2.global_id ; ";
sql="select t.row_id , t.global_id, 'other_loan_guranteetype_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when t1.state is not null and t1.state<>'结清' and t1.cue_db_way in ('混合担保','抵押担保','非抵押担保') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ; ";
sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t1.row_id , t1.global_id, 'loan_first_over' as index_name, nvl(t3.index_value,'-1') as index_value, t1.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join (select t2.row_id, t2.global_id , case when t2.state='结清' then '1' else '0' end as index_value from (select W.row_id ,W.global_id , W.state from (select t.row_id , t.global_id , t.state , row_number() over(partition by t.global_id order by t.cue_out_time ) as rn from hdm_wbd_zx_qry_tblpbocloaninfo_all t where t.cue_out_time is not null and t.global_id is not null ) W where W.rn =1 ) t2 ) t3 on t1.row_id=t3.row_id and t1.global_id = t3.global_id ;";
sql="select t.row_id , t.global_id, 'other_loan_guranteetype_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when t1.state is not null and t1.state<>'结清' and t1.cue_db_way in ('混合担保','抵押担保','非抵押担保') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ; ";
sql="select t1.row_id , t1.global_id, 'account_first_type' as index_name, nvl(t2.cue_cust_type,'-1') as index_value, t1.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join (select W.row_id ,W.global_id , W.cue_cust_type  from (select t.row_id ,t.global_id , t.cue_cust_type , row_number() over(partition by t.global_id order by t.cue_out_time ) as rn from hdm_wbd_zx_qry_tblpbocloancardinfo_all t where t.cue_out_time is not null and t.global_id is not null ) W where W.rn =1 ) t2 on t1.row_id=t2.row_id and t1.global_id = t2.global_id ; ";
sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id, 'card_n_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , count(1) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where t1.row_id is not null and t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ;";
sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t.row_id , t.global_id, 'other_loan_guranteetype_used' as index_name, nvl(t2.index_value,-1) as index_value, t.query_time as report_create_time,'' as etl_date  from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , max(case when t1.state is not null and t1.state<>'结清' and t1.cue_db_way in ('混合担保','抵押担保','非抵押担保') then 1 else 0 end ) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.state in ('正常','呆账') group by t1.row_id ,t1.global_id ) t2 on t.row_id=t2.row_id and t.global_id = t2.global_id ; ";
sql="insert into hdm_wbd_index_factor (row_id, card_id, index_name, index_value, REPORT_CREATE_TIME, etl_date ) select t.row_id , t.global_id, 'card_m2_12m' as index_name, to_char(sum(nvl(t2.index_value, '0')), '99999') as index_value, max(t.query_time) as REPORT_CREATE_TIME,'' as etl_date from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , sum(case when t1.cue_card_type = '贷记卡' then length(func_right(t1.last_24state, 12)) - nvl(length(replace(func_right(t1.last_24state, 12),'2','')),0) when t1.cue_card_type = '准贷记卡' then length(func_right(t1.last_24state, 12)) - nvl(length(replace(func_right(t1.last_24state, 12),'3','')),0) end ) as index_value from hdm_wbd_zx_qry_tblpbocloancardinfo_all t1 where t1.row_id is not null group by t1.row_id ,t1.global_id ) t2 on t2.row_id = t.row_id and t.global_id = t2.global_id group by t.row_id , t.global_id ; ";
sql="select t.row_id , t.global_id as card_id, 'house_short_time_sct_used' as index_name, to_char(nvl(t2.index_value, '0'), '99999') as index_value, t.query_time as REPORT_CREATE_TIME,'' as etl_date from hdm_wbd_zx_qry_tblperrecorddetail_new t left join (select t1.row_id ,t1.global_id , min(ceil((t1.query_time - to_date(t1.cue_out_time)) / 30)) as index_value from hdm_wbd_zx_qry_tblpbocloaninfo_all t1 where t1.cue_amt_zl = '个人住房贷款' and t1.state = '正常' and t1.row_id is not null group by t1.row_id ,t1.global_id) t2 on t.row_id = t2.row_id and t.global_id = t2.global_id ; ";
sql="select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.sharecreditlimitamount,'\\N',0) as sharecreditlimitamount , replace(t.usedcreditlimitamount,'\\N',0) as usedcreditlimitamount , replace(t.latest6monthusedavgamount,'\\N',0) as latest6monthusedavgamount , replace(t.usedhighestamount,'\\N',0) as usedhighestamount , replace(t.scheduledpaymentamount,'\\N',0) as scheduledpaymentamount , t.scheduledpaymentdate , replace(t.actualpaymentamount,'\\N',0) as actualpaymentamount , t.recentpaydate , replace(t.curroverduecyc,'\\N',0) as curroverduecyc , replace(t.curroverdueamount,'\\N',0) as curroverdueamount , replace(t.last_24state,'\\N',0) as last_24state , replace(t.cue,'\\N',0) as cue , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time , regexp_substr(replace(replace(replace(replace(replace(cue,' ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as cue_org , regexp_substr(replace(replace(replace(replace(replace(cue,' ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as cue_cust_type , regexp_substr(replace(replace(replace(replace(replace(cue,' ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as cue_no , regexp_substr(replace(replace(replace(replace(replace(substr(cue,regexp_instr(cue,'，','1','4')+1),' ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as cue_db_way , regexp_substr(replace(replace(replace(cue,' ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as cue_sx_amount , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','') as cue_end_time, t.state , replace(t.loan_card_id,'\\N',0) as loan_card_id , '' AS etl_dt , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.sharecreditlimitamount , B.usedcreditlimitamount , B.latest6monthusedavgamount , B.usedhighestamount , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.last_24state , B.cue , B.state , B.loan_card_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_CARD_INFO B ON A.REPORT_SN = B.REPORT_ID ) T ; ";

//sql="select rEPLACE ( loan_card_id, '\\N', 0 ) from TBL_PER_LOAN_CARD_INFO;";
sql="insert into hdm_wbd_zx_qry_tblpbocloaninfo_cue( row_id , global_type , global_id , customer_name , class5state , balance , remainpaymentcyc , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , overdue31to60amount , overdue61to90amount , overdue91to180amount , overdueover180amount , latest24state , cue , cue_out_time , cue_org , cue_amt , cue_bz , cue_amt_zl , cue_no , cue_db_way , cue_qs , cue_gh_way , cue_end_time , state , loan_id , etl_dt , data_dt ) select t.row_id , t.global_type , t.global_id , t.customer_name , replace(t.class5state,'\\N','') as class5state , replace(t.balance,'\\N','0') as balance , replace(t.remainpaymentcyc,'\\N','0') as remainpaymentcyc , replace(t.scheduledpaymentamount,'\\N','0') as scheduledpaymentamount , replace(t.scheduledpaymentdate,'\\N','') as scheduledpaymentdate , replace(t.actualpaymentamount,'\\N','') as actualpaymentamount , replace(t.recentpaydate ,'\\N','') as recentpaydate , replace(t.curroverduecyc ,'\\N','') as curroverduecyc , replace(t.curroverdueamount ,'\\N','0') as curroverdueamount , replace(t.overdue31to60amount ,'\\N','0') as overdue31to60amount , replace(t.overdue61to90amount,'\\N','0') as overdue61to90amount , replace(t.overdue91to180amount,'\\N','0') as overdue91to180amount , replace(t.overdueover180amount,'\\N','0') as overdueover180amount , replace(t.latest24state,'\\N','') as latest24state , t.cue , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time , coalesce( regexp_substr(replace(replace(replace(substr(t.cue,1,regexp_instr(t.cue,'，')),' ',''),' ',''),',',''),'“(.*)”发放'), regexp_substr(replace(replace(replace(substr(t.cue,1,regexp_instr(t.cue,'，')),' ',''),' ',''),',',''),'银行(.*)发放'), regexp_substr(replace(replace(replace(substr(t.cue,1,regexp_instr(t.cue,'，')),' ',''),' ',''),',',''),'公司(.*)发放'), regexp_substr(replace(replace(replace(substr(t.cue,1,regexp_instr(t.cue,'，')),' ',''),' ',''),',',''),'机构(.*)发放'), regexp_substr(replace(replace(replace(substr(t.cue,1,regexp_instr(t.cue,'，')),' ',''),' ',''),',',''),'中心(.*)发放') ) as cue_org , regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'发放的*([0-9]+)') as cue_amt, replace(regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'元（(.*?）)'),'）','') as cue_bz, replace(regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'）(.*?，)'),'，','') as cue_amt_zl, replace(regexp_substr(replace(replace(cue,' ',''),' ',''),'业务号(.*?，)'),'，','') as cue_no, replace(regexp_substr(replace(replace(substr(t.cue,regexp_instr(t.cue,'，',1,2)+1),' ',''),' ',''),'(.*?，)'),'，','') as cue_db_way , replace(regexp_substr(replace(replace(substr(t.cue,regexp_instr(t.cue,'，',1,3)+1),' ',''),' ',''),'(.*?期，)'),'，','') as cue_qs , replace(regexp_substr(replace(replace(substr(t.cue,regexp_instr(t.cue,'，',1,3)+1),' ',''),' ',''),'(.*?截至)'),'截至','') as cue_gh_way , replace(replace(replace(regexp_substr(replace(replace(replace(t.cue,' ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','') as cue_end_time, t.state , replace(t.loan_id,'\\N',0) as loan_id , '' AS etl_dt , t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.class5state , B.balance , B.remainpaymentcyc , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.overdue31to60amount , B.overdue61to90amount , B.overdue91to180amount , B.overdueover180amount , B.LAST24MONTHBEGINMONTH AS latest24state , B.cue , B.state , B.loan_id , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_INFO B ON A.REPORT_SN = B.REPORT_ID WHERE B.STATE <>'结清' ) T ; ";
sql="insert into hdm_wbd_zx_qry_tblpbocloancardinfo_all ( row_id , global_type , global_id , customer_name , sharecreditlimitamount , usedcreditlimitamount , latest6monthusedavgamount , usedhighestamount , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , last_24state , cue, cue_out_time, cue_org, cue_card_type , cue_cust_type, cue_no, cue_db_way, cue_sx_amount, cue_sx_share_amount , cue_end_time, query_time, querydate, queryreason, querier, state , loan_card_id , etl_dt , data_dt )select t1.row_id , t1.global_type , t1.global_id , t1.customer_name , replace(t1.sharecreditlimitamount,'\\N',0) as sharecreditlimitamount , replace(t1.usedcreditlimitamount,'\\N',0) as usedcreditlimitamount , replace(t1.latest6monthusedavgamount,'\\N',0) as latest6monthusedavgamount , replace(t1.usedhighestamount,'\\N',0) as usedhighestamount , replace(t1.scheduledpaymentamount,'\\N',0) as scheduledpaymentamount , replace(t1.scheduledpaymentdate,'\\N','') as scheduledpaymentdate , replace(t1.actualpaymentamount,'\\N',0) as actualpaymentamount , replace(t1.recentpaydate,'\\N','') as recentpaydate , replace(t1.curroverduecyc,'\\N',0) as curroverduecyc , replace(t1.curroverdueamount,'\\N',0) as curroverdueamount , replace(t1.last_24state,'\\N',0) as last_24state , replace(t1.cue,'\\N',0) as cue , replace(replace(replace(regexp_substr(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time , regexp_substr(replace(replace(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'“',''),'”',''),'日商业银行(.*)发放') as cue_org , case when t1.cue is not null then regexp_substr(replace(replace(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'“',''),'”',''),'发放的(.*)卡') ||'卡' else null end as cue_card_type , regexp_substr(replace(replace(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'“',''),'”',''),'卡（(.*)），') as cue_cust_type , regexp_substr(replace(replace(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'“',''),'”',''),'业务号(.*)，授信') as cue_no , regexp_substr(replace(replace(replace(replace(replace(substr(t1.cue,regexp_instr(t1.cue,'，','1','4')+1),' ',''),' ',''),',',''),'，',''),'。',''),'(.*)截至') as cue_db_way , regexp_substr(replace(replace(replace(t1.cue,' ',''),'折合人民币',''),',',''),'授信额度*([0-9]+)') as cue_sx_amount , regexp_substr(replace(replace(replace(t1.cue,' ',''),'折合人民币',''),',',''),'共享授信额度*([0-9]+)') as cue_sx_share_amount , replace(replace(replace(regexp_substr(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','') as cue_end_time, t.query_time , t2.querydate , t2.queryreason , t2.querier , t1.state , replace(t1.loan_card_id,'\\N',0) as loan_card_id , '' AS etl_dt , t1.data_dt from (select B.report_sn ,B.global_id,max(cast(replace(replace(substr(B.query_time,1,10),'.',''),'\\N','') as int)) as query_time from (SELECT A.CERT_NO AS global_id , A.report_sn , A.query_time FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A ) B group by B.report_sn ,B.global_id ) T left join (SELECT A1.REPORT_SN AS row_id , A1.CERT_TYPE AS global_type , A1.CERT_NO AS global_id , A1.REPORT_SN , A1.NAME AS customer_name , B1.sharecreditlimitamount , B1.usedcreditlimitamount , B1.latest6monthusedavgamount , B1.usedhighestamount , B1.scheduledpaymentamount , B1.scheduledpaymentdate , B1.actualpaymentamount , B1.recentpaydate , B1.curroverduecyc , B1.curroverdueamount , B1.last_24state , B1.cue , B1.state , B1.loan_card_id , A1.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A1 LEFT JOIN TBL_PER_LOAN_CARD_INFO B1 ON A1.REPORT_SN = B1.REPORT_ID ) T1 on t.report_sn = t1.row_id left join (SELECT A.CERT_NO AS global_id , B2.report_id , replace(replace(substr(B2.querydate,1,10),'.',''),'\\N','') as querydate , replace(B2.queryreason,'\\N','') as queryreason , replace(B2.querier,'\\N','') as querier FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B2 ON A.REPORT_SN = B2.REPORT_ID ) t2 on t.report_sn=t2.report_id where t.report_sn is not null ; ";
//sql="CREATE TABLE TBL_PER_RESULT_INFO(ID DOUBLE,BAR_CODE VARCHAR(10),REPORT_SN VARCHAR(20),QUERY_TIME VARCHAR(10),REPORT_CREATE_TIME VARCHAR(10),NAME VARCHAR(10),CERT_TYPE VARCHAR(1),CERT_NO VARCHAR(20),QUERY_REASON VARCHAR(10),QYERY_FORMAT VARCHAR(10),QUERY_ORG VARCHAR(50),USER_CODE VARCHAR(10),QUERY_RESULT_CUE VARCHAR(2000),ETL_DATE VARCHAR(10));";
//sql="select query_time from TBL_PER_RESULT_INFO;";
//sql="SELECT A.CERT_NO AS global_id , B2.report_id , replace(replace(substr(B2.querydate,1,10),'.',''),'\\N','') as querydate , replace(B2.queryreason,'\\N','') as queryreason , replace(B2.querier,'\\N','') as querier FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B2 ON A.REPORT_SN = B2.REPORT_ID;";

//sql="select report_sn from TBL_PER_RESULT_INFO ;";
//sql="select B.report_sn ,B.global_id,max(cast(replace(replace(substr(B.query_time,1,10),'.',''),'\\N','') as int)) as query_time from (SELECT A.CERT_NO AS global_id , A.report_sn , A.query_time FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A ) B group by B.report_sn ,B.global_id ;";
//sql="SELECT A1.REPORT_SN AS row_id , A1.CERT_TYPE AS global_type , A1.CERT_NO AS global_id , A1.REPORT_SN , A1.NAME AS customer_name , B1.sharecreditlimitamount , B1.usedcreditlimitamount , B1.latest6monthusedavgamount , B1.usedhighestamount , B1.scheduledpaymentamount , B1.scheduledpaymentdate , B1.actualpaymentamount , B1.recentpaydate , B1.curroverduecyc , B1.curroverdueamount , B1.last_24state , B1.cue , B1.state , B1.loan_card_id , A1.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A1 LEFT JOIN TBL_PER_LOAN_CARD_INFO B1 ON A1.REPORT_SN = B1.REPORT_ID ;";
sql="insert into hdm_wbd_zx_qry_tblpbocloaninfo_all ( row_id , global_type , global_id , customer_name , class5state , balance , remainpaymentcyc , scheduledpaymentamount , scheduledpaymentdate , actualpaymentamount , recentpaydate , curroverduecyc , curroverdueamount , overdue31to60amount , overdue61to90amount , overdue91to180amount , overdueover180amount , latest24state , cue , cue_out_time , cue_org , cue_amt , cue_bz , cue_amt_zl , cue_no , cue_db_way , cue_qs , cue_gh_way , cue_end_time , query_time, querydate, queryreason, querier, state , loan_id , etl_dt , data_dt ) select t1.row_id , t1.global_type , t1.global_id , t1.customer_name , replace(t1.class5state,'\\N','') as class5state , replace(t1.balance,'\\N','0') as balance , replace(t1.remainpaymentcyc,'\\N','0') as remainpaymentcyc , replace(t1.scheduledpaymentamount,'\\N','0') as scheduledpaymentamount , replace(t1.scheduledpaymentdate,'\\N','') as scheduledpaymentdate , replace(t1.actualpaymentamount,'\\N','') as actualpaymentamount , replace(t1.recentpaydate ,'\\N','') as recentpaydate , replace(t1.curroverduecyc ,'\\N','') as curroverduecyc , replace(t1.curroverdueamount ,'\\N','0') as curroverdueamount , replace(t1.overdue31to60amount ,'\\N','0') as overdue31to60amount , replace(t1.overdue61to90amount,'\\N','0') as overdue61to90amount , replace(t1.overdue91to180amount,'\\N','0') as overdue91to180amount , replace(t1.overdueover180amount,'\\N','0') as overdueover180amount , replace(t1.latest24state,'\\N','') as latest24state , t1.cue , replace(replace(replace(regexp_substr(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'\\.([0-9].*?日)'),'年',''),'月',''),'日','') as cue_out_time , coalesce( regexp_substr(replace(replace(replace(substr(t1.cue,1,regexp_instr(t1.cue,'，')),' ',''),' ',''),',',''),'“(.*)”发放'), regexp_substr(replace(replace(replace(substr(t1.cue,1,regexp_instr(t1.cue,'，')),' ',''),' ',''),',',''),'银行(.*)发放'), regexp_substr(replace(replace(replace(substr(t1.cue,1,regexp_instr(t1.cue,'，')),' ',''),' ',''),',',''),'公司(.*)发放'), regexp_substr(replace(replace(replace(substr(t1.cue,1,regexp_instr(t1.cue,'，')),' ',''),' ',''),',',''),'机构(.*)发放'), regexp_substr(replace(replace(replace(substr(t1.cue,1,regexp_instr(t1.cue,'，')),' ',''),' ',''),',',''),'中心(.*)发放') ) as cue_org , regexp_substr(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'发放的*([0-9]+)') as cue_amt, replace(regexp_substr(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'元（(.*?）)'),'）','') as cue_bz, replace(regexp_substr(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'）(.*?，)'),'，','') as cue_amt_zl, replace(regexp_substr(replace(replace(t1.cue,' ',''),' ',''),'业务号(.*?，)'),'，','') as cue_no, replace(regexp_substr(replace(replace(substr(t1.cue,regexp_instr(t1.cue,'，',1,2)+1),' ',''),' ',''),'(.*?，)'),'，','') as cue_db_way , replace(regexp_substr(replace(replace(substr(t1.cue,regexp_instr(t1.cue,'，',1,3)+1),' ',''),' ',''),'(.*?期，)'),'，','') as cue_qs , replace(regexp_substr(replace(replace(substr(t1.cue,regexp_instr(t1.cue,'，',1,3)+1),' ',''),' ',''),'(.*?截至)'),'截至','') cue_gh_way , replace(replace(replace(regexp_substr(replace(replace(replace(t1.cue,' ',''),' ',''),',',''),'截至([0-9].*?日)'),'年',''),'月',''),'日','') as cue_end_time, t.query_time , t2.querydate , t2.queryreason , t2.querier , t1.state , replace(t1.loan_id,'\\N',0) as loan_id ,'' AS etl_dt , t1.data_dt FROM (SELECT B.report_sn ,B.global_id,max(replace(replace(substr(B.query_time,1,10),'.',''),'\\N','')) as query_time FROM (SELECT A.CERT_NO AS global_id , A.report_sn , A.query_time FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A ) B GROUP BY B.report_sn ,B.global_id ) t LEFT JOIN (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.REPORT_SN , A.NAME AS customer_name , B.class5state , B.balance , B.remainpaymentcyc , B.scheduledpaymentamount , B.scheduledpaymentdate , B.actualpaymentamount , B.recentpaydate , B.curroverduecyc , B.curroverdueamount , B.overdue31to60amount , B.overdue61to90amount , B.overdue91to180amount , B.overdueover180amount , B.LATEST24STATE AS latest24state , B.cue , B.state , B.loan_id , A.QUERY_TIME AS data_dt FROM (SELECT T1.* FROM (SELECT T.*, ROW_NUMBER() over(PARTITION BY T.REPORT_SN ORDER BY T.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO T ) T1 WHERE T1.sq=1 ) A LEFT JOIN TBL_PER_LOAN_INFO B ON A.REPORT_SN = B.REPORT_ID WHERE B.STATE <>'结清' ) T1 on t.report_sn=t1.row_id left join (SELECT A.CERT_NO AS global_id , A.REPORT_SN , replace(replace(substr(B.querydate,1,10),'.',''),'\\N','') as querydate , replace(B.queryreason,'\\N','') as queryreason , replace(B.querier,'\\N','') as querier FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B ON A.REPORT_SN = B.REPORT_ID ) T2 on t.report_sn=t2.report_sn where t.report_sn is not null ; ";
//sql="select t.row_id, t.global_type, t.global_id, t.customer_name, t.report_id, replace(replace(substr(t.querydate,1,10),'.',''),'\\N','') as querydate, t2.query_time, replace(t.queryreason,'\\N','') as queryreason, replace(t.querier,'\\N','') as querier, '' AS etl_dt, t.data_dt from (SELECT A.REPORT_SN AS row_id , A.CERT_TYPE AS global_type , A.CERT_NO AS global_id , A.NAME AS customer_name , B.report_id , B.querydate , B.queryreason , B.querier , A.QUERY_TIME AS data_dt FROM (SELECT TT1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) TT1 WHERE TT1.sq=1 ) A LEFT JOIN (SELECT TT1.* FROM (SELECT TT.* , ROW_NUMBER() over(PARTITION BY TT.REPORT_ID ORDER BY TT.querydate DESC ) sq FROM TBL_PER_RECORDDETAIL TT ) TT1 WHERE TT1.sq=1 ) B ON A.REPORT_SN = B.REPORT_ID ) T left join (SELECT A.CERT_NO AS global_id , A.REPORT_SN , replace(replace(substr(A.query_time,1,10),'.',''),'\\N','') as query_time FROM (SELECT T1.* FROM (SELECT TT.*, ROW_NUMBER() over(PARTITION BY TT.REPORT_SN ORDER BY TT.QUERY_TIME DESC ) sq FROM TBL_PER_RESULT_INFO TT ) T1 WHERE T1.sq=1 ) A ) t2 on t.row_id = t2.REPORT_SN where t.row_id is not null ; ";
//sql="CREATE TABLE TBL_PER_RESULT_INFO(ID DOUBLE,BAR_CODE VARCHAR(10),REPORT_SN VARCHAR(20),QUERY_TIME VARCHAR(10),REPORT_CREATE_TIME VARCHAR(10),NAME VARCHAR(10),CERT_TYPE VARCHAR(1),CERT_NO VARCHAR(20),QUERY_REASON VARCHAR(10),QYERY_FORMAT VARCHAR(10),QUERY_ORG VARCHAR(50),USER_CODE VARCHAR(10),QUERY_RESULT_CUE VARCHAR(2000),ETL_DATE VARCHAR(10));";
//sql="drop table TBL_PER_RESULT_INFO;";
//sql="select * from TBL_PER_RESULT_INFO;";

sql="drop table tempa;";
sql="create table tempa(date1 varchar(24),date2 varchar(24));";
//sql="insert into tempa(date1,date2) values('2016-11-27 00:00:00','2019-11-27 00:00:00');";
sql="insert into tempa(date1,date2) values('2017-12-27','2019-11-27');";
sql="insert into tempa(date1,date2) values('2019-11-27','2012-11-26');";
//sql="select case when date1='2016-11-27' then 1 else 0 end  aa from tempa group by aa;";
//sql="select case when date1 in ('2016-11-27','2019-11-27') then date1 else date2 end from tempa;";
//sql="select case when date1 = '2016-11-27' or date1='2019-11-27' then date1 else date2 end from tempa;";
//sql="select to_char(date1,'yyyymmdd') from tempa;";
//sql="select from_timestamp(date1,'yyyymmdd') from tempa;";
sql="select * from tempa;";
//sql="select * from tempa where date1 in (select date2 from tempa);";
//sql="select to_date(date2),to_date(date1),to_date(date2) - to_date(date1),add_months(date1,1),case when to_date(date2) - to_date(date1) < 730 then 1 else 2 end from tempa;";
//sql="CREATE TABLE hdm_wbd_index_factor(row_id         varchar(20),card_id        varchar(20),index_name     varchar(30),index_value    varchar(20),REPORT_CREATE_TIME varchar(10),etl_date varchar(10));"; 
//sql="drop table hdm_wbd_index_factor;";
//sql="select * from HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_CUE;";
//sql="CREATE TABLE HDM_WBD_ZX_QRY_TBLPBOCLOANCARDINFO_CUE   (  ROW_ID                  VARCHAR(20),         GLOBAL_TYPE             VARCHAR(1),         GLOBAL_ID               VARCHAR(20),         CUSTOMER_NAME           VARCHAR(1),         SHARECREDITLIMITAMOUNT  VARCHAR(1),         USEDCREDITLIMITAMOUNT   VARCHAR(1),         LATEST6MONTHUSEDAVGAMOUNT  VARCHAR(1),         USEDHIGHESTAMOUNT          VARCHAR(1),         SCHEDULEDPAYMENTAMOUNT  VARCHAR(1),         SCHEDULEDPAYMENTDATE    VARCHAR(10),         ACTUALPAYMENTAMOUNT     VARCHAR(1),         RECENTPAYDATE           VARCHAR(10),         CURROVERDUECYC          VARCHAR(1),         CURROVERDUEAMOUNT       VARCHAR(1),         LAST_24STATE            VARCHAR(1),         CUE                     VARCHAR(2000),         CUE_OUT_TIME            VARCHAR(10),         CUE_ORG                 VARCHAR(50),         CUE_CUST_TYPE           VARCHAR(20),         CUE_NO                  VARCHAR(1),         CUE_DB_WAY              VARCHAR(50),         CUE_SX_AMOUNT           int,         CUE_END_TIME            VARCHAR(10),         STATE                   VARCHAR(10),    	     LOAN_CARD_ID            VARCHAR(1),         ETL_DT                  VARCHAR(10),         DATA_DT                 VARCHAR(10)        );";
//sql="select A.row_id, A.global_id as card_id, 'query_n_1m' as index_name, to_char(nvl(sum(A.index_value),0),'99999') as index_value, max(A.query_time) as report_create_time,'' as etl_date from (select t1.row_id ,t1.global_id ,max(t1.query_time) as query_time ,count(1) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join TBL_PER_RECORDDETAIL t on t.report_id = t1.row_id and t.cert_no = t1.global_id where replace(replace(substr(t.querydate,1,10),'.',''),'\\N','') >= add_months(replace(replace(substr(t1.query_time,1,10),'.',''),'\\N',''),-1) group by t1.global_id,t1.row_id ) A where A.row_id is not null group by A.row_id ,A.global_id ; ";
//sql="select A.row_id , A.global_id as card_id, 'query_n_3m' as index_name, to_char(nvl(sum(A.index_value),0),'99999') as index_value, max(A.query_time) as report_create_time,'' as etl_date  from (select t1.row_id ,t1.global_id ,max(t1.query_time) as query_time ,count(1) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join TBL_PER_RECORDDETAIL t on t.report_id = t1.row_id and t.cert_no = t1.global_id where replace(replace(substr(t.querydate,1,10),'.',''),'\\N','') >= add_months(replace(replace(substr(t1.query_time,1,10),'.',''),'\\N',''),-3) group by t1.global_id,t1.row_id ) A where A.row_id is not null group by A.row_id ,A.global_id ; ";
//sql="select * from hdm_wbd_zx_qry_tblpbocloancardinfo_all;";


//sql="select A.row_id , A.global_id as card_id, 'query_n_3m' as index_name, to_char(nvl(sum(A.index_value),0),'99999') as index_value, max(A.query_time) as report_create_time,'' as etl_date  from (select t1.row_id ,t1.global_id ,max(t1.query_time) as query_time ,count(1) as index_value from hdm_wbd_zx_qry_tblperrecorddetail_new t1 left join TBL_PER_RECORDDETAIL t on t.report_id = t1.row_id and t.cert_no = t1.global_id where replace(replace(substr(t.querydate,1,10),'.',''),'\\N','') >= add_months(replace(replace(substr(t1.query_time,1,10),'.',''),'\\N',''),-3) group by t1.global_id,t1.row_id ) A where A.row_id is not null group by A.row_id ,A.global_id ; ";

//sql="select t4.row_id , t4.global_id as card_id, 'ratio_card_query_n_new_6m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time,'' as etl_date from (select t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(1) as b ,max(t2.query_time) as query_time from (select row_id,global_id,cnt1,querydate ,query_time from (select t.row_id ,t.global_id ,count(1) as cnt1 ,max(cast(query_time as int)) as query_time ,max(cast(replace(replace(substr(t1.querydate,1,10),'.',''),'\\N','') as int)) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join tbl_per_recorddetail t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='信用卡审批' and t.row_id is not null group by t.row_id,t.global_id ) as ab ) t2 left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('未激活','\\N') and t3.cue_cust_type='人民币账户'  group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0;";

//sql="select t4.row_id , t4.global_id as card_id, 'ratio_card_query_n_new_6m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time,'' as etl_date  from (select t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(1) as b ,max(t2.query_time) as query_time from (select t.row_id ,t.global_id ,count(1) as cnt1 ,max(cast(query_time as int)) as query_time ,max(cast(replace(replace(substr(t1.querydate,1,10),'.',''),'\\N','') as int)) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join tbl_per_recorddetail t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='信用卡审批' and t.row_id is not null group by t.row_id,t.global_id ) t2   left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('未激活','\\N') and t3.cue_cust_type='人民币账户' group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0;";

//sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t4.row_id , t4.global_id as card_id, 'ratio_card_query_n_new_6m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time,'' as etl_date  from (select t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(*) as b ,max(t2.query_time) as query_time from (select row_id,global_id,cnt1,querydate ,query_time from (select t.row_id ,t.global_id ,count(*) as cnt1 ,max(query_time) as query_time ,max(replace(replace(substr(t1.querydate,1,10),'.',''),'\\N','')) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join TBL_PER_RECORDDETAIL t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='信用卡审批' and t.row_id is not null group by t.row_id,t.global_id ) aa ) t2 left join hdm_wbd_zx_qry_tblpbocloancardinfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('未激活','\\N') and t3.cue_cust_type='人民币账户' and t3.cue_out_time >= add_months(t2.querydate,-6) group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0 ;";
//sql="select index_name from hdm_wbd_index_factor;";
//sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t4.row_id , t4.global_id as card_id, 'ratio_loan_query_n_new_24m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time,'' as etl_date  from (select  t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(*) as b ,t2.querydate,max(query_time) as c from (select t.row_id ,t.global_id ,count(*) as cnt1 ,max(t.query_time) as query_time ,max(cast(replace(replace(substr(t1.querydate,1,10),'.',''),'\\N','') as int)) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join TBL_PER_RECORDDETAIL t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='贷款审批' and t.row_id is not null group by t.row_id,t.global_id ) t2 left join hdm_wbd_zx_qry_tblpbocloaninfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('\\N') and t3.cue_out_time >= add_months(t2.querydate,-24) group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0 ;";
//sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t4.row_id , t4.global_id as card_id, 'ratio_loan_query_n_new_24m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time,'' as etl_date  from (select t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(*) as b ,max(t2.query_time) as query_time from (select row_id,global_id,cnt1,querydate,query_time from (select t.row_id ,t.global_id ,count(*) as cnt1 ,max(t.query_time) as query_time ,max(cast(replace(replace(substr(t1.querydate,1,10),'.',''),'\\N','') as int)) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join TBL_PER_RECORDDETAIL t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='贷款审批' and t.row_id is not null group by t.row_id,t.global_id ) as aa ) t2 left join hdm_wbd_zx_qry_tblpbocloaninfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('\\N') and t3.cue_out_time >= add_months(t2.querydate,-24) group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0 ;";
//
//sql="insert into hdm_wbd_index_factor( row_id, card_id , index_name , index_value , report_create_time, etl_date )select t4.row_id , t4.global_id as card_id, 'ratio_loan_query_n_new_24m' as index_name, round(t4.a/t4.b,2) as index_value, t4.query_time as report_create_time,'' as etl_date  from (select  t2.row_id ,t2.global_id,max(t2.cnt1) as a,count(*) as b ,t2.querydate,max(query_time) as c from (select t.row_id ,t.global_id ,count(*) as cnt1 ,max(t.query_time) as query_time ,max(cast(replace(replace(substr(t1.querydate,1,10),'.',''),'\\N','') as int)) as querydate from hdm_wbd_zx_qry_tblperrecorddetail_new t left join TBL_PER_RECORDDETAIL t1 on t.row_id = t1.report_id and t.global_id = t1.cert_no where t1.queryreason='贷款审批' and t.row_id is not null group by t.row_id,t.global_id ) t2 left join hdm_wbd_zx_qry_tblpbocloaninfo_all t3 on t2.row_id=t3.row_id and t2.global_id = t3.global_id where t3.state not in ('\\N') and t3.cue_out_time >= add_months(t2.querydate,-24) group by t2.row_id ,t2.global_id ) t4 where t4.b <> 0 ;";


//sql="CREATE TABLE DM_RPT_02019 (     DATA_DT VARCHAR(8),     INPUTNO VARCHAR(4),     INPUTNA VARCHAR(1),     BRCHNO VARCHAR(1),     BRCHNA VARCHAR(1),     BRUPNO VARCHAR(1),     BRUPNA VARCHAR(1),     CUS_ID VARCHAR(1),     CERT_CODE VARCHAR(1),     LNCFNO VARCHAR(1),     LNCFNA VARCHAR(1),     ITEMNO VARCHAR(1),     ITEMNA VARCHAR(1),     LNCFST VARCHAR(1),     LOAN_START_DT VARCHAR(8),     LOAN_END_DT VARCHAR(8),     LOAN_AMOUNT INT,     LOAN_BALANCE INT,     BNLACNBL INT,     BWLACNBL INT );";
//sql="SELECT CASE WHEN t.Inputno = '999999' THEN '999999' ELSE t.Inputno END AS Inputno, CASE WHEN t.Brupno IS NULL THEN ' ' ELSE t.Brupno END AS Brupno, MAX(t.Brupna) Brchna, SUM(CASE WHEN t.Lncfst = 'NORM' THEN t.Loan_Balance ELSE 0 END) AS Normal_Balance, SUM(CASE WHEN t.Lncfst = 'NORM' OR t.Cus_Id = '贷记卡透支应收利息' THEN t.Bnlacnbl ELSE 0 END) Normal_Instam, SUM(CASE WHEN t.Lncfst = 'NORM' OR t.Cus_Id = '贷记卡透支应收利息' THEN t.Bwlacnbl ELSE 0 END) Normal_Oustam, SUM(CASE WHEN t.Lncfst = 'NORM' AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Loan_Balance ELSE 0 END) AS Normal_Shop_Balance, SUM(CASE WHEN t.Lncfst = 'NORM' AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Bnlacnbl ELSE 0 END) Normal_Shop_Instam, SUM(CASE WHEN t.Lncfst = 'NORM' AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Bwlacnbl ELSE 0 END) Normal_Shop_Oustam, SUM(CASE WHEN t.Lncfst IN ('OVER') THEN t.Loan_Balance ELSE 0 END) AS Over_Balance, SUM(CASE WHEN t.Lncfst IN ('OVER') THEN t.Bnlacnbl ELSE 0 END) Over_Instam, SUM(CASE WHEN t.Lncfst IN ('OVER') THEN t.Bwlacnbl ELSE 0 END) Over_Oustam, SUM(CASE WHEN t.Lncfst IN ('OVER') AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Loan_Balance ELSE 0 END) AS Over_Shop_Balance, SUM(CASE WHEN t.Lncfst IN ('OVER') AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Bnlacnbl ELSE 0 END) Over_Shop_Instam, SUM(CASE WHEN t.Lncfst IN ('OVER') AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Bwlacnbl ELSE 0 END) Over_Shop_Oustam, SUM(CASE WHEN t.Lncfst = 'CHRGO' THEN t.Loan_Balance ELSE 0 END) AS Cancel_Balance, SUM(CASE WHEN t.Lncfst = 'CHRGO' THEN t.Bnlacnbl ELSE 0 END) Cancel_Instam, SUM(CASE WHEN t.Lncfst = 'CHRGO' THEN t.Bwlacnbl ELSE 0 END) Cancel_Oustam, SUM(CASE WHEN t.Lncfst = 'CHRGO' AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Loan_Balance ELSE 0 END) AS Cancel_Shop_Balance, SUM(CASE WHEN t.Lncfst = 'CHRGO' AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Bnlacnbl ELSE 0 END) Cancel_Shop_Instam, SUM(CASE WHEN t.Lncfst = 'CHRGO' AND Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Bwlacnbl ELSE 0 END) Cancel_Shop_Oustam, SUM(t.Bnlacnbl) Instam, SUM(t.Bwlacnbl) Oustam, SUM(CASE WHEN Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Bnlacnbl ELSE 0 END) Shop_Instam, SUM(CASE WHEN Substr(t.Itemno, 1, 6) IN ('130116', '130117', '130118', '130136', '130137', '130138', '130411', '130431') THEN t.Bwlacnbl ELSE 0 END) Shop_Oustam, CASE WHEN t.Inputno = '999999' THEN '999999' ELSE t.Inputno END as value1, CASE WHEN t.Brupno IS NULL THEN ' ' ELSE t.Brupno END as value2 FROM Dm_Rpt_02019 t WHERE t.Data_Dt = '19940130' GROUP BY value1,value2;";
//sql="SELECT '19940130',t.Inputno, CASE WHEN t.Inputno = '999999' THEN '80014' ELSE t.Inputno END, CASE WHEN t.Inputno = ' ' THEN '江南农商行总行卡与消费金融事业部' ELSE '' END , SUM(Nvl(t.Normal_Balance, 0)) , SUM(Nvl(t.Normal_Instam, 0)) , SUM(Nvl(t.Normal_Oustam, 0)) , SUM(Nvl(t.Normal_Shop_Balance, 0)) , SUM(Nvl(t.Normal_Shop_Instam, 0)) , SUM(Nvl(t.Normal_Shop_Oustam, 0)) , SUM(Nvl(t.Over_Balance, 0)) , SUM(Nvl(t.Over_Instam, 0)) , SUM(Nvl(t.Over_Oustam, 0)) , SUM(Nvl(t.Over_Shop_Balance, 0)) , SUM(Nvl(t.Over_Shop_Instam, 0)) , SUM(Nvl(t.Over_Shop_Oustam, 0)) , SUM(Nvl(t.Cancel_Balance, 0)) , SUM(Nvl(t.Cancel_Instam, 0)) , SUM(Nvl(t.Cancel_Oustam, 0)) , SUM(Nvl(t.Cancel_Shop_Balance, 0)) , SUM(Nvl(t.Cancel_Shop_Instam, 0)) , SUM(Nvl(t.Cancel_Shop_Oustam, 0)) FROM DM_RPT_02010_TEMP t WHERE t.Inputno = '8599' GROUP BY t.Inputno;";
//sql="select * from DM_RPT_02019;";
//sql="drop table DM_RPT_02019;";
//sql="CREATE TABLE DM_RPT_02010_TEMP (     INPUTNO VARCHAR(4),     BRUPNO VARCHAR(1),     BRCHNA VARCHAR(1),     NORMAL_BALANCE INT,     NORMAL_INSTAM INT,     NORMAL_OUSTAM INT,     NORMAL_SHOP_BALANCE INT,     NORMAL_SHOP_INSTAM INT,     NORMAL_SHOP_OUSTAM INT,     OVER_BALANCE INT,     OVER_INSTAM INT,     OVER_OUSTAM INT,     OVER_SHOP_BALANCE INT,     OVER_SHOP_INSTAM INT,     OVER_SHOP_OUSTAM INT,     CANCEL_BALANCE INT,     CANCEL_INSTAM INT,     CANCEL_OUSTAM INT,     CANCEL_SHOP_BALANCE INT,     CANCEL_SHOP_INSTAM INT,     CANCEL_SHOP_OUSTAM INT,     INSTAM INT,     OUSTAM INT,     SHOP_INSTAM INT,     SHOP_OUSTAM INT ) ;";
//sql="select Inputno from DM_RPT_02010_TEMP;";
sql="select case when Inputno >'3333'  then (select Inputno from DM_RPT_02019 )  else Inputno end from DM_RPT_02010_TEMP;";
sql="select case when  Inputno in (select Inputno from DM_RPT_02019) then count(1) else 0 end from DM_RPT_02010_TEMP;";
sql="select count(1),Inputno from DM_RPT_02019 where Inputno in ('9999') group by Inputno;";

sql="drop table tempa;";
sql="create table tempa(date1 varchar(24),date2 varchar(24));";
sql="insert into tempa(date1,date2) values('20171228','2019');";
//sql="insert into tempa(date1,date2) values('2017-12-27 00:11:33','2020');";
//sql="insert into tempa(date1,date2) values('2018','2021');";
//sql="create table tempaa(date1 varchar(24),date2 varchar(24));";
//sql="insert into tempaa(date1,date2) values('2019','2019');";
//sql="insert into tempaa(date1,date2) values('20171122','2019');";

//sql="select count(1) from tempa where tempa.date1 in (select tempaa.date1 from tempaa) ;";
//sql="select count(1),tempa.date1 from tempa  group by tempa.date1;";
//sql="select count(1) from tempa where date1='22';";
//sql="select * from tempa;";

//sql="select * from tempa where cast(to_char(to_date('2017-12-27','YYYY-MM-DD'),'YYYYMMDD') as int) = cast(to_char(to_date(date1,'YYYYMMDD'),'YYYYMMDD') as int);";
sql="select * from tempa where to_date('20171227','YYYYMMDD') = to_date(date1,'YYYYMMDD');";

//sql="select from_timestamp('20171227','YYYY-MM-DD');";
//sql="select to_char(to_date('20171227','YYYYMMDD'),'YYYY-MM-DD');";
//sql="select to_date('20171227','YYYYMMDD');";
//sql="select to_char(1514304000,'YYYY-MM-DD');";
//sql="select to_char(to_date('2017-12-27','YYYY-MM-DD'),'YYYYMMDD');";
//sql="select date1,to_date(date1,'YYYYMMDD'), to_date('20171227','YYYYMMDD') from tempa;";
//sql="select date1 from tempa;";
//sql="create table tempb(id varchar(24));";
//sql="insert into tempb(id) select date1,date2 from tempaa;";
sql="select * from tempA WHERE date1 < '20171229';";
sql="select * from tempa;";	
//sql="insert into tempa(date1,date2) values('2017-12-28 00:00:01','2017-12-28');";
sql="select to_char(to_date(date1,'YYYY-MM-0DD hh:mi:ss'),'YYYY-MM-DD hh:mi:ss'),to_date(date1,'YYYY-MM-DD'),to_date(date2,'YYYY-MM-DD') from tempa;";
//sql="ELECT COUNT(1)   FROM  C_CODE_BRCH T WHERE    T.BRCHNO_V7 in (select Brchno from C_Par_Brch_Level where Brchlv = '3') ;";
sql="insert into tempv SELECT COUNT(1),TO_DATE('20110717', 'YYYYMMDD') as DT   FROM  C_CODE_BRCH T WHERE    T.BRCHNO_V7 in (select Brchno from C_Par_Brch_Level where Brchlv = '3' AND Data_Dt='20110717') group by DT;";
//sql="select Brchno from C_Par_Brch_Level where Brchlv = '3'  AND Data_Dt='20110717';";
sql="select BRCHNO_V5,cast(cast(BRCHNO_V5 as int)+1 as varchar) from C_CODE_BRCH;";
//sql="CREATE TABLE C_CODE_BRCH (BRCHNO_V5 VARCHAR(6),BRCHNO_V7 VARCHAR(6));";
//sql="create table tempv(V_ABC int,DT varchar(28));";
//sql="SELECT T.BRCHNO_V5  FROM CMDATA.C_CODE_BRCH T cross join  TEMPV v on T.BRCHNO_V5=v.DT   WHERE T.BRCHNO_V7  in (select Brchno from C_Par_Brch_Level where Brchlv = '3' AND Data_Dt='20110717') and v.V_ABC = 1 AND v.DT < '20180505';";
sql="select to_char(to_date('20171229','YYYYMMDD')+86400,'YYYYMMDD'),to_date('20171229','YYYYMMDD')-to_date('20171228','YYYYMMDD');";

sql="select to_char(to_date(Data_Dt,'YYYYMMDD')+86400,'YYYYMMDD') from C_Par_Brch_Level where Brchlv = '3'  AND Data_Dt='20110717';";

sql="select (to_date('20130126','YYYYMMDD')-least(to_date(nvl(Data_Dt,'20130126'),'YYYYMMDD'),to_date(nvl(Data_Dt,'20130126'),'YYYYMMDD'))+86400)/86400  from C_Par_Brch_Level where Brchlv = '3'  AND Data_Dt='20110717';";
//sql="select * from C_Par_Brch_Level where Brchlv = '3'  AND Data_Dt='20110717';";
//sql="select (to_date('19700103','YYYYMMDD')-to_date('19700102','YYYYMMDD'))/86400;";

sql="select COUNT(1)   FROM  C_CODE_BRCH T WHERE  T.BRCHNO_V7 not in (select Data_Dt from C_Par_Brch_Level where Brchlv = '3') ;";
//sql="select * from C_CODE_BRCH where BRCHNO_V7 not in('0244000000','23471212121','03982435135135');";
//sql="select Data_Dt from C_Par_Brch_Level where Brchlv = '3';";
sql="select datediff('2013-01-26' , to_char(to_date(LEAST(NVL(BJ_YQRQ, '20130126'), NVL(LX_YQRQ, '20130126')),'YYYYMMDD'),'YYYY-MM-DD') ) from DM_RPT_09012;";
//sql="select datediff('2013-01-26' ,'2013-01-25');";




  // 查询方法中1，10为分页参数：第1页，每页10条数据
		// 设置0,0为不分页查询
        
		PageBean2 page = api.search(sql, 0, 0);//GpuSearchAPI//GpuAnalyFileService
		
		if (page != null) {
			List<String> list = page.getRows();
			int i = 0;
			for (String string : list) {
				System.out.println(string);
				i++;
				// 10为Console窗口中打印的结果集条数
				if (i > 50) {
					break;
				}
			}
		}
		
	}

	private static void init() {
		// TODO Auto-generated method stub
		new Hex();
		SocketIO socket = null;
		try {
			ConnectPool connPool = ConnectPool.getInstance(Client.gpuHostName, Client.gpuSearchport,
					Client.sockectPoolNumber);
			socket = connPool.getConnect();
			if (socket.IsConnected() == false) {
				if (!socket.connectHSM(Client.gpuHostName, Client.gpuSearchport, Client.timeOut)) {
					connPool.putConnect(socket);
				}
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
